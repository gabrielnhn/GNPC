Terminals unused in grammar

    s1
    s2
    s3
    s4
    LABEL
    TYPE
    ARRAY
    OF
    GOTO
    OR
    AND
    NOT


State 98 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 $@1: ε

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    3 block: declaring_vars_block declaring_procedures_block compound_command

    4 declaring_vars_block: VAR declare_vars
    5                     | ε

    6 declare_vars: declare_vars declare_var
    7             | declare_var

    8 $@2: ε

    9 $@3: ε

   10 declare_var: $@2 id_simple_var_list COLON type $@3 SEMICOLON

   11 type: IDENT

   12 id_simple_var_list: id_simple_var_list COMMA IDENT
   13                   | IDENT

   14 idents_list: idents_list COMMA IDENT
   15            | IDENT

   16 declaring_procedures_block: procedures
   17                           | ε

   18 procedures: procedures procedure_def
   19           | procedure_def

   20 $@4: ε

   21 procedure_def: PROCEDURE IDENT $@4 procedure_params SEMICOLON block

   22 $@5: ε

   23 $@6: ε

   24 procedure_params: OPEN_PARENTHESIS $@5 declare_params $@6 CLOSE_PARENTHESIS
   25                 | ε

   26 declare_params: declare_params declare_param
   27               | declare_param

   28 $@7: ε

   29 $@8: ε

   30 declare_param: by_reference_or_not $@7 id_param_list COLON type $@8 optional_semicolon

   31 by_reference_or_not: VAR
   32                    | ε

   33 id_param_list: id_param_list COMMA IDENT
   34              | IDENT

   35 optional_semicolon: SEMICOLON
   36                   | ε

   37 compound_command: T_BEGIN commands T_END

   38 commands: commands command
   39         | command

   40 command: assignment_operation
   41        | loop
   42        | conditional
   43        | read
   44        | write
   45        | procedure_call

   46 $@9: ε

   47 procedure_call: IDENT $@9 OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS SEMICOLON

   48 procedure_arguments: args_list

   49 args_list: args_list COMMA ARGUMENT
   50          | ARGUMENT

   51 ARGUMENT: IDENT
   52         | boolean_expr

   53 $@10: ε

   54 read: READ OPEN_PARENTHESIS IDENT $@10 CLOSE_PARENTHESIS SEMICOLON

   55 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

   56 write_boolean_expr_list: write_boolean_expr_list COMMA boolean_expr
   57                        | boolean_expr

   58 $@11: ε

   59 $@12: ε

   60 loop: WHILE $@11 boolean_expr $@12 DO command

   61 conditional: if_then cond_else

   62 $@13: ε

   63 if_then: IF boolean_expr $@13 THEN command

   64 $@14: ε

   65 cond_else: ELSE $@14 command
   66          | ε

   67 $@15: ε

   68 assignment_operation: IDENT $@15 ASSIGNMENT boolean_expr SEMICOLON

   69 boolean_expr: arithmetic_expr
   70             | boolean_expr EQUAL arithmetic_expr
   71             | boolean_expr DIFFERENT arithmetic_expr
   72             | boolean_expr LESS_OR_EQUAL arithmetic_expr
   73             | boolean_expr LESS arithmetic_expr
   74             | boolean_expr MORE_OR_EQUAL arithmetic_expr
   75             | boolean_expr MORE arithmetic_expr

   76 arithmetic_expr: E

   77 E: E PLUS T
   78  | E MINUS T
   79  | T

   80 T: T ASTERISK F
   81  | T DIV F
   82  | F

   83 F: NUMBER
   84  | IDENT
   85  | OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    s1 <text> (258)
    s2 <text> (259)
    s3 <ival> (260)
    s4 <dub> (261)
    PROGRAM (262) 2
    OPEN_PARENTHESIS (263) 2 24 47 54 55 85
    CLOSE_PARENTHESIS (264) 2 24 47 54 55 85
    COMMA (265) 12 14 33 49 56
    SEMICOLON (266) 2 10 21 35 47 54 55 68
    COLON (267) 10 30
    DOT (268) 2
    T_BEGIN (269) 37
    T_END (270) 37
    VAR (271) 4 31
    IDENT (272) 2 11 12 13 14 15 21 33 34 47 51 54 68 84
    ASSIGNMENT (273) 68
    LABEL (274)
    TYPE (275)
    ARRAY (276)
    OF (277)
    PROCEDURE (278) 21
    GOTO (279)
    IF (280) 63
    THEN (281) 63
    ELSE (282) 65
    WHILE (283) 60
    DO (284) 60
    OR (285)
    AND (286)
    NOT (287)
    DIV (288) 81
    ASTERISK (289) 80
    PLUS (290) 77
    MINUS (291) 78
    EQUAL (292) 70
    DIFFERENT (293) 71
    LESS_OR_EQUAL (294) 72
    LESS (295) 73
    MORE_OR_EQUAL (296) 74
    MORE (297) 75
    NUMBER (298) 83
    READ (299) 54
    WRITE (300) 55
    LOWER_THAN_ELSE (301)


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    program (48)
        on left: 2
        on right: 0
    $@1 (49)
        on left: 1
        on right: 2
    block (50)
        on left: 3
        on right: 2 21
    declaring_vars_block (51)
        on left: 4 5
        on right: 3
    declare_vars (52)
        on left: 6 7
        on right: 4 6
    declare_var (53)
        on left: 10
        on right: 6 7
    $@2 (54)
        on left: 8
        on right: 10
    $@3 (55)
        on left: 9
        on right: 10
    type (56)
        on left: 11
        on right: 10 30
    id_simple_var_list (57)
        on left: 12 13
        on right: 10 12
    idents_list (58)
        on left: 14 15
        on right: 2 14
    declaring_procedures_block (59)
        on left: 16 17
        on right: 3
    procedures (60)
        on left: 18 19
        on right: 16 18
    procedure_def (61)
        on left: 21
        on right: 18 19
    $@4 (62)
        on left: 20
        on right: 21
    procedure_params (63)
        on left: 24 25
        on right: 21
    $@5 (64)
        on left: 22
        on right: 24
    $@6 (65)
        on left: 23
        on right: 24
    declare_params (66)
        on left: 26 27
        on right: 24 26
    declare_param (67)
        on left: 30
        on right: 26 27
    $@7 (68)
        on left: 28
        on right: 30
    $@8 (69)
        on left: 29
        on right: 30
    by_reference_or_not (70)
        on left: 31 32
        on right: 30
    id_param_list (71)
        on left: 33 34
        on right: 30 33
    optional_semicolon (72)
        on left: 35 36
        on right: 30
    compound_command (73)
        on left: 37
        on right: 3
    commands (74)
        on left: 38 39
        on right: 37 38
    command (75)
        on left: 40 41 42 43 44 45
        on right: 38 39 60 63 65
    procedure_call (76)
        on left: 47
        on right: 45
    $@9 (77)
        on left: 46
        on right: 47
    procedure_arguments (78)
        on left: 48
        on right: 47
    args_list (79)
        on left: 49 50
        on right: 48 49
    ARGUMENT (80)
        on left: 51 52
        on right: 49 50
    read (81)
        on left: 54
        on right: 43
    $@10 (82)
        on left: 53
        on right: 54
    write (83)
        on left: 55
        on right: 44
    write_boolean_expr_list (84)
        on left: 56 57
        on right: 55 56
    loop (85)
        on left: 60
        on right: 41
    $@11 (86)
        on left: 58
        on right: 60
    $@12 (87)
        on left: 59
        on right: 60
    conditional (88)
        on left: 61
        on right: 42
    if_then (89)
        on left: 63
        on right: 61
    $@13 (90)
        on left: 62
        on right: 63
    cond_else (91)
        on left: 65 66
        on right: 61
    $@14 (92)
        on left: 64
        on right: 65
    assignment_operation (93)
        on left: 68
        on right: 40
    $@15 (94)
        on left: 67
        on right: 68
    boolean_expr (95)
        on left: 69 70 71 72 73 74 75
        on right: 52 56 57 60 63 68 70 71 72 73 74 75 85
    arithmetic_expr (96)
        on left: 76
        on right: 69 70 71 72 73 74 75
    E (97)
        on left: 77 78 79
        on right: 76 77 78
    T (98)
        on left: 80 81 82
        on right: 77 78 79 80 81
    F (99)
        on left: 83 84 85
        on right: 80 81 82


State 0

    0 $accept: • program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 • PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end •

    $default  accept


State 4

    2 program: $@1 PROGRAM • IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 5


State 5

    2 program: $@1 PROGRAM IDENT • OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    OPEN_PARENTHESIS  shift, and go to state 6


State 6

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS • idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 7

    idents_list  go to state 8


State 7

   15 idents_list: IDENT •

    $default  reduce using rule 15 (idents_list)


State 8

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list • CLOSE_PARENTHESIS SEMICOLON block DOT
   14 idents_list: idents_list • COMMA IDENT

    CLOSE_PARENTHESIS  shift, and go to state 9
    COMMA              shift, and go to state 10


State 9

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS • SEMICOLON block DOT

    SEMICOLON  shift, and go to state 11


State 10

   14 idents_list: idents_list COMMA • IDENT

    IDENT  shift, and go to state 12


State 11

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON • block DOT

    VAR  shift, and go to state 13

    T_BEGIN    reduce using rule 5 (declaring_vars_block)
    PROCEDURE  reduce using rule 5 (declaring_vars_block)

    block                 go to state 14
    declaring_vars_block  go to state 15


State 12

   14 idents_list: idents_list COMMA IDENT •

    $default  reduce using rule 14 (idents_list)


State 13

    4 declaring_vars_block: VAR • declare_vars

    $default  reduce using rule 8 ($@2)

    declare_vars  go to state 16
    declare_var   go to state 17
    $@2           go to state 18


State 14

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block • DOT

    DOT  shift, and go to state 19


State 15

    3 block: declaring_vars_block • declaring_procedures_block compound_command

    PROCEDURE  shift, and go to state 20

    T_BEGIN  reduce using rule 17 (declaring_procedures_block)

    declaring_procedures_block  go to state 21
    procedures                  go to state 22
    procedure_def               go to state 23


State 16

    4 declaring_vars_block: VAR declare_vars •
    6 declare_vars: declare_vars • declare_var

    T_BEGIN    reduce using rule 4 (declaring_vars_block)
    IDENT      reduce using rule 8 ($@2)
    PROCEDURE  reduce using rule 4 (declaring_vars_block)

    declare_var  go to state 24
    $@2          go to state 18


State 17

    7 declare_vars: declare_var •

    $default  reduce using rule 7 (declare_vars)


State 18

   10 declare_var: $@2 • id_simple_var_list COLON type $@3 SEMICOLON

    IDENT  shift, and go to state 25

    id_simple_var_list  go to state 26


State 19

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT •

    $default  reduce using rule 2 (program)


State 20

   21 procedure_def: PROCEDURE • IDENT $@4 procedure_params SEMICOLON block

    IDENT  shift, and go to state 27


State 21

    3 block: declaring_vars_block declaring_procedures_block • compound_command

    T_BEGIN  shift, and go to state 28

    compound_command  go to state 29


State 22

   16 declaring_procedures_block: procedures •
   18 procedures: procedures • procedure_def

    PROCEDURE  shift, and go to state 20

    T_BEGIN  reduce using rule 16 (declaring_procedures_block)

    procedure_def  go to state 30


State 23

   19 procedures: procedure_def •

    $default  reduce using rule 19 (procedures)


State 24

    6 declare_vars: declare_vars declare_var •

    $default  reduce using rule 6 (declare_vars)


State 25

   13 id_simple_var_list: IDENT •

    $default  reduce using rule 13 (id_simple_var_list)


State 26

   10 declare_var: $@2 id_simple_var_list • COLON type $@3 SEMICOLON
   12 id_simple_var_list: id_simple_var_list • COMMA IDENT

    COMMA  shift, and go to state 31
    COLON  shift, and go to state 32


State 27

   21 procedure_def: PROCEDURE IDENT • $@4 procedure_params SEMICOLON block

    $default  reduce using rule 20 ($@4)

    $@4  go to state 33


State 28

   37 compound_command: T_BEGIN • commands T_END

    IDENT  shift, and go to state 34
    IF     shift, and go to state 35
    WHILE  shift, and go to state 36
    READ   shift, and go to state 37
    WRITE  shift, and go to state 38

    commands              go to state 39
    command               go to state 40
    procedure_call        go to state 41
    read                  go to state 42
    write                 go to state 43
    loop                  go to state 44
    conditional           go to state 45
    if_then               go to state 46
    assignment_operation  go to state 47


State 29

    3 block: declaring_vars_block declaring_procedures_block compound_command •

    $default  reduce using rule 3 (block)


State 30

   18 procedures: procedures procedure_def •

    $default  reduce using rule 18 (procedures)


State 31

   12 id_simple_var_list: id_simple_var_list COMMA • IDENT

    IDENT  shift, and go to state 48


State 32

   10 declare_var: $@2 id_simple_var_list COLON • type $@3 SEMICOLON

    IDENT  shift, and go to state 49

    type  go to state 50


State 33

   21 procedure_def: PROCEDURE IDENT $@4 • procedure_params SEMICOLON block

    OPEN_PARENTHESIS  shift, and go to state 51

    SEMICOLON  reduce using rule 25 (procedure_params)

    procedure_params  go to state 52


State 34

   47 procedure_call: IDENT • $@9 OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS SEMICOLON
   68 assignment_operation: IDENT • $@15 ASSIGNMENT boolean_expr SEMICOLON

    OPEN_PARENTHESIS  reduce using rule 46 ($@9)
    ASSIGNMENT        reduce using rule 67 ($@15)

    $@9   go to state 53
    $@15  go to state 54


State 35

   63 if_then: IF • boolean_expr $@13 THEN command

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr     go to state 58
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 36

   60 loop: WHILE • $@11 boolean_expr $@12 DO command

    $default  reduce using rule 58 ($@11)

    $@11  go to state 63


State 37

   54 read: READ • OPEN_PARENTHESIS IDENT $@10 CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 64


State 38

   55 write: WRITE • OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 65


State 39

   37 compound_command: T_BEGIN commands • T_END
   38 commands: commands • command

    T_END  shift, and go to state 66
    IDENT  shift, and go to state 34
    IF     shift, and go to state 35
    WHILE  shift, and go to state 36
    READ   shift, and go to state 37
    WRITE  shift, and go to state 38

    command               go to state 67
    procedure_call        go to state 41
    read                  go to state 42
    write                 go to state 43
    loop                  go to state 44
    conditional           go to state 45
    if_then               go to state 46
    assignment_operation  go to state 47


State 40

   39 commands: command •

    $default  reduce using rule 39 (commands)


State 41

   45 command: procedure_call •

    $default  reduce using rule 45 (command)


State 42

   43 command: read •

    $default  reduce using rule 43 (command)


State 43

   44 command: write •

    $default  reduce using rule 44 (command)


State 44

   41 command: loop •

    $default  reduce using rule 41 (command)


State 45

   42 command: conditional •

    $default  reduce using rule 42 (command)


State 46

   61 conditional: if_then • cond_else

    ELSE  shift, and go to state 68

    T_END  reduce using rule 66 (cond_else)
    IDENT  reduce using rule 66 (cond_else)
    IF     reduce using rule 66 (cond_else)
    WHILE  reduce using rule 66 (cond_else)
    READ   reduce using rule 66 (cond_else)
    WRITE  reduce using rule 66 (cond_else)

    cond_else  go to state 69


State 47

   40 command: assignment_operation •

    $default  reduce using rule 40 (command)


State 48

   12 id_simple_var_list: id_simple_var_list COMMA IDENT •

    $default  reduce using rule 12 (id_simple_var_list)


State 49

   11 type: IDENT •

    $default  reduce using rule 11 (type)


State 50

   10 declare_var: $@2 id_simple_var_list COLON type • $@3 SEMICOLON

    $default  reduce using rule 9 ($@3)

    $@3  go to state 70


State 51

   24 procedure_params: OPEN_PARENTHESIS • $@5 declare_params $@6 CLOSE_PARENTHESIS

    $default  reduce using rule 22 ($@5)

    $@5  go to state 71


State 52

   21 procedure_def: PROCEDURE IDENT $@4 procedure_params • SEMICOLON block

    SEMICOLON  shift, and go to state 72


State 53

   47 procedure_call: IDENT $@9 • OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 73


State 54

   68 assignment_operation: IDENT $@15 • ASSIGNMENT boolean_expr SEMICOLON

    ASSIGNMENT  shift, and go to state 74


State 55

   85 F: OPEN_PARENTHESIS • boolean_expr CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr     go to state 75
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 56

   84 F: IDENT •

    $default  reduce using rule 84 (F)


State 57

   83 F: NUMBER •

    $default  reduce using rule 83 (F)


State 58

   63 if_then: IF boolean_expr • $@13 THEN command
   70 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   71             | boolean_expr • DIFFERENT arithmetic_expr
   72             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   73             | boolean_expr • LESS arithmetic_expr
   74             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   75             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 76
    DIFFERENT      shift, and go to state 77
    LESS_OR_EQUAL  shift, and go to state 78
    LESS           shift, and go to state 79
    MORE_OR_EQUAL  shift, and go to state 80
    MORE           shift, and go to state 81

    THEN  reduce using rule 62 ($@13)

    $@13  go to state 82


State 59

   69 boolean_expr: arithmetic_expr •

    $default  reduce using rule 69 (boolean_expr)


State 60

   76 arithmetic_expr: E •
   77 E: E • PLUS T
   78  | E • MINUS T

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    CLOSE_PARENTHESIS  reduce using rule 76 (arithmetic_expr)
    COMMA              reduce using rule 76 (arithmetic_expr)
    SEMICOLON          reduce using rule 76 (arithmetic_expr)
    THEN               reduce using rule 76 (arithmetic_expr)
    DO                 reduce using rule 76 (arithmetic_expr)
    EQUAL              reduce using rule 76 (arithmetic_expr)
    DIFFERENT          reduce using rule 76 (arithmetic_expr)
    LESS_OR_EQUAL      reduce using rule 76 (arithmetic_expr)
    LESS               reduce using rule 76 (arithmetic_expr)
    MORE_OR_EQUAL      reduce using rule 76 (arithmetic_expr)
    MORE               reduce using rule 76 (arithmetic_expr)


State 61

   79 E: T •
   80 T: T • ASTERISK F
   81  | T • DIV F

    DIV       shift, and go to state 85
    ASTERISK  shift, and go to state 86

    CLOSE_PARENTHESIS  reduce using rule 79 (E)
    COMMA              reduce using rule 79 (E)
    SEMICOLON          reduce using rule 79 (E)
    THEN               reduce using rule 79 (E)
    DO                 reduce using rule 79 (E)
    PLUS               reduce using rule 79 (E)
    MINUS              reduce using rule 79 (E)
    EQUAL              reduce using rule 79 (E)
    DIFFERENT          reduce using rule 79 (E)
    LESS_OR_EQUAL      reduce using rule 79 (E)
    LESS               reduce using rule 79 (E)
    MORE_OR_EQUAL      reduce using rule 79 (E)
    MORE               reduce using rule 79 (E)


State 62

   82 T: F •

    $default  reduce using rule 82 (T)


State 63

   60 loop: WHILE $@11 • boolean_expr $@12 DO command

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr     go to state 87
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 64

   54 read: READ OPEN_PARENTHESIS • IDENT $@10 CLOSE_PARENTHESIS SEMICOLON

    IDENT  shift, and go to state 88


State 65

   55 write: WRITE OPEN_PARENTHESIS • write_boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    write_boolean_expr_list  go to state 89
    boolean_expr             go to state 90
    arithmetic_expr          go to state 59
    E                        go to state 60
    T                        go to state 61
    F                        go to state 62


State 66

   37 compound_command: T_BEGIN commands T_END •

    $default  reduce using rule 37 (compound_command)


State 67

   38 commands: commands command •

    $default  reduce using rule 38 (commands)


State 68

   65 cond_else: ELSE • $@14 command

    $default  reduce using rule 64 ($@14)

    $@14  go to state 91


State 69

   61 conditional: if_then cond_else •

    $default  reduce using rule 61 (conditional)


State 70

   10 declare_var: $@2 id_simple_var_list COLON type $@3 • SEMICOLON

    SEMICOLON  shift, and go to state 92


State 71

   24 procedure_params: OPEN_PARENTHESIS $@5 • declare_params $@6 CLOSE_PARENTHESIS

    VAR  shift, and go to state 93

    IDENT  reduce using rule 32 (by_reference_or_not)

    declare_params       go to state 94
    declare_param        go to state 95
    by_reference_or_not  go to state 96


State 72

   21 procedure_def: PROCEDURE IDENT $@4 procedure_params SEMICOLON • block

    VAR  shift, and go to state 13

    T_BEGIN    reduce using rule 5 (declaring_vars_block)
    PROCEDURE  reduce using rule 5 (declaring_vars_block)

    block                 go to state 97
    declaring_vars_block  go to state 15


State 73

   47 procedure_call: IDENT $@9 OPEN_PARENTHESIS • procedure_arguments CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 98
    NUMBER            shift, and go to state 57

    procedure_arguments  go to state 99
    args_list            go to state 100
    ARGUMENT             go to state 101
    boolean_expr         go to state 102
    arithmetic_expr      go to state 59
    E                    go to state 60
    T                    go to state 61
    F                    go to state 62


State 74

   68 assignment_operation: IDENT $@15 ASSIGNMENT • boolean_expr SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr     go to state 103
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 75

   70 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   71             | boolean_expr • DIFFERENT arithmetic_expr
   72             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   73             | boolean_expr • LESS arithmetic_expr
   74             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   75             | boolean_expr • MORE arithmetic_expr
   85 F: OPEN_PARENTHESIS boolean_expr • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 104
    EQUAL              shift, and go to state 76
    DIFFERENT          shift, and go to state 77
    LESS_OR_EQUAL      shift, and go to state 78
    LESS               shift, and go to state 79
    MORE_OR_EQUAL      shift, and go to state 80
    MORE               shift, and go to state 81


State 76

   70 boolean_expr: boolean_expr EQUAL • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 105
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 77

   71 boolean_expr: boolean_expr DIFFERENT • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 106
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 78

   72 boolean_expr: boolean_expr LESS_OR_EQUAL • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 107
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 79

   73 boolean_expr: boolean_expr LESS • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 108
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 80

   74 boolean_expr: boolean_expr MORE_OR_EQUAL • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 109
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 81

   75 boolean_expr: boolean_expr MORE • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 110
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 82

   63 if_then: IF boolean_expr $@13 • THEN command

    THEN  shift, and go to state 111


State 83

   77 E: E PLUS • T

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    T  go to state 112
    F  go to state 62


State 84

   78 E: E MINUS • T

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    T  go to state 113
    F  go to state 62


State 85

   81 T: T DIV • F

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    F  go to state 114


State 86

   80 T: T ASTERISK • F

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    F  go to state 115


State 87

   60 loop: WHILE $@11 boolean_expr • $@12 DO command
   70 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   71             | boolean_expr • DIFFERENT arithmetic_expr
   72             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   73             | boolean_expr • LESS arithmetic_expr
   74             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   75             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 76
    DIFFERENT      shift, and go to state 77
    LESS_OR_EQUAL  shift, and go to state 78
    LESS           shift, and go to state 79
    MORE_OR_EQUAL  shift, and go to state 80
    MORE           shift, and go to state 81

    DO  reduce using rule 59 ($@12)

    $@12  go to state 116


State 88

   54 read: READ OPEN_PARENTHESIS IDENT • $@10 CLOSE_PARENTHESIS SEMICOLON

    $default  reduce using rule 53 ($@10)

    $@10  go to state 117


State 89

   55 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list • CLOSE_PARENTHESIS SEMICOLON
   56 write_boolean_expr_list: write_boolean_expr_list • COMMA boolean_expr

    CLOSE_PARENTHESIS  shift, and go to state 118
    COMMA              shift, and go to state 119


State 90

   57 write_boolean_expr_list: boolean_expr •
   70 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   71             | boolean_expr • DIFFERENT arithmetic_expr
   72             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   73             | boolean_expr • LESS arithmetic_expr
   74             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   75             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 76
    DIFFERENT      shift, and go to state 77
    LESS_OR_EQUAL  shift, and go to state 78
    LESS           shift, and go to state 79
    MORE_OR_EQUAL  shift, and go to state 80
    MORE           shift, and go to state 81

    CLOSE_PARENTHESIS  reduce using rule 57 (write_boolean_expr_list)
    COMMA              reduce using rule 57 (write_boolean_expr_list)


State 91

   65 cond_else: ELSE $@14 • command

    IDENT  shift, and go to state 34
    IF     shift, and go to state 35
    WHILE  shift, and go to state 36
    READ   shift, and go to state 37
    WRITE  shift, and go to state 38

    command               go to state 120
    procedure_call        go to state 41
    read                  go to state 42
    write                 go to state 43
    loop                  go to state 44
    conditional           go to state 45
    if_then               go to state 46
    assignment_operation  go to state 47


State 92

   10 declare_var: $@2 id_simple_var_list COLON type $@3 SEMICOLON •

    $default  reduce using rule 10 (declare_var)


State 93

   31 by_reference_or_not: VAR •

    $default  reduce using rule 31 (by_reference_or_not)


State 94

   24 procedure_params: OPEN_PARENTHESIS $@5 declare_params • $@6 CLOSE_PARENTHESIS
   26 declare_params: declare_params • declare_param

    VAR  shift, and go to state 93

    CLOSE_PARENTHESIS  reduce using rule 23 ($@6)
    IDENT              reduce using rule 32 (by_reference_or_not)

    $@6                  go to state 121
    declare_param        go to state 122
    by_reference_or_not  go to state 96


State 95

   27 declare_params: declare_param •

    $default  reduce using rule 27 (declare_params)


State 96

   30 declare_param: by_reference_or_not • $@7 id_param_list COLON type $@8 optional_semicolon

    $default  reduce using rule 28 ($@7)

    $@7  go to state 123


State 97

   21 procedure_def: PROCEDURE IDENT $@4 procedure_params SEMICOLON block •

    $default  reduce using rule 21 (procedure_def)


State 98

   51 ARGUMENT: IDENT •
   84 F: IDENT •

    CLOSE_PARENTHESIS  reduce using rule 51 (ARGUMENT)
    CLOSE_PARENTHESIS  [reduce using rule 84 (F)]
    COMMA              reduce using rule 51 (ARGUMENT)
    COMMA              [reduce using rule 84 (F)]
    DIV                reduce using rule 84 (F)
    ASTERISK           reduce using rule 84 (F)
    PLUS               reduce using rule 84 (F)
    MINUS              reduce using rule 84 (F)
    EQUAL              reduce using rule 84 (F)
    DIFFERENT          reduce using rule 84 (F)
    LESS_OR_EQUAL      reduce using rule 84 (F)
    LESS               reduce using rule 84 (F)
    MORE_OR_EQUAL      reduce using rule 84 (F)
    MORE               reduce using rule 84 (F)

    reduce/reduce conflict on tokens CLOSE_PARENTHESIS, COMMA:
       51 ARGUMENT: IDENT •
       84 F: IDENT •
      Example: IDENT •
      First reduce derivation
        ARGUMENT
        ↳ 51: IDENT •
      Second reduce derivation
        ARGUMENT
        ↳ 52: boolean_expr
              ↳ 69: arithmetic_expr
                    ↳ 76: E
                          ↳ 79: T
                                ↳ 82: F
                                      ↳ 84: IDENT •



State 99

   47 procedure_call: IDENT $@9 OPEN_PARENTHESIS procedure_arguments • CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 124


State 100

   48 procedure_arguments: args_list •
   49 args_list: args_list • COMMA ARGUMENT

    COMMA  shift, and go to state 125

    CLOSE_PARENTHESIS  reduce using rule 48 (procedure_arguments)


State 101

   50 args_list: ARGUMENT •

    $default  reduce using rule 50 (args_list)


State 102

   52 ARGUMENT: boolean_expr •
   70 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   71             | boolean_expr • DIFFERENT arithmetic_expr
   72             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   73             | boolean_expr • LESS arithmetic_expr
   74             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   75             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 76
    DIFFERENT      shift, and go to state 77
    LESS_OR_EQUAL  shift, and go to state 78
    LESS           shift, and go to state 79
    MORE_OR_EQUAL  shift, and go to state 80
    MORE           shift, and go to state 81

    CLOSE_PARENTHESIS  reduce using rule 52 (ARGUMENT)
    COMMA              reduce using rule 52 (ARGUMENT)


State 103

   68 assignment_operation: IDENT $@15 ASSIGNMENT boolean_expr • SEMICOLON
   70 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   71             | boolean_expr • DIFFERENT arithmetic_expr
   72             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   73             | boolean_expr • LESS arithmetic_expr
   74             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   75             | boolean_expr • MORE arithmetic_expr

    SEMICOLON      shift, and go to state 126
    EQUAL          shift, and go to state 76
    DIFFERENT      shift, and go to state 77
    LESS_OR_EQUAL  shift, and go to state 78
    LESS           shift, and go to state 79
    MORE_OR_EQUAL  shift, and go to state 80
    MORE           shift, and go to state 81


State 104

   85 F: OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS •

    $default  reduce using rule 85 (F)


State 105

   70 boolean_expr: boolean_expr EQUAL arithmetic_expr •

    $default  reduce using rule 70 (boolean_expr)


State 106

   71 boolean_expr: boolean_expr DIFFERENT arithmetic_expr •

    $default  reduce using rule 71 (boolean_expr)


State 107

   72 boolean_expr: boolean_expr LESS_OR_EQUAL arithmetic_expr •

    $default  reduce using rule 72 (boolean_expr)


State 108

   73 boolean_expr: boolean_expr LESS arithmetic_expr •

    $default  reduce using rule 73 (boolean_expr)


State 109

   74 boolean_expr: boolean_expr MORE_OR_EQUAL arithmetic_expr •

    $default  reduce using rule 74 (boolean_expr)


State 110

   75 boolean_expr: boolean_expr MORE arithmetic_expr •

    $default  reduce using rule 75 (boolean_expr)


State 111

   63 if_then: IF boolean_expr $@13 THEN • command

    IDENT  shift, and go to state 34
    IF     shift, and go to state 35
    WHILE  shift, and go to state 36
    READ   shift, and go to state 37
    WRITE  shift, and go to state 38

    command               go to state 127
    procedure_call        go to state 41
    read                  go to state 42
    write                 go to state 43
    loop                  go to state 44
    conditional           go to state 45
    if_then               go to state 46
    assignment_operation  go to state 47


State 112

   77 E: E PLUS T •
   80 T: T • ASTERISK F
   81  | T • DIV F

    DIV       shift, and go to state 85
    ASTERISK  shift, and go to state 86

    CLOSE_PARENTHESIS  reduce using rule 77 (E)
    COMMA              reduce using rule 77 (E)
    SEMICOLON          reduce using rule 77 (E)
    THEN               reduce using rule 77 (E)
    DO                 reduce using rule 77 (E)
    PLUS               reduce using rule 77 (E)
    MINUS              reduce using rule 77 (E)
    EQUAL              reduce using rule 77 (E)
    DIFFERENT          reduce using rule 77 (E)
    LESS_OR_EQUAL      reduce using rule 77 (E)
    LESS               reduce using rule 77 (E)
    MORE_OR_EQUAL      reduce using rule 77 (E)
    MORE               reduce using rule 77 (E)


State 113

   78 E: E MINUS T •
   80 T: T • ASTERISK F
   81  | T • DIV F

    DIV       shift, and go to state 85
    ASTERISK  shift, and go to state 86

    CLOSE_PARENTHESIS  reduce using rule 78 (E)
    COMMA              reduce using rule 78 (E)
    SEMICOLON          reduce using rule 78 (E)
    THEN               reduce using rule 78 (E)
    DO                 reduce using rule 78 (E)
    PLUS               reduce using rule 78 (E)
    MINUS              reduce using rule 78 (E)
    EQUAL              reduce using rule 78 (E)
    DIFFERENT          reduce using rule 78 (E)
    LESS_OR_EQUAL      reduce using rule 78 (E)
    LESS               reduce using rule 78 (E)
    MORE_OR_EQUAL      reduce using rule 78 (E)
    MORE               reduce using rule 78 (E)


State 114

   81 T: T DIV F •

    $default  reduce using rule 81 (T)


State 115

   80 T: T ASTERISK F •

    $default  reduce using rule 80 (T)


State 116

   60 loop: WHILE $@11 boolean_expr $@12 • DO command

    DO  shift, and go to state 128


State 117

   54 read: READ OPEN_PARENTHESIS IDENT $@10 • CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 129


State 118

   55 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS • SEMICOLON

    SEMICOLON  shift, and go to state 130


State 119

   56 write_boolean_expr_list: write_boolean_expr_list COMMA • boolean_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr     go to state 131
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 120

   65 cond_else: ELSE $@14 command •

    $default  reduce using rule 65 (cond_else)


State 121

   24 procedure_params: OPEN_PARENTHESIS $@5 declare_params $@6 • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 132


State 122

   26 declare_params: declare_params declare_param •

    $default  reduce using rule 26 (declare_params)


State 123

   30 declare_param: by_reference_or_not $@7 • id_param_list COLON type $@8 optional_semicolon

    IDENT  shift, and go to state 133

    id_param_list  go to state 134


State 124

   47 procedure_call: IDENT $@9 OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS • SEMICOLON

    SEMICOLON  shift, and go to state 135


State 125

   49 args_list: args_list COMMA • ARGUMENT

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 98
    NUMBER            shift, and go to state 57

    ARGUMENT         go to state 136
    boolean_expr     go to state 102
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 126

   68 assignment_operation: IDENT $@15 ASSIGNMENT boolean_expr SEMICOLON •

    $default  reduce using rule 68 (assignment_operation)


State 127

   63 if_then: IF boolean_expr $@13 THEN command •

    $default  reduce using rule 63 (if_then)


State 128

   60 loop: WHILE $@11 boolean_expr $@12 DO • command

    IDENT  shift, and go to state 34
    IF     shift, and go to state 35
    WHILE  shift, and go to state 36
    READ   shift, and go to state 37
    WRITE  shift, and go to state 38

    command               go to state 137
    procedure_call        go to state 41
    read                  go to state 42
    write                 go to state 43
    loop                  go to state 44
    conditional           go to state 45
    if_then               go to state 46
    assignment_operation  go to state 47


State 129

   54 read: READ OPEN_PARENTHESIS IDENT $@10 CLOSE_PARENTHESIS • SEMICOLON

    SEMICOLON  shift, and go to state 138


State 130

   55 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS SEMICOLON •

    $default  reduce using rule 55 (write)


State 131

   56 write_boolean_expr_list: write_boolean_expr_list COMMA boolean_expr •
   70 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   71             | boolean_expr • DIFFERENT arithmetic_expr
   72             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   73             | boolean_expr • LESS arithmetic_expr
   74             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   75             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 76
    DIFFERENT      shift, and go to state 77
    LESS_OR_EQUAL  shift, and go to state 78
    LESS           shift, and go to state 79
    MORE_OR_EQUAL  shift, and go to state 80
    MORE           shift, and go to state 81

    CLOSE_PARENTHESIS  reduce using rule 56 (write_boolean_expr_list)
    COMMA              reduce using rule 56 (write_boolean_expr_list)


State 132

   24 procedure_params: OPEN_PARENTHESIS $@5 declare_params $@6 CLOSE_PARENTHESIS •

    $default  reduce using rule 24 (procedure_params)


State 133

   34 id_param_list: IDENT •

    $default  reduce using rule 34 (id_param_list)


State 134

   30 declare_param: by_reference_or_not $@7 id_param_list • COLON type $@8 optional_semicolon
   33 id_param_list: id_param_list • COMMA IDENT

    COMMA  shift, and go to state 139
    COLON  shift, and go to state 140


State 135

   47 procedure_call: IDENT $@9 OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS SEMICOLON •

    $default  reduce using rule 47 (procedure_call)


State 136

   49 args_list: args_list COMMA ARGUMENT •

    $default  reduce using rule 49 (args_list)


State 137

   60 loop: WHILE $@11 boolean_expr $@12 DO command •

    $default  reduce using rule 60 (loop)


State 138

   54 read: READ OPEN_PARENTHESIS IDENT $@10 CLOSE_PARENTHESIS SEMICOLON •

    $default  reduce using rule 54 (read)


State 139

   33 id_param_list: id_param_list COMMA • IDENT

    IDENT  shift, and go to state 141


State 140

   30 declare_param: by_reference_or_not $@7 id_param_list COLON • type $@8 optional_semicolon

    IDENT  shift, and go to state 49

    type  go to state 142


State 141

   33 id_param_list: id_param_list COMMA IDENT •

    $default  reduce using rule 33 (id_param_list)


State 142

   30 declare_param: by_reference_or_not $@7 id_param_list COLON type • $@8 optional_semicolon

    $default  reduce using rule 29 ($@8)

    $@8  go to state 143


State 143

   30 declare_param: by_reference_or_not $@7 id_param_list COLON type $@8 • optional_semicolon

    SEMICOLON  shift, and go to state 144

    CLOSE_PARENTHESIS  reduce using rule 36 (optional_semicolon)
    VAR                reduce using rule 36 (optional_semicolon)
    IDENT              reduce using rule 36 (optional_semicolon)

    optional_semicolon  go to state 145


State 144

   35 optional_semicolon: SEMICOLON •

    $default  reduce using rule 35 (optional_semicolon)


State 145

   30 declare_param: by_reference_or_not $@7 id_param_list COLON type $@8 optional_semicolon •

    $default  reduce using rule 30 (declare_param)
