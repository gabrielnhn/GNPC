Terminals unused in grammar

    LABEL
    TYPE
    ARRAY
    OF
    GOTO
    OR
    AND
    NOT


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    3 block: declaring_vars_block declaring_procedures_block compound_command

    4 declaring_vars_block: VAR declare_vars
    5                     | %empty

    6 declare_vars: declare_vars declare_var
    7             | declare_var

    8 $@2: %empty

    9 $@3: %empty

   10 declare_var: $@2 id_simple_var_list COLON type $@3 SEMICOLON

   11 type: IDENT

   12 id_simple_var_list: id_simple_var_list COMMA IDENT
   13                   | IDENT

   14 idents_list: idents_list COMMA IDENT
   15            | IDENT

   16 declaring_procedures_block: procedures
   17                           | %empty

   18 procedures: procedures procedure_def
   19           | procedure_def

   20 $@4: %empty

   21 procedure_def: PROCEDURE $@4 IDENT procedure_params SEMICOLON block

   22 $@5: %empty

   23 $@6: %empty

   24 procedure_params: OPEN_PARENTHESIS $@5 declare_params $@6 CLOSE_PARENTHESIS
   25                 | %empty

   26 declare_params: declare_params declare_param
   27               | declare_param

   28 $@7: %empty

   29 $@8: %empty

   30 declare_param: $@7 id_param_list COLON type $@8 optional_semicolon

   31 id_param_list: id_param_list COMMA IDENT
   32              | IDENT

   33 optional_semicolon: SEMICOLON
   34                   | %empty

   35 compound_command: T_BEGIN commands T_END

   36 commands: commands command
   37         | command

   38 command: assignment
   39        | compound_command
   40        | loop
   41        | conditional
   42        | read
   43        | write

   44 $@9: %empty

   45 read: READ OPEN_PARENTHESIS IDENT $@9 CLOSE_PARENTHESIS SEMICOLON

   46 write: WRITE OPEN_PARENTHESIS boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

   47 boolean_expr_list: boolean_expr_list COMMA boolean_expr
   48                  | boolean_expr

   49 $@10: %empty

   50 $@11: %empty

   51 loop: WHILE $@10 boolean_expr $@11 DO command

   52 conditional: if_then cond_else

   53 $@12: %empty

   54 if_then: IF boolean_expr $@12 THEN command

   55 $@13: %empty

   56 cond_else: ELSE $@13 command
   57          | %empty

   58 $@14: %empty

   59 assignment: IDENT $@14 ASSIGNMENT boolean_expr SEMICOLON

   60 boolean_expr: arithmetic_expr
   61             | boolean_expr EQUAL arithmetic_expr
   62             | boolean_expr DIFFERENT arithmetic_expr
   63             | boolean_expr LESS_OR_EQUAL arithmetic_expr
   64             | boolean_expr LESS arithmetic_expr
   65             | boolean_expr MORE_OR_EQUAL arithmetic_expr
   66             | boolean_expr MORE arithmetic_expr

   67 arithmetic_expr: E

   68 E: E PLUS T
   69  | E MINUS T
   70  | T

   71 T: T ASTERISK F
   72  | T DIV F
   73  | F

   74 F: NUMBER
   75  | IDENT
   76  | OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 2
    OPEN_PARENTHESIS (259) 2 24 45 46 76
    CLOSE_PARENTHESIS (260) 2 24 45 46 76
    COMMA (261) 12 14 31 47
    SEMICOLON (262) 2 10 21 33 45 46 59
    COLON (263) 10 30
    DOT (264) 2
    T_BEGIN (265) 35
    T_END (266) 35
    VAR (267) 4
    IDENT (268) 2 11 12 13 14 15 21 31 32 45 59 75
    ASSIGNMENT (269) 59
    LABEL (270)
    TYPE (271)
    ARRAY (272)
    OF (273)
    PROCEDURE (274) 21
    GOTO (275)
    IF (276) 54
    THEN (277) 54
    ELSE (278) 56
    WHILE (279) 51
    DO (280) 51
    OR (281)
    AND (282)
    NOT (283)
    DIV (284) 72
    ASTERISK (285) 71
    PLUS (286) 68
    MINUS (287) 69
    EQUAL (288) 61
    DIFFERENT (289) 62
    LESS_OR_EQUAL (290) 63
    LESS (291) 64
    MORE_OR_EQUAL (292) 65
    MORE (293) 66
    NUMBER (294) 74
    READ (295) 45
    WRITE (296) 46
    LOWER_THAN_ELSE (297)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program (44)
        on left: 2
        on right: 0
    $@1 (45)
        on left: 1
        on right: 2
    block (46)
        on left: 3
        on right: 2 21
    declaring_vars_block (47)
        on left: 4 5
        on right: 3
    declare_vars (48)
        on left: 6 7
        on right: 4 6
    declare_var (49)
        on left: 10
        on right: 6 7
    $@2 (50)
        on left: 8
        on right: 10
    $@3 (51)
        on left: 9
        on right: 10
    type (52)
        on left: 11
        on right: 10 30
    id_simple_var_list (53)
        on left: 12 13
        on right: 10 12
    idents_list (54)
        on left: 14 15
        on right: 2 14
    declaring_procedures_block (55)
        on left: 16 17
        on right: 3
    procedures (56)
        on left: 18 19
        on right: 16 18
    procedure_def (57)
        on left: 21
        on right: 18 19
    $@4 (58)
        on left: 20
        on right: 21
    procedure_params (59)
        on left: 24 25
        on right: 21
    $@5 (60)
        on left: 22
        on right: 24
    $@6 (61)
        on left: 23
        on right: 24
    declare_params (62)
        on left: 26 27
        on right: 24 26
    declare_param (63)
        on left: 30
        on right: 26 27
    $@7 (64)
        on left: 28
        on right: 30
    $@8 (65)
        on left: 29
        on right: 30
    id_param_list (66)
        on left: 31 32
        on right: 30 31
    optional_semicolon (67)
        on left: 33 34
        on right: 30
    compound_command (68)
        on left: 35
        on right: 3 39
    commands (69)
        on left: 36 37
        on right: 35 36
    command (70)
        on left: 38 39 40 41 42 43
        on right: 36 37 51 54 56
    read (71)
        on left: 45
        on right: 42
    $@9 (72)
        on left: 44
        on right: 45
    write (73)
        on left: 46
        on right: 43
    boolean_expr_list (74)
        on left: 47 48
        on right: 46 47
    loop (75)
        on left: 51
        on right: 40
    $@10 (76)
        on left: 49
        on right: 51
    $@11 (77)
        on left: 50
        on right: 51
    conditional (78)
        on left: 52
        on right: 41
    if_then (79)
        on left: 54
        on right: 52
    $@12 (80)
        on left: 53
        on right: 54
    cond_else (81)
        on left: 56 57
        on right: 52
    $@13 (82)
        on left: 55
        on right: 56
    assignment (83)
        on left: 59
        on right: 38
    $@14 (84)
        on left: 58
        on right: 59
    boolean_expr (85)
        on left: 60 61 62 63 64 65 66
        on right: 47 48 51 54 59 61 62 63 64 65 66 76
    arithmetic_expr (86)
        on left: 67
        on right: 60 61 62 63 64 65 66
    E (87)
        on left: 68 69 70
        on right: 67 68 69
    T (88)
        on left: 71 72 73
        on right: 68 69 70 71 72
    F (89)
        on left: 74 75 76
        on right: 71 72 73


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 PROGRAM . IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 5


State 5

    2 program: $@1 PROGRAM IDENT . OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    OPEN_PARENTHESIS  shift, and go to state 6


State 6

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS . idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 7

    idents_list  go to state 8


State 7

   15 idents_list: IDENT .

    $default  reduce using rule 15 (idents_list)


State 8

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list . CLOSE_PARENTHESIS SEMICOLON block DOT
   14 idents_list: idents_list . COMMA IDENT

    CLOSE_PARENTHESIS  shift, and go to state 9
    COMMA              shift, and go to state 10


State 9

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS . SEMICOLON block DOT

    SEMICOLON  shift, and go to state 11


State 10

   14 idents_list: idents_list COMMA . IDENT

    IDENT  shift, and go to state 12


State 11

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON . block DOT

    VAR  shift, and go to state 13

    $default  reduce using rule 5 (declaring_vars_block)

    block                 go to state 14
    declaring_vars_block  go to state 15


State 12

   14 idents_list: idents_list COMMA IDENT .

    $default  reduce using rule 14 (idents_list)


State 13

    4 declaring_vars_block: VAR . declare_vars

    $default  reduce using rule 8 ($@2)

    declare_vars  go to state 16
    declare_var   go to state 17
    $@2           go to state 18


State 14

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block . DOT

    DOT  shift, and go to state 19


State 15

    3 block: declaring_vars_block . declaring_procedures_block compound_command

    PROCEDURE  shift, and go to state 20

    $default  reduce using rule 17 (declaring_procedures_block)

    declaring_procedures_block  go to state 21
    procedures                  go to state 22
    procedure_def               go to state 23


State 16

    4 declaring_vars_block: VAR declare_vars .
    6 declare_vars: declare_vars . declare_var

    IDENT     reduce using rule 8 ($@2)
    $default  reduce using rule 4 (declaring_vars_block)

    declare_var  go to state 24
    $@2          go to state 18


State 17

    7 declare_vars: declare_var .

    $default  reduce using rule 7 (declare_vars)


State 18

   10 declare_var: $@2 . id_simple_var_list COLON type $@3 SEMICOLON

    IDENT  shift, and go to state 25

    id_simple_var_list  go to state 26


State 19

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT .

    $default  reduce using rule 2 (program)


State 20

   21 procedure_def: PROCEDURE . $@4 IDENT procedure_params SEMICOLON block

    $default  reduce using rule 20 ($@4)

    $@4  go to state 27


State 21

    3 block: declaring_vars_block declaring_procedures_block . compound_command

    T_BEGIN  shift, and go to state 28

    compound_command  go to state 29


State 22

   16 declaring_procedures_block: procedures .
   18 procedures: procedures . procedure_def

    PROCEDURE  shift, and go to state 20

    $default  reduce using rule 16 (declaring_procedures_block)

    procedure_def  go to state 30


State 23

   19 procedures: procedure_def .

    $default  reduce using rule 19 (procedures)


State 24

    6 declare_vars: declare_vars declare_var .

    $default  reduce using rule 6 (declare_vars)


State 25

   13 id_simple_var_list: IDENT .

    $default  reduce using rule 13 (id_simple_var_list)


State 26

   10 declare_var: $@2 id_simple_var_list . COLON type $@3 SEMICOLON
   12 id_simple_var_list: id_simple_var_list . COMMA IDENT

    COMMA  shift, and go to state 31
    COLON  shift, and go to state 32


State 27

   21 procedure_def: PROCEDURE $@4 . IDENT procedure_params SEMICOLON block

    IDENT  shift, and go to state 33


State 28

   35 compound_command: T_BEGIN . commands T_END

    T_BEGIN  shift, and go to state 28
    IDENT    shift, and go to state 34
    IF       shift, and go to state 35
    WHILE    shift, and go to state 36
    READ     shift, and go to state 37
    WRITE    shift, and go to state 38

    compound_command  go to state 39
    commands          go to state 40
    command           go to state 41
    read              go to state 42
    write             go to state 43
    loop              go to state 44
    conditional       go to state 45
    if_then           go to state 46
    assignment        go to state 47


State 29

    3 block: declaring_vars_block declaring_procedures_block compound_command .

    $default  reduce using rule 3 (block)


State 30

   18 procedures: procedures procedure_def .

    $default  reduce using rule 18 (procedures)


State 31

   12 id_simple_var_list: id_simple_var_list COMMA . IDENT

    IDENT  shift, and go to state 48


State 32

   10 declare_var: $@2 id_simple_var_list COLON . type $@3 SEMICOLON

    IDENT  shift, and go to state 49

    type  go to state 50


State 33

   21 procedure_def: PROCEDURE $@4 IDENT . procedure_params SEMICOLON block

    OPEN_PARENTHESIS  shift, and go to state 51

    $default  reduce using rule 25 (procedure_params)

    procedure_params  go to state 52


State 34

   59 assignment: IDENT . $@14 ASSIGNMENT boolean_expr SEMICOLON

    $default  reduce using rule 58 ($@14)

    $@14  go to state 53


State 35

   54 if_then: IF . boolean_expr $@12 THEN command

    OPEN_PARENTHESIS  shift, and go to state 54
    IDENT             shift, and go to state 55
    NUMBER            shift, and go to state 56

    boolean_expr     go to state 57
    arithmetic_expr  go to state 58
    E                go to state 59
    T                go to state 60
    F                go to state 61


State 36

   51 loop: WHILE . $@10 boolean_expr $@11 DO command

    $default  reduce using rule 49 ($@10)

    $@10  go to state 62


State 37

   45 read: READ . OPEN_PARENTHESIS IDENT $@9 CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 63


State 38

   46 write: WRITE . OPEN_PARENTHESIS boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 64


State 39

   39 command: compound_command .

    $default  reduce using rule 39 (command)


State 40

   35 compound_command: T_BEGIN commands . T_END
   36 commands: commands . command

    T_BEGIN  shift, and go to state 28
    T_END    shift, and go to state 65
    IDENT    shift, and go to state 34
    IF       shift, and go to state 35
    WHILE    shift, and go to state 36
    READ     shift, and go to state 37
    WRITE    shift, and go to state 38

    compound_command  go to state 39
    command           go to state 66
    read              go to state 42
    write             go to state 43
    loop              go to state 44
    conditional       go to state 45
    if_then           go to state 46
    assignment        go to state 47


State 41

   37 commands: command .

    $default  reduce using rule 37 (commands)


State 42

   42 command: read .

    $default  reduce using rule 42 (command)


State 43

   43 command: write .

    $default  reduce using rule 43 (command)


State 44

   40 command: loop .

    $default  reduce using rule 40 (command)


State 45

   41 command: conditional .

    $default  reduce using rule 41 (command)


State 46

   52 conditional: if_then . cond_else

    ELSE  shift, and go to state 67

    $default  reduce using rule 57 (cond_else)

    cond_else  go to state 68


State 47

   38 command: assignment .

    $default  reduce using rule 38 (command)


State 48

   12 id_simple_var_list: id_simple_var_list COMMA IDENT .

    $default  reduce using rule 12 (id_simple_var_list)


State 49

   11 type: IDENT .

    $default  reduce using rule 11 (type)


State 50

   10 declare_var: $@2 id_simple_var_list COLON type . $@3 SEMICOLON

    $default  reduce using rule 9 ($@3)

    $@3  go to state 69


State 51

   24 procedure_params: OPEN_PARENTHESIS . $@5 declare_params $@6 CLOSE_PARENTHESIS

    $default  reduce using rule 22 ($@5)

    $@5  go to state 70


State 52

   21 procedure_def: PROCEDURE $@4 IDENT procedure_params . SEMICOLON block

    SEMICOLON  shift, and go to state 71


State 53

   59 assignment: IDENT $@14 . ASSIGNMENT boolean_expr SEMICOLON

    ASSIGNMENT  shift, and go to state 72


State 54

   76 F: OPEN_PARENTHESIS . boolean_expr CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 54
    IDENT             shift, and go to state 55
    NUMBER            shift, and go to state 56

    boolean_expr     go to state 73
    arithmetic_expr  go to state 58
    E                go to state 59
    T                go to state 60
    F                go to state 61


State 55

   75 F: IDENT .

    $default  reduce using rule 75 (F)


State 56

   74 F: NUMBER .

    $default  reduce using rule 74 (F)


State 57

   54 if_then: IF boolean_expr . $@12 THEN command
   61 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   62             | boolean_expr . DIFFERENT arithmetic_expr
   63             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   64             | boolean_expr . LESS arithmetic_expr
   65             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   66             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 74
    DIFFERENT      shift, and go to state 75
    LESS_OR_EQUAL  shift, and go to state 76
    LESS           shift, and go to state 77
    MORE_OR_EQUAL  shift, and go to state 78
    MORE           shift, and go to state 79

    $default  reduce using rule 53 ($@12)

    $@12  go to state 80


State 58

   60 boolean_expr: arithmetic_expr .

    $default  reduce using rule 60 (boolean_expr)


State 59

   67 arithmetic_expr: E .
   68 E: E . PLUS T
   69  | E . MINUS T

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82

    $default  reduce using rule 67 (arithmetic_expr)


State 60

   70 E: T .
   71 T: T . ASTERISK F
   72  | T . DIV F

    DIV       shift, and go to state 83
    ASTERISK  shift, and go to state 84

    $default  reduce using rule 70 (E)


State 61

   73 T: F .

    $default  reduce using rule 73 (T)


State 62

   51 loop: WHILE $@10 . boolean_expr $@11 DO command

    OPEN_PARENTHESIS  shift, and go to state 54
    IDENT             shift, and go to state 55
    NUMBER            shift, and go to state 56

    boolean_expr     go to state 85
    arithmetic_expr  go to state 58
    E                go to state 59
    T                go to state 60
    F                go to state 61


State 63

   45 read: READ OPEN_PARENTHESIS . IDENT $@9 CLOSE_PARENTHESIS SEMICOLON

    IDENT  shift, and go to state 86


State 64

   46 write: WRITE OPEN_PARENTHESIS . boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 54
    IDENT             shift, and go to state 55
    NUMBER            shift, and go to state 56

    boolean_expr_list  go to state 87
    boolean_expr       go to state 88
    arithmetic_expr    go to state 58
    E                  go to state 59
    T                  go to state 60
    F                  go to state 61


State 65

   35 compound_command: T_BEGIN commands T_END .

    $default  reduce using rule 35 (compound_command)


State 66

   36 commands: commands command .

    $default  reduce using rule 36 (commands)


State 67

   56 cond_else: ELSE . $@13 command

    $default  reduce using rule 55 ($@13)

    $@13  go to state 89


State 68

   52 conditional: if_then cond_else .

    $default  reduce using rule 52 (conditional)


State 69

   10 declare_var: $@2 id_simple_var_list COLON type $@3 . SEMICOLON

    SEMICOLON  shift, and go to state 90


State 70

   24 procedure_params: OPEN_PARENTHESIS $@5 . declare_params $@6 CLOSE_PARENTHESIS

    $default  reduce using rule 28 ($@7)

    declare_params  go to state 91
    declare_param   go to state 92
    $@7             go to state 93


State 71

   21 procedure_def: PROCEDURE $@4 IDENT procedure_params SEMICOLON . block

    VAR  shift, and go to state 13

    $default  reduce using rule 5 (declaring_vars_block)

    block                 go to state 94
    declaring_vars_block  go to state 15


State 72

   59 assignment: IDENT $@14 ASSIGNMENT . boolean_expr SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 54
    IDENT             shift, and go to state 55
    NUMBER            shift, and go to state 56

    boolean_expr     go to state 95
    arithmetic_expr  go to state 58
    E                go to state 59
    T                go to state 60
    F                go to state 61


State 73

   61 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   62             | boolean_expr . DIFFERENT arithmetic_expr
   63             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   64             | boolean_expr . LESS arithmetic_expr
   65             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   66             | boolean_expr . MORE arithmetic_expr
   76 F: OPEN_PARENTHESIS boolean_expr . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 96
    EQUAL              shift, and go to state 74
    DIFFERENT          shift, and go to state 75
    LESS_OR_EQUAL      shift, and go to state 76
    LESS               shift, and go to state 77
    MORE_OR_EQUAL      shift, and go to state 78
    MORE               shift, and go to state 79


State 74

   61 boolean_expr: boolean_expr EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 54
    IDENT             shift, and go to state 55
    NUMBER            shift, and go to state 56

    arithmetic_expr  go to state 97
    E                go to state 59
    T                go to state 60
    F                go to state 61


State 75

   62 boolean_expr: boolean_expr DIFFERENT . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 54
    IDENT             shift, and go to state 55
    NUMBER            shift, and go to state 56

    arithmetic_expr  go to state 98
    E                go to state 59
    T                go to state 60
    F                go to state 61


State 76

   63 boolean_expr: boolean_expr LESS_OR_EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 54
    IDENT             shift, and go to state 55
    NUMBER            shift, and go to state 56

    arithmetic_expr  go to state 99
    E                go to state 59
    T                go to state 60
    F                go to state 61


State 77

   64 boolean_expr: boolean_expr LESS . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 54
    IDENT             shift, and go to state 55
    NUMBER            shift, and go to state 56

    arithmetic_expr  go to state 100
    E                go to state 59
    T                go to state 60
    F                go to state 61


State 78

   65 boolean_expr: boolean_expr MORE_OR_EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 54
    IDENT             shift, and go to state 55
    NUMBER            shift, and go to state 56

    arithmetic_expr  go to state 101
    E                go to state 59
    T                go to state 60
    F                go to state 61


State 79

   66 boolean_expr: boolean_expr MORE . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 54
    IDENT             shift, and go to state 55
    NUMBER            shift, and go to state 56

    arithmetic_expr  go to state 102
    E                go to state 59
    T                go to state 60
    F                go to state 61


State 80

   54 if_then: IF boolean_expr $@12 . THEN command

    THEN  shift, and go to state 103


State 81

   68 E: E PLUS . T

    OPEN_PARENTHESIS  shift, and go to state 54
    IDENT             shift, and go to state 55
    NUMBER            shift, and go to state 56

    T  go to state 104
    F  go to state 61


State 82

   69 E: E MINUS . T

    OPEN_PARENTHESIS  shift, and go to state 54
    IDENT             shift, and go to state 55
    NUMBER            shift, and go to state 56

    T  go to state 105
    F  go to state 61


State 83

   72 T: T DIV . F

    OPEN_PARENTHESIS  shift, and go to state 54
    IDENT             shift, and go to state 55
    NUMBER            shift, and go to state 56

    F  go to state 106


State 84

   71 T: T ASTERISK . F

    OPEN_PARENTHESIS  shift, and go to state 54
    IDENT             shift, and go to state 55
    NUMBER            shift, and go to state 56

    F  go to state 107


State 85

   51 loop: WHILE $@10 boolean_expr . $@11 DO command
   61 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   62             | boolean_expr . DIFFERENT arithmetic_expr
   63             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   64             | boolean_expr . LESS arithmetic_expr
   65             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   66             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 74
    DIFFERENT      shift, and go to state 75
    LESS_OR_EQUAL  shift, and go to state 76
    LESS           shift, and go to state 77
    MORE_OR_EQUAL  shift, and go to state 78
    MORE           shift, and go to state 79

    $default  reduce using rule 50 ($@11)

    $@11  go to state 108


State 86

   45 read: READ OPEN_PARENTHESIS IDENT . $@9 CLOSE_PARENTHESIS SEMICOLON

    $default  reduce using rule 44 ($@9)

    $@9  go to state 109


State 87

   46 write: WRITE OPEN_PARENTHESIS boolean_expr_list . CLOSE_PARENTHESIS SEMICOLON
   47 boolean_expr_list: boolean_expr_list . COMMA boolean_expr

    CLOSE_PARENTHESIS  shift, and go to state 110
    COMMA              shift, and go to state 111


State 88

   48 boolean_expr_list: boolean_expr .
   61 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   62             | boolean_expr . DIFFERENT arithmetic_expr
   63             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   64             | boolean_expr . LESS arithmetic_expr
   65             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   66             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 74
    DIFFERENT      shift, and go to state 75
    LESS_OR_EQUAL  shift, and go to state 76
    LESS           shift, and go to state 77
    MORE_OR_EQUAL  shift, and go to state 78
    MORE           shift, and go to state 79

    $default  reduce using rule 48 (boolean_expr_list)


State 89

   56 cond_else: ELSE $@13 . command

    T_BEGIN  shift, and go to state 28
    IDENT    shift, and go to state 34
    IF       shift, and go to state 35
    WHILE    shift, and go to state 36
    READ     shift, and go to state 37
    WRITE    shift, and go to state 38

    compound_command  go to state 39
    command           go to state 112
    read              go to state 42
    write             go to state 43
    loop              go to state 44
    conditional       go to state 45
    if_then           go to state 46
    assignment        go to state 47


State 90

   10 declare_var: $@2 id_simple_var_list COLON type $@3 SEMICOLON .

    $default  reduce using rule 10 (declare_var)


State 91

   24 procedure_params: OPEN_PARENTHESIS $@5 declare_params . $@6 CLOSE_PARENTHESIS
   26 declare_params: declare_params . declare_param

    IDENT     reduce using rule 28 ($@7)
    $default  reduce using rule 23 ($@6)

    $@6            go to state 113
    declare_param  go to state 114
    $@7            go to state 93


State 92

   27 declare_params: declare_param .

    $default  reduce using rule 27 (declare_params)


State 93

   30 declare_param: $@7 . id_param_list COLON type $@8 optional_semicolon

    IDENT  shift, and go to state 115

    id_param_list  go to state 116


State 94

   21 procedure_def: PROCEDURE $@4 IDENT procedure_params SEMICOLON block .

    $default  reduce using rule 21 (procedure_def)


State 95

   59 assignment: IDENT $@14 ASSIGNMENT boolean_expr . SEMICOLON
   61 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   62             | boolean_expr . DIFFERENT arithmetic_expr
   63             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   64             | boolean_expr . LESS arithmetic_expr
   65             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   66             | boolean_expr . MORE arithmetic_expr

    SEMICOLON      shift, and go to state 117
    EQUAL          shift, and go to state 74
    DIFFERENT      shift, and go to state 75
    LESS_OR_EQUAL  shift, and go to state 76
    LESS           shift, and go to state 77
    MORE_OR_EQUAL  shift, and go to state 78
    MORE           shift, and go to state 79


State 96

   76 F: OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS .

    $default  reduce using rule 76 (F)


State 97

   61 boolean_expr: boolean_expr EQUAL arithmetic_expr .

    $default  reduce using rule 61 (boolean_expr)


State 98

   62 boolean_expr: boolean_expr DIFFERENT arithmetic_expr .

    $default  reduce using rule 62 (boolean_expr)


State 99

   63 boolean_expr: boolean_expr LESS_OR_EQUAL arithmetic_expr .

    $default  reduce using rule 63 (boolean_expr)


State 100

   64 boolean_expr: boolean_expr LESS arithmetic_expr .

    $default  reduce using rule 64 (boolean_expr)


State 101

   65 boolean_expr: boolean_expr MORE_OR_EQUAL arithmetic_expr .

    $default  reduce using rule 65 (boolean_expr)


State 102

   66 boolean_expr: boolean_expr MORE arithmetic_expr .

    $default  reduce using rule 66 (boolean_expr)


State 103

   54 if_then: IF boolean_expr $@12 THEN . command

    T_BEGIN  shift, and go to state 28
    IDENT    shift, and go to state 34
    IF       shift, and go to state 35
    WHILE    shift, and go to state 36
    READ     shift, and go to state 37
    WRITE    shift, and go to state 38

    compound_command  go to state 39
    command           go to state 118
    read              go to state 42
    write             go to state 43
    loop              go to state 44
    conditional       go to state 45
    if_then           go to state 46
    assignment        go to state 47


State 104

   68 E: E PLUS T .
   71 T: T . ASTERISK F
   72  | T . DIV F

    DIV       shift, and go to state 83
    ASTERISK  shift, and go to state 84

    $default  reduce using rule 68 (E)


State 105

   69 E: E MINUS T .
   71 T: T . ASTERISK F
   72  | T . DIV F

    DIV       shift, and go to state 83
    ASTERISK  shift, and go to state 84

    $default  reduce using rule 69 (E)


State 106

   72 T: T DIV F .

    $default  reduce using rule 72 (T)


State 107

   71 T: T ASTERISK F .

    $default  reduce using rule 71 (T)


State 108

   51 loop: WHILE $@10 boolean_expr $@11 . DO command

    DO  shift, and go to state 119


State 109

   45 read: READ OPEN_PARENTHESIS IDENT $@9 . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 120


State 110

   46 write: WRITE OPEN_PARENTHESIS boolean_expr_list CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 121


State 111

   47 boolean_expr_list: boolean_expr_list COMMA . boolean_expr

    OPEN_PARENTHESIS  shift, and go to state 54
    IDENT             shift, and go to state 55
    NUMBER            shift, and go to state 56

    boolean_expr     go to state 122
    arithmetic_expr  go to state 58
    E                go to state 59
    T                go to state 60
    F                go to state 61


State 112

   56 cond_else: ELSE $@13 command .

    $default  reduce using rule 56 (cond_else)


State 113

   24 procedure_params: OPEN_PARENTHESIS $@5 declare_params $@6 . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 123


State 114

   26 declare_params: declare_params declare_param .

    $default  reduce using rule 26 (declare_params)


State 115

   32 id_param_list: IDENT .

    $default  reduce using rule 32 (id_param_list)


State 116

   30 declare_param: $@7 id_param_list . COLON type $@8 optional_semicolon
   31 id_param_list: id_param_list . COMMA IDENT

    COMMA  shift, and go to state 124
    COLON  shift, and go to state 125


State 117

   59 assignment: IDENT $@14 ASSIGNMENT boolean_expr SEMICOLON .

    $default  reduce using rule 59 (assignment)


State 118

   54 if_then: IF boolean_expr $@12 THEN command .

    $default  reduce using rule 54 (if_then)


State 119

   51 loop: WHILE $@10 boolean_expr $@11 DO . command

    T_BEGIN  shift, and go to state 28
    IDENT    shift, and go to state 34
    IF       shift, and go to state 35
    WHILE    shift, and go to state 36
    READ     shift, and go to state 37
    WRITE    shift, and go to state 38

    compound_command  go to state 39
    command           go to state 126
    read              go to state 42
    write             go to state 43
    loop              go to state 44
    conditional       go to state 45
    if_then           go to state 46
    assignment        go to state 47


State 120

   45 read: READ OPEN_PARENTHESIS IDENT $@9 CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 127


State 121

   46 write: WRITE OPEN_PARENTHESIS boolean_expr_list CLOSE_PARENTHESIS SEMICOLON .

    $default  reduce using rule 46 (write)


State 122

   47 boolean_expr_list: boolean_expr_list COMMA boolean_expr .
   61 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   62             | boolean_expr . DIFFERENT arithmetic_expr
   63             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   64             | boolean_expr . LESS arithmetic_expr
   65             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   66             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 74
    DIFFERENT      shift, and go to state 75
    LESS_OR_EQUAL  shift, and go to state 76
    LESS           shift, and go to state 77
    MORE_OR_EQUAL  shift, and go to state 78
    MORE           shift, and go to state 79

    $default  reduce using rule 47 (boolean_expr_list)


State 123

   24 procedure_params: OPEN_PARENTHESIS $@5 declare_params $@6 CLOSE_PARENTHESIS .

    $default  reduce using rule 24 (procedure_params)


State 124

   31 id_param_list: id_param_list COMMA . IDENT

    IDENT  shift, and go to state 128


State 125

   30 declare_param: $@7 id_param_list COLON . type $@8 optional_semicolon

    IDENT  shift, and go to state 49

    type  go to state 129


State 126

   51 loop: WHILE $@10 boolean_expr $@11 DO command .

    $default  reduce using rule 51 (loop)


State 127

   45 read: READ OPEN_PARENTHESIS IDENT $@9 CLOSE_PARENTHESIS SEMICOLON .

    $default  reduce using rule 45 (read)


State 128

   31 id_param_list: id_param_list COMMA IDENT .

    $default  reduce using rule 31 (id_param_list)


State 129

   30 declare_param: $@7 id_param_list COLON type . $@8 optional_semicolon

    $default  reduce using rule 29 ($@8)

    $@8  go to state 130


State 130

   30 declare_param: $@7 id_param_list COLON type $@8 . optional_semicolon

    SEMICOLON  shift, and go to state 131

    $default  reduce using rule 34 (optional_semicolon)

    optional_semicolon  go to state 132


State 131

   33 optional_semicolon: SEMICOLON .

    $default  reduce using rule 33 (optional_semicolon)


State 132

   30 declare_param: $@7 id_param_list COLON type $@8 optional_semicolon .

    $default  reduce using rule 30 (declare_param)
