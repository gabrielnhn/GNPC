Terminals unused in grammar

    LABEL
    TYPE
    ARRAY
    OF
    GOTO
    OR
    AND
    NOT


State 28 conflicts: 6 shift/reduce
State 40 conflicts: 7 shift/reduce
State 90 conflicts: 6 shift/reduce
State 105 conflicts: 6 shift/reduce
State 120 conflicts: 6 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    3 block: declaring_vars_block declaring_procedures_block compound_command

    4 declaring_vars_block: VAR declare_vars
    5                     | %empty

    6 declare_vars: declare_vars declare_var
    7             | declare_var

    8 $@2: %empty

    9 $@3: %empty

   10 declare_var: $@2 id_simple_var_list COLON type $@3 SEMICOLON

   11 type: IDENT

   12 id_simple_var_list: id_simple_var_list COMMA IDENT
   13                   | IDENT

   14 idents_list: idents_list COMMA IDENT
   15            | IDENT

   16 declaring_procedures_block: procedures
   17                           | %empty

   18 procedures: procedures procedure_def
   19           | procedure_def

   20 $@4: %empty

   21 procedure_def: PROCEDURE IDENT $@4 procedure_params SEMICOLON block

   22 $@5: %empty

   23 $@6: %empty

   24 procedure_params: OPEN_PARENTHESIS $@5 declare_params $@6 CLOSE_PARENTHESIS
   25                 | %empty

   26 declare_params: declare_params declare_param
   27               | declare_param

   28 $@7: %empty

   29 $@8: %empty

   30 declare_param: by_reference_or_not $@7 id_param_list COLON type $@8 optional_semicolon

   31 by_reference_or_not: VAR
   32                    | %empty

   33 id_param_list: id_param_list COMMA IDENT
   34              | IDENT

   35 optional_semicolon: SEMICOLON
   36                   | %empty

   37 compound_command: T_BEGIN commands T_END

   38 commands: commands command
   39         | command

   40 command: assignment
   41        | compound_command
   42        | loop
   43        | conditional
   44        | read
   45        | write
   46        | procedure_call
   47        | %empty

   48 procedure_call: IDENT

   49 $@9: %empty

   50 read: READ OPEN_PARENTHESIS IDENT $@9 CLOSE_PARENTHESIS SEMICOLON

   51 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

   52 write_boolean_expr_list: write_boolean_expr_list COMMA boolean_expr
   53                        | boolean_expr

   54 $@10: %empty

   55 $@11: %empty

   56 loop: WHILE $@10 boolean_expr $@11 DO command

   57 conditional: if_then cond_else

   58 $@12: %empty

   59 if_then: IF boolean_expr $@12 THEN command

   60 $@13: %empty

   61 cond_else: ELSE $@13 command
   62          | %empty

   63 $@14: %empty

   64 $@15: %empty

   65 assignment: IDENT $@14 ASSIGNMENT $@15 boolean_expr SEMICOLON

   66 boolean_expr: arithmetic_expr
   67             | boolean_expr EQUAL arithmetic_expr
   68             | boolean_expr DIFFERENT arithmetic_expr
   69             | boolean_expr LESS_OR_EQUAL arithmetic_expr
   70             | boolean_expr LESS arithmetic_expr
   71             | boolean_expr MORE_OR_EQUAL arithmetic_expr
   72             | boolean_expr MORE arithmetic_expr

   73 arithmetic_expr: E

   74 E: E PLUS T
   75  | E MINUS T
   76  | T

   77 T: T ASTERISK F
   78  | T DIV F
   79  | F

   80 F: NUMBER
   81  | IDENT
   82  | OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 2
    OPEN_PARENTHESIS (259) 2 24 50 51 82
    CLOSE_PARENTHESIS (260) 2 24 50 51 82
    COMMA (261) 12 14 33 52
    SEMICOLON (262) 2 10 21 35 50 51 65
    COLON (263) 10 30
    DOT (264) 2
    T_BEGIN (265) 37
    T_END (266) 37
    VAR (267) 4 31
    IDENT (268) 2 11 12 13 14 15 21 33 34 48 50 65 81
    ASSIGNMENT (269) 65
    LABEL (270)
    TYPE (271)
    ARRAY (272)
    OF (273)
    PROCEDURE (274) 21
    GOTO (275)
    IF (276) 59
    THEN (277) 59
    ELSE (278) 61
    WHILE (279) 56
    DO (280) 56
    OR (281)
    AND (282)
    NOT (283)
    DIV (284) 78
    ASTERISK (285) 77
    PLUS (286) 74
    MINUS (287) 75
    EQUAL (288) 67
    DIFFERENT (289) 68
    LESS_OR_EQUAL (290) 69
    LESS (291) 70
    MORE_OR_EQUAL (292) 71
    MORE (293) 72
    NUMBER (294) 80
    READ (295) 50
    WRITE (296) 51
    LOWER_THAN_ELSE (297)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program (44)
        on left: 2
        on right: 0
    $@1 (45)
        on left: 1
        on right: 2
    block (46)
        on left: 3
        on right: 2 21
    declaring_vars_block (47)
        on left: 4 5
        on right: 3
    declare_vars (48)
        on left: 6 7
        on right: 4 6
    declare_var (49)
        on left: 10
        on right: 6 7
    $@2 (50)
        on left: 8
        on right: 10
    $@3 (51)
        on left: 9
        on right: 10
    type (52)
        on left: 11
        on right: 10 30
    id_simple_var_list (53)
        on left: 12 13
        on right: 10 12
    idents_list (54)
        on left: 14 15
        on right: 2 14
    declaring_procedures_block (55)
        on left: 16 17
        on right: 3
    procedures (56)
        on left: 18 19
        on right: 16 18
    procedure_def (57)
        on left: 21
        on right: 18 19
    $@4 (58)
        on left: 20
        on right: 21
    procedure_params (59)
        on left: 24 25
        on right: 21
    $@5 (60)
        on left: 22
        on right: 24
    $@6 (61)
        on left: 23
        on right: 24
    declare_params (62)
        on left: 26 27
        on right: 24 26
    declare_param (63)
        on left: 30
        on right: 26 27
    $@7 (64)
        on left: 28
        on right: 30
    $@8 (65)
        on left: 29
        on right: 30
    by_reference_or_not (66)
        on left: 31 32
        on right: 30
    id_param_list (67)
        on left: 33 34
        on right: 30 33
    optional_semicolon (68)
        on left: 35 36
        on right: 30
    compound_command (69)
        on left: 37
        on right: 3 41
    commands (70)
        on left: 38 39
        on right: 37 38
    command (71)
        on left: 40 41 42 43 44 45 46 47
        on right: 38 39 56 59 61
    procedure_call (72)
        on left: 48
        on right: 46
    read (73)
        on left: 50
        on right: 44
    $@9 (74)
        on left: 49
        on right: 50
    write (75)
        on left: 51
        on right: 45
    write_boolean_expr_list (76)
        on left: 52 53
        on right: 51 52
    loop (77)
        on left: 56
        on right: 42
    $@10 (78)
        on left: 54
        on right: 56
    $@11 (79)
        on left: 55
        on right: 56
    conditional (80)
        on left: 57
        on right: 43
    if_then (81)
        on left: 59
        on right: 57
    $@12 (82)
        on left: 58
        on right: 59
    cond_else (83)
        on left: 61 62
        on right: 57
    $@13 (84)
        on left: 60
        on right: 61
    assignment (85)
        on left: 65
        on right: 40
    $@14 (86)
        on left: 63
        on right: 65
    $@15 (87)
        on left: 64
        on right: 65
    boolean_expr (88)
        on left: 66 67 68 69 70 71 72
        on right: 52 53 56 59 65 67 68 69 70 71 72 82
    arithmetic_expr (89)
        on left: 73
        on right: 66 67 68 69 70 71 72
    E (90)
        on left: 74 75 76
        on right: 73 74 75
    T (91)
        on left: 77 78 79
        on right: 74 75 76 77 78
    F (92)
        on left: 80 81 82
        on right: 77 78 79


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 PROGRAM . IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 5


State 5

    2 program: $@1 PROGRAM IDENT . OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    OPEN_PARENTHESIS  shift, and go to state 6


State 6

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS . idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 7

    idents_list  go to state 8


State 7

   15 idents_list: IDENT .

    $default  reduce using rule 15 (idents_list)


State 8

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list . CLOSE_PARENTHESIS SEMICOLON block DOT
   14 idents_list: idents_list . COMMA IDENT

    CLOSE_PARENTHESIS  shift, and go to state 9
    COMMA              shift, and go to state 10


State 9

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS . SEMICOLON block DOT

    SEMICOLON  shift, and go to state 11


State 10

   14 idents_list: idents_list COMMA . IDENT

    IDENT  shift, and go to state 12


State 11

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON . block DOT

    VAR  shift, and go to state 13

    $default  reduce using rule 5 (declaring_vars_block)

    block                 go to state 14
    declaring_vars_block  go to state 15


State 12

   14 idents_list: idents_list COMMA IDENT .

    $default  reduce using rule 14 (idents_list)


State 13

    4 declaring_vars_block: VAR . declare_vars

    $default  reduce using rule 8 ($@2)

    declare_vars  go to state 16
    declare_var   go to state 17
    $@2           go to state 18


State 14

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block . DOT

    DOT  shift, and go to state 19


State 15

    3 block: declaring_vars_block . declaring_procedures_block compound_command

    PROCEDURE  shift, and go to state 20

    $default  reduce using rule 17 (declaring_procedures_block)

    declaring_procedures_block  go to state 21
    procedures                  go to state 22
    procedure_def               go to state 23


State 16

    4 declaring_vars_block: VAR declare_vars .
    6 declare_vars: declare_vars . declare_var

    IDENT     reduce using rule 8 ($@2)
    $default  reduce using rule 4 (declaring_vars_block)

    declare_var  go to state 24
    $@2          go to state 18


State 17

    7 declare_vars: declare_var .

    $default  reduce using rule 7 (declare_vars)


State 18

   10 declare_var: $@2 . id_simple_var_list COLON type $@3 SEMICOLON

    IDENT  shift, and go to state 25

    id_simple_var_list  go to state 26


State 19

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT .

    $default  reduce using rule 2 (program)


State 20

   21 procedure_def: PROCEDURE . IDENT $@4 procedure_params SEMICOLON block

    IDENT  shift, and go to state 27


State 21

    3 block: declaring_vars_block declaring_procedures_block . compound_command

    T_BEGIN  shift, and go to state 28

    compound_command  go to state 29


State 22

   16 declaring_procedures_block: procedures .
   18 procedures: procedures . procedure_def

    PROCEDURE  shift, and go to state 20

    $default  reduce using rule 16 (declaring_procedures_block)

    procedure_def  go to state 30


State 23

   19 procedures: procedure_def .

    $default  reduce using rule 19 (procedures)


State 24

    6 declare_vars: declare_vars declare_var .

    $default  reduce using rule 6 (declare_vars)


State 25

   13 id_simple_var_list: IDENT .

    $default  reduce using rule 13 (id_simple_var_list)


State 26

   10 declare_var: $@2 id_simple_var_list . COLON type $@3 SEMICOLON
   12 id_simple_var_list: id_simple_var_list . COMMA IDENT

    COMMA  shift, and go to state 31
    COLON  shift, and go to state 32


State 27

   21 procedure_def: PROCEDURE IDENT . $@4 procedure_params SEMICOLON block

    $default  reduce using rule 20 ($@4)

    $@4  go to state 33


State 28

   37 compound_command: T_BEGIN . commands T_END

    T_BEGIN  shift, and go to state 28
    IDENT    shift, and go to state 34
    IF       shift, and go to state 35
    WHILE    shift, and go to state 36
    READ     shift, and go to state 37
    WRITE    shift, and go to state 38

    T_BEGIN   [reduce using rule 47 (command)]
    IDENT     [reduce using rule 47 (command)]
    IF        [reduce using rule 47 (command)]
    WHILE     [reduce using rule 47 (command)]
    READ      [reduce using rule 47 (command)]
    WRITE     [reduce using rule 47 (command)]
    $default  reduce using rule 47 (command)

    compound_command  go to state 39
    commands          go to state 40
    command           go to state 41
    procedure_call    go to state 42
    read              go to state 43
    write             go to state 44
    loop              go to state 45
    conditional       go to state 46
    if_then           go to state 47
    assignment        go to state 48


State 29

    3 block: declaring_vars_block declaring_procedures_block compound_command .

    $default  reduce using rule 3 (block)


State 30

   18 procedures: procedures procedure_def .

    $default  reduce using rule 18 (procedures)


State 31

   12 id_simple_var_list: id_simple_var_list COMMA . IDENT

    IDENT  shift, and go to state 49


State 32

   10 declare_var: $@2 id_simple_var_list COLON . type $@3 SEMICOLON

    IDENT  shift, and go to state 50

    type  go to state 51


State 33

   21 procedure_def: PROCEDURE IDENT $@4 . procedure_params SEMICOLON block

    OPEN_PARENTHESIS  shift, and go to state 52

    $default  reduce using rule 25 (procedure_params)

    procedure_params  go to state 53


State 34

   48 procedure_call: IDENT .
   65 assignment: IDENT . $@14 ASSIGNMENT $@15 boolean_expr SEMICOLON

    ASSIGNMENT  reduce using rule 63 ($@14)
    $default    reduce using rule 48 (procedure_call)

    $@14  go to state 54


State 35

   59 if_then: IF . boolean_expr $@12 THEN command

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr     go to state 58
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 36

   56 loop: WHILE . $@10 boolean_expr $@11 DO command

    $default  reduce using rule 54 ($@10)

    $@10  go to state 63


State 37

   50 read: READ . OPEN_PARENTHESIS IDENT $@9 CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 64


State 38

   51 write: WRITE . OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 65


State 39

   41 command: compound_command .

    $default  reduce using rule 41 (command)


State 40

   37 compound_command: T_BEGIN commands . T_END
   38 commands: commands . command

    T_BEGIN  shift, and go to state 28
    T_END    shift, and go to state 66
    IDENT    shift, and go to state 34
    IF       shift, and go to state 35
    WHILE    shift, and go to state 36
    READ     shift, and go to state 37
    WRITE    shift, and go to state 38

    T_BEGIN  [reduce using rule 47 (command)]
    T_END    [reduce using rule 47 (command)]
    IDENT    [reduce using rule 47 (command)]
    IF       [reduce using rule 47 (command)]
    WHILE    [reduce using rule 47 (command)]
    READ     [reduce using rule 47 (command)]
    WRITE    [reduce using rule 47 (command)]

    compound_command  go to state 39
    command           go to state 67
    procedure_call    go to state 42
    read              go to state 43
    write             go to state 44
    loop              go to state 45
    conditional       go to state 46
    if_then           go to state 47
    assignment        go to state 48


State 41

   39 commands: command .

    $default  reduce using rule 39 (commands)


State 42

   46 command: procedure_call .

    $default  reduce using rule 46 (command)


State 43

   44 command: read .

    $default  reduce using rule 44 (command)


State 44

   45 command: write .

    $default  reduce using rule 45 (command)


State 45

   42 command: loop .

    $default  reduce using rule 42 (command)


State 46

   43 command: conditional .

    $default  reduce using rule 43 (command)


State 47

   57 conditional: if_then . cond_else

    ELSE  shift, and go to state 68

    $default  reduce using rule 62 (cond_else)

    cond_else  go to state 69


State 48

   40 command: assignment .

    $default  reduce using rule 40 (command)


State 49

   12 id_simple_var_list: id_simple_var_list COMMA IDENT .

    $default  reduce using rule 12 (id_simple_var_list)


State 50

   11 type: IDENT .

    $default  reduce using rule 11 (type)


State 51

   10 declare_var: $@2 id_simple_var_list COLON type . $@3 SEMICOLON

    $default  reduce using rule 9 ($@3)

    $@3  go to state 70


State 52

   24 procedure_params: OPEN_PARENTHESIS . $@5 declare_params $@6 CLOSE_PARENTHESIS

    $default  reduce using rule 22 ($@5)

    $@5  go to state 71


State 53

   21 procedure_def: PROCEDURE IDENT $@4 procedure_params . SEMICOLON block

    SEMICOLON  shift, and go to state 72


State 54

   65 assignment: IDENT $@14 . ASSIGNMENT $@15 boolean_expr SEMICOLON

    ASSIGNMENT  shift, and go to state 73


State 55

   82 F: OPEN_PARENTHESIS . boolean_expr CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr     go to state 74
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 56

   81 F: IDENT .

    $default  reduce using rule 81 (F)


State 57

   80 F: NUMBER .

    $default  reduce using rule 80 (F)


State 58

   59 if_then: IF boolean_expr . $@12 THEN command
   67 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   68             | boolean_expr . DIFFERENT arithmetic_expr
   69             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   70             | boolean_expr . LESS arithmetic_expr
   71             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   72             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 75
    DIFFERENT      shift, and go to state 76
    LESS_OR_EQUAL  shift, and go to state 77
    LESS           shift, and go to state 78
    MORE_OR_EQUAL  shift, and go to state 79
    MORE           shift, and go to state 80

    $default  reduce using rule 58 ($@12)

    $@12  go to state 81


State 59

   66 boolean_expr: arithmetic_expr .

    $default  reduce using rule 66 (boolean_expr)


State 60

   73 arithmetic_expr: E .
   74 E: E . PLUS T
   75  | E . MINUS T

    PLUS   shift, and go to state 82
    MINUS  shift, and go to state 83

    $default  reduce using rule 73 (arithmetic_expr)


State 61

   76 E: T .
   77 T: T . ASTERISK F
   78  | T . DIV F

    DIV       shift, and go to state 84
    ASTERISK  shift, and go to state 85

    $default  reduce using rule 76 (E)


State 62

   79 T: F .

    $default  reduce using rule 79 (T)


State 63

   56 loop: WHILE $@10 . boolean_expr $@11 DO command

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr     go to state 86
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 64

   50 read: READ OPEN_PARENTHESIS . IDENT $@9 CLOSE_PARENTHESIS SEMICOLON

    IDENT  shift, and go to state 87


State 65

   51 write: WRITE OPEN_PARENTHESIS . write_boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    write_boolean_expr_list  go to state 88
    boolean_expr             go to state 89
    arithmetic_expr          go to state 59
    E                        go to state 60
    T                        go to state 61
    F                        go to state 62


State 66

   37 compound_command: T_BEGIN commands T_END .

    $default  reduce using rule 37 (compound_command)


State 67

   38 commands: commands command .

    $default  reduce using rule 38 (commands)


State 68

   61 cond_else: ELSE . $@13 command

    $default  reduce using rule 60 ($@13)

    $@13  go to state 90


State 69

   57 conditional: if_then cond_else .

    $default  reduce using rule 57 (conditional)


State 70

   10 declare_var: $@2 id_simple_var_list COLON type $@3 . SEMICOLON

    SEMICOLON  shift, and go to state 91


State 71

   24 procedure_params: OPEN_PARENTHESIS $@5 . declare_params $@6 CLOSE_PARENTHESIS

    VAR  shift, and go to state 92

    $default  reduce using rule 32 (by_reference_or_not)

    declare_params       go to state 93
    declare_param        go to state 94
    by_reference_or_not  go to state 95


State 72

   21 procedure_def: PROCEDURE IDENT $@4 procedure_params SEMICOLON . block

    VAR  shift, and go to state 13

    $default  reduce using rule 5 (declaring_vars_block)

    block                 go to state 96
    declaring_vars_block  go to state 15


State 73

   65 assignment: IDENT $@14 ASSIGNMENT . $@15 boolean_expr SEMICOLON

    $default  reduce using rule 64 ($@15)

    $@15  go to state 97


State 74

   67 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   68             | boolean_expr . DIFFERENT arithmetic_expr
   69             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   70             | boolean_expr . LESS arithmetic_expr
   71             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   72             | boolean_expr . MORE arithmetic_expr
   82 F: OPEN_PARENTHESIS boolean_expr . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 98
    EQUAL              shift, and go to state 75
    DIFFERENT          shift, and go to state 76
    LESS_OR_EQUAL      shift, and go to state 77
    LESS               shift, and go to state 78
    MORE_OR_EQUAL      shift, and go to state 79
    MORE               shift, and go to state 80


State 75

   67 boolean_expr: boolean_expr EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 99
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 76

   68 boolean_expr: boolean_expr DIFFERENT . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 100
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 77

   69 boolean_expr: boolean_expr LESS_OR_EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 101
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 78

   70 boolean_expr: boolean_expr LESS . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 102
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 79

   71 boolean_expr: boolean_expr MORE_OR_EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 103
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 80

   72 boolean_expr: boolean_expr MORE . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 104
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 81

   59 if_then: IF boolean_expr $@12 . THEN command

    THEN  shift, and go to state 105


State 82

   74 E: E PLUS . T

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    T  go to state 106
    F  go to state 62


State 83

   75 E: E MINUS . T

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    T  go to state 107
    F  go to state 62


State 84

   78 T: T DIV . F

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    F  go to state 108


State 85

   77 T: T ASTERISK . F

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    F  go to state 109


State 86

   56 loop: WHILE $@10 boolean_expr . $@11 DO command
   67 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   68             | boolean_expr . DIFFERENT arithmetic_expr
   69             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   70             | boolean_expr . LESS arithmetic_expr
   71             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   72             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 75
    DIFFERENT      shift, and go to state 76
    LESS_OR_EQUAL  shift, and go to state 77
    LESS           shift, and go to state 78
    MORE_OR_EQUAL  shift, and go to state 79
    MORE           shift, and go to state 80

    $default  reduce using rule 55 ($@11)

    $@11  go to state 110


State 87

   50 read: READ OPEN_PARENTHESIS IDENT . $@9 CLOSE_PARENTHESIS SEMICOLON

    $default  reduce using rule 49 ($@9)

    $@9  go to state 111


State 88

   51 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list . CLOSE_PARENTHESIS SEMICOLON
   52 write_boolean_expr_list: write_boolean_expr_list . COMMA boolean_expr

    CLOSE_PARENTHESIS  shift, and go to state 112
    COMMA              shift, and go to state 113


State 89

   53 write_boolean_expr_list: boolean_expr .
   67 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   68             | boolean_expr . DIFFERENT arithmetic_expr
   69             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   70             | boolean_expr . LESS arithmetic_expr
   71             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   72             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 75
    DIFFERENT      shift, and go to state 76
    LESS_OR_EQUAL  shift, and go to state 77
    LESS           shift, and go to state 78
    MORE_OR_EQUAL  shift, and go to state 79
    MORE           shift, and go to state 80

    $default  reduce using rule 53 (write_boolean_expr_list)


State 90

   61 cond_else: ELSE $@13 . command

    T_BEGIN  shift, and go to state 28
    IDENT    shift, and go to state 34
    IF       shift, and go to state 35
    WHILE    shift, and go to state 36
    READ     shift, and go to state 37
    WRITE    shift, and go to state 38

    T_BEGIN   [reduce using rule 47 (command)]
    IDENT     [reduce using rule 47 (command)]
    IF        [reduce using rule 47 (command)]
    WHILE     [reduce using rule 47 (command)]
    READ      [reduce using rule 47 (command)]
    WRITE     [reduce using rule 47 (command)]
    $default  reduce using rule 47 (command)

    compound_command  go to state 39
    command           go to state 114
    procedure_call    go to state 42
    read              go to state 43
    write             go to state 44
    loop              go to state 45
    conditional       go to state 46
    if_then           go to state 47
    assignment        go to state 48


State 91

   10 declare_var: $@2 id_simple_var_list COLON type $@3 SEMICOLON .

    $default  reduce using rule 10 (declare_var)


State 92

   31 by_reference_or_not: VAR .

    $default  reduce using rule 31 (by_reference_or_not)


State 93

   24 procedure_params: OPEN_PARENTHESIS $@5 declare_params . $@6 CLOSE_PARENTHESIS
   26 declare_params: declare_params . declare_param

    VAR  shift, and go to state 92

    IDENT     reduce using rule 32 (by_reference_or_not)
    $default  reduce using rule 23 ($@6)

    $@6                  go to state 115
    declare_param        go to state 116
    by_reference_or_not  go to state 95


State 94

   27 declare_params: declare_param .

    $default  reduce using rule 27 (declare_params)


State 95

   30 declare_param: by_reference_or_not . $@7 id_param_list COLON type $@8 optional_semicolon

    $default  reduce using rule 28 ($@7)

    $@7  go to state 117


State 96

   21 procedure_def: PROCEDURE IDENT $@4 procedure_params SEMICOLON block .

    $default  reduce using rule 21 (procedure_def)


State 97

   65 assignment: IDENT $@14 ASSIGNMENT $@15 . boolean_expr SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr     go to state 118
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 98

   82 F: OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS .

    $default  reduce using rule 82 (F)


State 99

   67 boolean_expr: boolean_expr EQUAL arithmetic_expr .

    $default  reduce using rule 67 (boolean_expr)


State 100

   68 boolean_expr: boolean_expr DIFFERENT arithmetic_expr .

    $default  reduce using rule 68 (boolean_expr)


State 101

   69 boolean_expr: boolean_expr LESS_OR_EQUAL arithmetic_expr .

    $default  reduce using rule 69 (boolean_expr)


State 102

   70 boolean_expr: boolean_expr LESS arithmetic_expr .

    $default  reduce using rule 70 (boolean_expr)


State 103

   71 boolean_expr: boolean_expr MORE_OR_EQUAL arithmetic_expr .

    $default  reduce using rule 71 (boolean_expr)


State 104

   72 boolean_expr: boolean_expr MORE arithmetic_expr .

    $default  reduce using rule 72 (boolean_expr)


State 105

   59 if_then: IF boolean_expr $@12 THEN . command

    T_BEGIN  shift, and go to state 28
    IDENT    shift, and go to state 34
    IF       shift, and go to state 35
    WHILE    shift, and go to state 36
    READ     shift, and go to state 37
    WRITE    shift, and go to state 38

    T_BEGIN   [reduce using rule 47 (command)]
    IDENT     [reduce using rule 47 (command)]
    IF        [reduce using rule 47 (command)]
    WHILE     [reduce using rule 47 (command)]
    READ      [reduce using rule 47 (command)]
    WRITE     [reduce using rule 47 (command)]
    $default  reduce using rule 47 (command)

    compound_command  go to state 39
    command           go to state 119
    procedure_call    go to state 42
    read              go to state 43
    write             go to state 44
    loop              go to state 45
    conditional       go to state 46
    if_then           go to state 47
    assignment        go to state 48


State 106

   74 E: E PLUS T .
   77 T: T . ASTERISK F
   78  | T . DIV F

    DIV       shift, and go to state 84
    ASTERISK  shift, and go to state 85

    $default  reduce using rule 74 (E)


State 107

   75 E: E MINUS T .
   77 T: T . ASTERISK F
   78  | T . DIV F

    DIV       shift, and go to state 84
    ASTERISK  shift, and go to state 85

    $default  reduce using rule 75 (E)


State 108

   78 T: T DIV F .

    $default  reduce using rule 78 (T)


State 109

   77 T: T ASTERISK F .

    $default  reduce using rule 77 (T)


State 110

   56 loop: WHILE $@10 boolean_expr $@11 . DO command

    DO  shift, and go to state 120


State 111

   50 read: READ OPEN_PARENTHESIS IDENT $@9 . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 121


State 112

   51 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 122


State 113

   52 write_boolean_expr_list: write_boolean_expr_list COMMA . boolean_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr     go to state 123
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 114

   61 cond_else: ELSE $@13 command .

    $default  reduce using rule 61 (cond_else)


State 115

   24 procedure_params: OPEN_PARENTHESIS $@5 declare_params $@6 . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 124


State 116

   26 declare_params: declare_params declare_param .

    $default  reduce using rule 26 (declare_params)


State 117

   30 declare_param: by_reference_or_not $@7 . id_param_list COLON type $@8 optional_semicolon

    IDENT  shift, and go to state 125

    id_param_list  go to state 126


State 118

   65 assignment: IDENT $@14 ASSIGNMENT $@15 boolean_expr . SEMICOLON
   67 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   68             | boolean_expr . DIFFERENT arithmetic_expr
   69             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   70             | boolean_expr . LESS arithmetic_expr
   71             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   72             | boolean_expr . MORE arithmetic_expr

    SEMICOLON      shift, and go to state 127
    EQUAL          shift, and go to state 75
    DIFFERENT      shift, and go to state 76
    LESS_OR_EQUAL  shift, and go to state 77
    LESS           shift, and go to state 78
    MORE_OR_EQUAL  shift, and go to state 79
    MORE           shift, and go to state 80


State 119

   59 if_then: IF boolean_expr $@12 THEN command .

    $default  reduce using rule 59 (if_then)


State 120

   56 loop: WHILE $@10 boolean_expr $@11 DO . command

    T_BEGIN  shift, and go to state 28
    IDENT    shift, and go to state 34
    IF       shift, and go to state 35
    WHILE    shift, and go to state 36
    READ     shift, and go to state 37
    WRITE    shift, and go to state 38

    T_BEGIN   [reduce using rule 47 (command)]
    IDENT     [reduce using rule 47 (command)]
    IF        [reduce using rule 47 (command)]
    WHILE     [reduce using rule 47 (command)]
    READ      [reduce using rule 47 (command)]
    WRITE     [reduce using rule 47 (command)]
    $default  reduce using rule 47 (command)

    compound_command  go to state 39
    command           go to state 128
    procedure_call    go to state 42
    read              go to state 43
    write             go to state 44
    loop              go to state 45
    conditional       go to state 46
    if_then           go to state 47
    assignment        go to state 48


State 121

   50 read: READ OPEN_PARENTHESIS IDENT $@9 CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 129


State 122

   51 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS SEMICOLON .

    $default  reduce using rule 51 (write)


State 123

   52 write_boolean_expr_list: write_boolean_expr_list COMMA boolean_expr .
   67 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   68             | boolean_expr . DIFFERENT arithmetic_expr
   69             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   70             | boolean_expr . LESS arithmetic_expr
   71             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   72             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 75
    DIFFERENT      shift, and go to state 76
    LESS_OR_EQUAL  shift, and go to state 77
    LESS           shift, and go to state 78
    MORE_OR_EQUAL  shift, and go to state 79
    MORE           shift, and go to state 80

    $default  reduce using rule 52 (write_boolean_expr_list)


State 124

   24 procedure_params: OPEN_PARENTHESIS $@5 declare_params $@6 CLOSE_PARENTHESIS .

    $default  reduce using rule 24 (procedure_params)


State 125

   34 id_param_list: IDENT .

    $default  reduce using rule 34 (id_param_list)


State 126

   30 declare_param: by_reference_or_not $@7 id_param_list . COLON type $@8 optional_semicolon
   33 id_param_list: id_param_list . COMMA IDENT

    COMMA  shift, and go to state 130
    COLON  shift, and go to state 131


State 127

   65 assignment: IDENT $@14 ASSIGNMENT $@15 boolean_expr SEMICOLON .

    $default  reduce using rule 65 (assignment)


State 128

   56 loop: WHILE $@10 boolean_expr $@11 DO command .

    $default  reduce using rule 56 (loop)


State 129

   50 read: READ OPEN_PARENTHESIS IDENT $@9 CLOSE_PARENTHESIS SEMICOLON .

    $default  reduce using rule 50 (read)


State 130

   33 id_param_list: id_param_list COMMA . IDENT

    IDENT  shift, and go to state 132


State 131

   30 declare_param: by_reference_or_not $@7 id_param_list COLON . type $@8 optional_semicolon

    IDENT  shift, and go to state 50

    type  go to state 133


State 132

   33 id_param_list: id_param_list COMMA IDENT .

    $default  reduce using rule 33 (id_param_list)


State 133

   30 declare_param: by_reference_or_not $@7 id_param_list COLON type . $@8 optional_semicolon

    $default  reduce using rule 29 ($@8)

    $@8  go to state 134


State 134

   30 declare_param: by_reference_or_not $@7 id_param_list COLON type $@8 . optional_semicolon

    SEMICOLON  shift, and go to state 135

    $default  reduce using rule 36 (optional_semicolon)

    optional_semicolon  go to state 136


State 135

   35 optional_semicolon: SEMICOLON .

    $default  reduce using rule 35 (optional_semicolon)


State 136

   30 declare_param: by_reference_or_not $@7 id_param_list COLON type $@8 optional_semicolon .

    $default  reduce using rule 30 (declare_param)
