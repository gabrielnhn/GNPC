Terminals unused in grammar

    LABEL
    TYPE
    ARRAY
    OF
    PROCEDURE
    GOTO
    OR
    AND
    NOT


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    3 block: declaring_vars_block compound_command

    4 declaring_vars_block: var

    5 var: VAR declare_vars
    6    | %empty

    7 declare_vars: declare_vars declare_var
    8             | declare_var

    9 $@2: %empty

   10 $@3: %empty

   11 declare_var: $@2 id_var_list COLON type $@3 SEMICOLON

   12 type: IDENT

   13 id_var_list: id_var_list COMMA IDENT
   14            | IDENT

   15 idents_list: idents_list COMMA IDENT
   16            | IDENT

   17 compound_command: T_BEGIN commands T_END

   18 commands: commands command
   19         | command

   20 command: assignment
   21        | compound_command
   22        | loop
   23        | conditional
   24        | read
   25        | write

   26 $@4: %empty

   27 read: READ OPEN_PARENTHESIS IDENT $@4 CLOSE_PARENTHESIS SEMICOLON

   28 write: WRITE OPEN_PARENTHESIS boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

   29 boolean_expr_list: boolean_expr_list COMMA boolean_expr
   30                  | boolean_expr

   31 $@5: %empty

   32 $@6: %empty

   33 loop: WHILE $@5 boolean_expr $@6 DO command

   34 conditional: if_then cond_else

   35 $@7: %empty

   36 if_then: IF boolean_expr $@7 THEN command

   37 $@8: %empty

   38 cond_else: ELSE $@8 command
   39          | %empty

   40 $@9: %empty

   41 assignment: IDENT $@9 ASSIGNMENT boolean_expr SEMICOLON

   42 boolean_expr: arithmetic_expr
   43             | boolean_expr EQUAL arithmetic_expr
   44             | boolean_expr DIFFERENT arithmetic_expr
   45             | boolean_expr LESS_OR_EQUAL arithmetic_expr
   46             | boolean_expr LESS arithmetic_expr
   47             | boolean_expr MORE_OR_EQUAL arithmetic_expr
   48             | boolean_expr MORE arithmetic_expr

   49 arithmetic_expr: E

   50 E: E PLUS T
   51  | E MINUS T
   52  | T

   53 T: T ASTERISK F
   54  | T DIV F
   55  | F

   56 F: NUMBER
   57  | IDENT
   58  | OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 2
    OPEN_PARENTHESIS (259) 2 27 28 58
    CLOSE_PARENTHESIS (260) 2 27 28 58
    COMMA (261) 13 15 29
    SEMICOLON (262) 2 11 27 28 41
    COLON (263) 11
    DOT (264) 2
    T_BEGIN (265) 17
    T_END (266) 17
    VAR (267) 5
    IDENT (268) 2 12 13 14 15 16 27 41 57
    ASSIGNMENT (269) 41
    LABEL (270)
    TYPE (271)
    ARRAY (272)
    OF (273)
    PROCEDURE (274)
    GOTO (275)
    IF (276) 36
    THEN (277) 36
    ELSE (278) 38
    WHILE (279) 33
    DO (280) 33
    OR (281)
    AND (282)
    NOT (283)
    DIV (284) 54
    ASTERISK (285) 53
    PLUS (286) 50
    MINUS (287) 51
    EQUAL (288) 43
    DIFFERENT (289) 44
    LESS_OR_EQUAL (290) 45
    LESS (291) 46
    MORE_OR_EQUAL (292) 47
    MORE (293) 48
    NUMBER (294) 56
    READ (295) 27
    WRITE (296) 28
    LOWER_THAN_ELSE (297)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program (44)
        on left: 2
        on right: 0
    $@1 (45)
        on left: 1
        on right: 2
    block (46)
        on left: 3
        on right: 2
    declaring_vars_block (47)
        on left: 4
        on right: 3
    var (48)
        on left: 5 6
        on right: 4
    declare_vars (49)
        on left: 7 8
        on right: 5 7
    declare_var (50)
        on left: 11
        on right: 7 8
    $@2 (51)
        on left: 9
        on right: 11
    $@3 (52)
        on left: 10
        on right: 11
    type (53)
        on left: 12
        on right: 11
    id_var_list (54)
        on left: 13 14
        on right: 11 13
    idents_list (55)
        on left: 15 16
        on right: 2 15
    compound_command (56)
        on left: 17
        on right: 3 21
    commands (57)
        on left: 18 19
        on right: 17 18
    command (58)
        on left: 20 21 22 23 24 25
        on right: 18 19 33 36 38
    read (59)
        on left: 27
        on right: 24
    $@4 (60)
        on left: 26
        on right: 27
    write (61)
        on left: 28
        on right: 25
    boolean_expr_list (62)
        on left: 29 30
        on right: 28 29
    loop (63)
        on left: 33
        on right: 22
    $@5 (64)
        on left: 31
        on right: 33
    $@6 (65)
        on left: 32
        on right: 33
    conditional (66)
        on left: 34
        on right: 23
    if_then (67)
        on left: 36
        on right: 34
    $@7 (68)
        on left: 35
        on right: 36
    cond_else (69)
        on left: 38 39
        on right: 34
    $@8 (70)
        on left: 37
        on right: 38
    assignment (71)
        on left: 41
        on right: 20
    $@9 (72)
        on left: 40
        on right: 41
    boolean_expr (73)
        on left: 42 43 44 45 46 47 48
        on right: 29 30 33 36 41 43 44 45 46 47 48 58
    arithmetic_expr (74)
        on left: 49
        on right: 42 43 44 45 46 47 48
    E (75)
        on left: 50 51 52
        on right: 49 50 51
    T (76)
        on left: 53 54 55
        on right: 50 51 52 53 54
    F (77)
        on left: 56 57 58
        on right: 53 54 55


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 PROGRAM . IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 5


State 5

    2 program: $@1 PROGRAM IDENT . OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    OPEN_PARENTHESIS  shift, and go to state 6


State 6

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS . idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 7

    idents_list  go to state 8


State 7

   16 idents_list: IDENT .

    $default  reduce using rule 16 (idents_list)


State 8

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list . CLOSE_PARENTHESIS SEMICOLON block DOT
   15 idents_list: idents_list . COMMA IDENT

    CLOSE_PARENTHESIS  shift, and go to state 9
    COMMA              shift, and go to state 10


State 9

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS . SEMICOLON block DOT

    SEMICOLON  shift, and go to state 11


State 10

   15 idents_list: idents_list COMMA . IDENT

    IDENT  shift, and go to state 12


State 11

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON . block DOT

    VAR  shift, and go to state 13

    $default  reduce using rule 6 (var)

    block                 go to state 14
    declaring_vars_block  go to state 15
    var                   go to state 16


State 12

   15 idents_list: idents_list COMMA IDENT .

    $default  reduce using rule 15 (idents_list)


State 13

    5 var: VAR . declare_vars

    $default  reduce using rule 9 ($@2)

    declare_vars  go to state 17
    declare_var   go to state 18
    $@2           go to state 19


State 14

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block . DOT

    DOT  shift, and go to state 20


State 15

    3 block: declaring_vars_block . compound_command

    T_BEGIN  shift, and go to state 21

    compound_command  go to state 22


State 16

    4 declaring_vars_block: var .

    $default  reduce using rule 4 (declaring_vars_block)


State 17

    5 var: VAR declare_vars .
    7 declare_vars: declare_vars . declare_var

    IDENT     reduce using rule 9 ($@2)
    $default  reduce using rule 5 (var)

    declare_var  go to state 23
    $@2          go to state 19


State 18

    8 declare_vars: declare_var .

    $default  reduce using rule 8 (declare_vars)


State 19

   11 declare_var: $@2 . id_var_list COLON type $@3 SEMICOLON

    IDENT  shift, and go to state 24

    id_var_list  go to state 25


State 20

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT .

    $default  reduce using rule 2 (program)


State 21

   17 compound_command: T_BEGIN . commands T_END

    T_BEGIN  shift, and go to state 21
    IDENT    shift, and go to state 26
    IF       shift, and go to state 27
    WHILE    shift, and go to state 28
    READ     shift, and go to state 29
    WRITE    shift, and go to state 30

    compound_command  go to state 31
    commands          go to state 32
    command           go to state 33
    read              go to state 34
    write             go to state 35
    loop              go to state 36
    conditional       go to state 37
    if_then           go to state 38
    assignment        go to state 39


State 22

    3 block: declaring_vars_block compound_command .

    $default  reduce using rule 3 (block)


State 23

    7 declare_vars: declare_vars declare_var .

    $default  reduce using rule 7 (declare_vars)


State 24

   14 id_var_list: IDENT .

    $default  reduce using rule 14 (id_var_list)


State 25

   11 declare_var: $@2 id_var_list . COLON type $@3 SEMICOLON
   13 id_var_list: id_var_list . COMMA IDENT

    COMMA  shift, and go to state 40
    COLON  shift, and go to state 41


State 26

   41 assignment: IDENT . $@9 ASSIGNMENT boolean_expr SEMICOLON

    $default  reduce using rule 40 ($@9)

    $@9  go to state 42


State 27

   36 if_then: IF . boolean_expr $@7 THEN command

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    boolean_expr     go to state 46
    arithmetic_expr  go to state 47
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 28

   33 loop: WHILE . $@5 boolean_expr $@6 DO command

    $default  reduce using rule 31 ($@5)

    $@5  go to state 51


State 29

   27 read: READ . OPEN_PARENTHESIS IDENT $@4 CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 52


State 30

   28 write: WRITE . OPEN_PARENTHESIS boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 53


State 31

   21 command: compound_command .

    $default  reduce using rule 21 (command)


State 32

   17 compound_command: T_BEGIN commands . T_END
   18 commands: commands . command

    T_BEGIN  shift, and go to state 21
    T_END    shift, and go to state 54
    IDENT    shift, and go to state 26
    IF       shift, and go to state 27
    WHILE    shift, and go to state 28
    READ     shift, and go to state 29
    WRITE    shift, and go to state 30

    compound_command  go to state 31
    command           go to state 55
    read              go to state 34
    write             go to state 35
    loop              go to state 36
    conditional       go to state 37
    if_then           go to state 38
    assignment        go to state 39


State 33

   19 commands: command .

    $default  reduce using rule 19 (commands)


State 34

   24 command: read .

    $default  reduce using rule 24 (command)


State 35

   25 command: write .

    $default  reduce using rule 25 (command)


State 36

   22 command: loop .

    $default  reduce using rule 22 (command)


State 37

   23 command: conditional .

    $default  reduce using rule 23 (command)


State 38

   34 conditional: if_then . cond_else

    ELSE  shift, and go to state 56

    $default  reduce using rule 39 (cond_else)

    cond_else  go to state 57


State 39

   20 command: assignment .

    $default  reduce using rule 20 (command)


State 40

   13 id_var_list: id_var_list COMMA . IDENT

    IDENT  shift, and go to state 58


State 41

   11 declare_var: $@2 id_var_list COLON . type $@3 SEMICOLON

    IDENT  shift, and go to state 59

    type  go to state 60


State 42

   41 assignment: IDENT $@9 . ASSIGNMENT boolean_expr SEMICOLON

    ASSIGNMENT  shift, and go to state 61


State 43

   58 F: OPEN_PARENTHESIS . boolean_expr CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    boolean_expr     go to state 62
    arithmetic_expr  go to state 47
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 44

   57 F: IDENT .

    $default  reduce using rule 57 (F)


State 45

   56 F: NUMBER .

    $default  reduce using rule 56 (F)


State 46

   36 if_then: IF boolean_expr . $@7 THEN command
   43 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   44             | boolean_expr . DIFFERENT arithmetic_expr
   45             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   46             | boolean_expr . LESS arithmetic_expr
   47             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   48             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 63
    DIFFERENT      shift, and go to state 64
    LESS_OR_EQUAL  shift, and go to state 65
    LESS           shift, and go to state 66
    MORE_OR_EQUAL  shift, and go to state 67
    MORE           shift, and go to state 68

    $default  reduce using rule 35 ($@7)

    $@7  go to state 69


State 47

   42 boolean_expr: arithmetic_expr .

    $default  reduce using rule 42 (boolean_expr)


State 48

   49 arithmetic_expr: E .
   50 E: E . PLUS T
   51  | E . MINUS T

    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71

    $default  reduce using rule 49 (arithmetic_expr)


State 49

   52 E: T .
   53 T: T . ASTERISK F
   54  | T . DIV F

    DIV       shift, and go to state 72
    ASTERISK  shift, and go to state 73

    $default  reduce using rule 52 (E)


State 50

   55 T: F .

    $default  reduce using rule 55 (T)


State 51

   33 loop: WHILE $@5 . boolean_expr $@6 DO command

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    boolean_expr     go to state 74
    arithmetic_expr  go to state 47
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 52

   27 read: READ OPEN_PARENTHESIS . IDENT $@4 CLOSE_PARENTHESIS SEMICOLON

    IDENT  shift, and go to state 75


State 53

   28 write: WRITE OPEN_PARENTHESIS . boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    boolean_expr_list  go to state 76
    boolean_expr       go to state 77
    arithmetic_expr    go to state 47
    E                  go to state 48
    T                  go to state 49
    F                  go to state 50


State 54

   17 compound_command: T_BEGIN commands T_END .

    $default  reduce using rule 17 (compound_command)


State 55

   18 commands: commands command .

    $default  reduce using rule 18 (commands)


State 56

   38 cond_else: ELSE . $@8 command

    $default  reduce using rule 37 ($@8)

    $@8  go to state 78


State 57

   34 conditional: if_then cond_else .

    $default  reduce using rule 34 (conditional)


State 58

   13 id_var_list: id_var_list COMMA IDENT .

    $default  reduce using rule 13 (id_var_list)


State 59

   12 type: IDENT .

    $default  reduce using rule 12 (type)


State 60

   11 declare_var: $@2 id_var_list COLON type . $@3 SEMICOLON

    $default  reduce using rule 10 ($@3)

    $@3  go to state 79


State 61

   41 assignment: IDENT $@9 ASSIGNMENT . boolean_expr SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    boolean_expr     go to state 80
    arithmetic_expr  go to state 47
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 62

   43 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   44             | boolean_expr . DIFFERENT arithmetic_expr
   45             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   46             | boolean_expr . LESS arithmetic_expr
   47             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   48             | boolean_expr . MORE arithmetic_expr
   58 F: OPEN_PARENTHESIS boolean_expr . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 81
    EQUAL              shift, and go to state 63
    DIFFERENT          shift, and go to state 64
    LESS_OR_EQUAL      shift, and go to state 65
    LESS               shift, and go to state 66
    MORE_OR_EQUAL      shift, and go to state 67
    MORE               shift, and go to state 68


State 63

   43 boolean_expr: boolean_expr EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    arithmetic_expr  go to state 82
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 64

   44 boolean_expr: boolean_expr DIFFERENT . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    arithmetic_expr  go to state 83
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 65

   45 boolean_expr: boolean_expr LESS_OR_EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    arithmetic_expr  go to state 84
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 66

   46 boolean_expr: boolean_expr LESS . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    arithmetic_expr  go to state 85
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 67

   47 boolean_expr: boolean_expr MORE_OR_EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    arithmetic_expr  go to state 86
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 68

   48 boolean_expr: boolean_expr MORE . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    arithmetic_expr  go to state 87
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 69

   36 if_then: IF boolean_expr $@7 . THEN command

    THEN  shift, and go to state 88


State 70

   50 E: E PLUS . T

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    T  go to state 89
    F  go to state 50


State 71

   51 E: E MINUS . T

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    T  go to state 90
    F  go to state 50


State 72

   54 T: T DIV . F

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    F  go to state 91


State 73

   53 T: T ASTERISK . F

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    F  go to state 92


State 74

   33 loop: WHILE $@5 boolean_expr . $@6 DO command
   43 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   44             | boolean_expr . DIFFERENT arithmetic_expr
   45             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   46             | boolean_expr . LESS arithmetic_expr
   47             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   48             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 63
    DIFFERENT      shift, and go to state 64
    LESS_OR_EQUAL  shift, and go to state 65
    LESS           shift, and go to state 66
    MORE_OR_EQUAL  shift, and go to state 67
    MORE           shift, and go to state 68

    $default  reduce using rule 32 ($@6)

    $@6  go to state 93


State 75

   27 read: READ OPEN_PARENTHESIS IDENT . $@4 CLOSE_PARENTHESIS SEMICOLON

    $default  reduce using rule 26 ($@4)

    $@4  go to state 94


State 76

   28 write: WRITE OPEN_PARENTHESIS boolean_expr_list . CLOSE_PARENTHESIS SEMICOLON
   29 boolean_expr_list: boolean_expr_list . COMMA boolean_expr

    CLOSE_PARENTHESIS  shift, and go to state 95
    COMMA              shift, and go to state 96


State 77

   30 boolean_expr_list: boolean_expr .
   43 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   44             | boolean_expr . DIFFERENT arithmetic_expr
   45             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   46             | boolean_expr . LESS arithmetic_expr
   47             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   48             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 63
    DIFFERENT      shift, and go to state 64
    LESS_OR_EQUAL  shift, and go to state 65
    LESS           shift, and go to state 66
    MORE_OR_EQUAL  shift, and go to state 67
    MORE           shift, and go to state 68

    $default  reduce using rule 30 (boolean_expr_list)


State 78

   38 cond_else: ELSE $@8 . command

    T_BEGIN  shift, and go to state 21
    IDENT    shift, and go to state 26
    IF       shift, and go to state 27
    WHILE    shift, and go to state 28
    READ     shift, and go to state 29
    WRITE    shift, and go to state 30

    compound_command  go to state 31
    command           go to state 97
    read              go to state 34
    write             go to state 35
    loop              go to state 36
    conditional       go to state 37
    if_then           go to state 38
    assignment        go to state 39


State 79

   11 declare_var: $@2 id_var_list COLON type $@3 . SEMICOLON

    SEMICOLON  shift, and go to state 98


State 80

   41 assignment: IDENT $@9 ASSIGNMENT boolean_expr . SEMICOLON
   43 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   44             | boolean_expr . DIFFERENT arithmetic_expr
   45             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   46             | boolean_expr . LESS arithmetic_expr
   47             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   48             | boolean_expr . MORE arithmetic_expr

    SEMICOLON      shift, and go to state 99
    EQUAL          shift, and go to state 63
    DIFFERENT      shift, and go to state 64
    LESS_OR_EQUAL  shift, and go to state 65
    LESS           shift, and go to state 66
    MORE_OR_EQUAL  shift, and go to state 67
    MORE           shift, and go to state 68


State 81

   58 F: OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS .

    $default  reduce using rule 58 (F)


State 82

   43 boolean_expr: boolean_expr EQUAL arithmetic_expr .

    $default  reduce using rule 43 (boolean_expr)


State 83

   44 boolean_expr: boolean_expr DIFFERENT arithmetic_expr .

    $default  reduce using rule 44 (boolean_expr)


State 84

   45 boolean_expr: boolean_expr LESS_OR_EQUAL arithmetic_expr .

    $default  reduce using rule 45 (boolean_expr)


State 85

   46 boolean_expr: boolean_expr LESS arithmetic_expr .

    $default  reduce using rule 46 (boolean_expr)


State 86

   47 boolean_expr: boolean_expr MORE_OR_EQUAL arithmetic_expr .

    $default  reduce using rule 47 (boolean_expr)


State 87

   48 boolean_expr: boolean_expr MORE arithmetic_expr .

    $default  reduce using rule 48 (boolean_expr)


State 88

   36 if_then: IF boolean_expr $@7 THEN . command

    T_BEGIN  shift, and go to state 21
    IDENT    shift, and go to state 26
    IF       shift, and go to state 27
    WHILE    shift, and go to state 28
    READ     shift, and go to state 29
    WRITE    shift, and go to state 30

    compound_command  go to state 31
    command           go to state 100
    read              go to state 34
    write             go to state 35
    loop              go to state 36
    conditional       go to state 37
    if_then           go to state 38
    assignment        go to state 39


State 89

   50 E: E PLUS T .
   53 T: T . ASTERISK F
   54  | T . DIV F

    DIV       shift, and go to state 72
    ASTERISK  shift, and go to state 73

    $default  reduce using rule 50 (E)


State 90

   51 E: E MINUS T .
   53 T: T . ASTERISK F
   54  | T . DIV F

    DIV       shift, and go to state 72
    ASTERISK  shift, and go to state 73

    $default  reduce using rule 51 (E)


State 91

   54 T: T DIV F .

    $default  reduce using rule 54 (T)


State 92

   53 T: T ASTERISK F .

    $default  reduce using rule 53 (T)


State 93

   33 loop: WHILE $@5 boolean_expr $@6 . DO command

    DO  shift, and go to state 101


State 94

   27 read: READ OPEN_PARENTHESIS IDENT $@4 . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 102


State 95

   28 write: WRITE OPEN_PARENTHESIS boolean_expr_list CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 103


State 96

   29 boolean_expr_list: boolean_expr_list COMMA . boolean_expr

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    boolean_expr     go to state 104
    arithmetic_expr  go to state 47
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 97

   38 cond_else: ELSE $@8 command .

    $default  reduce using rule 38 (cond_else)


State 98

   11 declare_var: $@2 id_var_list COLON type $@3 SEMICOLON .

    $default  reduce using rule 11 (declare_var)


State 99

   41 assignment: IDENT $@9 ASSIGNMENT boolean_expr SEMICOLON .

    $default  reduce using rule 41 (assignment)


State 100

   36 if_then: IF boolean_expr $@7 THEN command .

    $default  reduce using rule 36 (if_then)


State 101

   33 loop: WHILE $@5 boolean_expr $@6 DO . command

    T_BEGIN  shift, and go to state 21
    IDENT    shift, and go to state 26
    IF       shift, and go to state 27
    WHILE    shift, and go to state 28
    READ     shift, and go to state 29
    WRITE    shift, and go to state 30

    compound_command  go to state 31
    command           go to state 105
    read              go to state 34
    write             go to state 35
    loop              go to state 36
    conditional       go to state 37
    if_then           go to state 38
    assignment        go to state 39


State 102

   27 read: READ OPEN_PARENTHESIS IDENT $@4 CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 106


State 103

   28 write: WRITE OPEN_PARENTHESIS boolean_expr_list CLOSE_PARENTHESIS SEMICOLON .

    $default  reduce using rule 28 (write)


State 104

   29 boolean_expr_list: boolean_expr_list COMMA boolean_expr .
   43 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   44             | boolean_expr . DIFFERENT arithmetic_expr
   45             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   46             | boolean_expr . LESS arithmetic_expr
   47             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   48             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 63
    DIFFERENT      shift, and go to state 64
    LESS_OR_EQUAL  shift, and go to state 65
    LESS           shift, and go to state 66
    MORE_OR_EQUAL  shift, and go to state 67
    MORE           shift, and go to state 68

    $default  reduce using rule 29 (boolean_expr_list)


State 105

   33 loop: WHILE $@5 boolean_expr $@6 DO command .

    $default  reduce using rule 33 (loop)


State 106

   27 read: READ OPEN_PARENTHESIS IDENT $@4 CLOSE_PARENTHESIS SEMICOLON .

    $default  reduce using rule 27 (read)
