Terminals unused in grammar

    ASSIGNMENT
    LABEL
    TYPE
    ARRAY
    OF
    PROCEDURE
    GOTO
    IF
    THEN
    ELSE
    WHILE
    DO
    OR
    AND
    NOT
    DIV
    ASTERISK
    PLUS
    MINUS


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    3 $@2: %empty

    4 block: declaring_vars_block $@2 compound_command

    5 declaring_vars_block: var

    6 $@3: %empty

    7 var: $@3 VAR declare_vars
    8    | %empty

    9 declare_vars: declare_vars declare_var
   10             | declare_var

   11 $@4: %empty

   12 $@5: %empty

   13 declare_var: $@4 id_var_list COLON tipo $@5 SEMICOLON

   14 tipo: IDENT

   15 id_var_list: id_var_list COMMA IDENT
   16            | IDENT

   17 idents_list: idents_list COMMA IDENT
   18            | IDENT

   19 compound_command: T_BEGIN commands T_END

   20 commands: %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 2
    OPEN_PARENTHESIS (259) 2
    CLOSE_PARENTHESIS (260) 2
    COMMA (261) 15 17
    SEMICOLON (262) 2 13
    COLON (263) 13
    DOT (264) 2
    T_BEGIN (265) 19
    T_END (266) 19
    VAR (267) 7
    IDENT (268) 2 14 15 16 17 18
    ASSIGNMENT (269)
    LABEL (270)
    TYPE (271)
    ARRAY (272)
    OF (273)
    PROCEDURE (274)
    GOTO (275)
    IF (276)
    THEN (277)
    ELSE (278)
    WHILE (279)
    DO (280)
    OR (281)
    AND (282)
    NOT (283)
    DIV (284)
    ASTERISK (285)
    PLUS (286)
    MINUS (287)


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    program (34)
        on left: 2
        on right: 0
    $@1 (35)
        on left: 1
        on right: 2
    block (36)
        on left: 4
        on right: 2
    $@2 (37)
        on left: 3
        on right: 4
    declaring_vars_block (38)
        on left: 5
        on right: 4
    var (39)
        on left: 7 8
        on right: 5
    $@3 (40)
        on left: 6
        on right: 7
    declare_vars (41)
        on left: 9 10
        on right: 7 9
    declare_var (42)
        on left: 13
        on right: 9 10
    $@4 (43)
        on left: 11
        on right: 13
    $@5 (44)
        on left: 12
        on right: 13
    tipo (45)
        on left: 14
        on right: 13
    id_var_list (46)
        on left: 15 16
        on right: 13 15
    idents_list (47)
        on left: 17 18
        on right: 2 17
    compound_command (48)
        on left: 19
        on right: 4
    commands (49)
        on left: 20
        on right: 19


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 PROGRAM . IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 5


State 5

    2 program: $@1 PROGRAM IDENT . OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    OPEN_PARENTHESIS  shift, and go to state 6


State 6

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS . idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 7

    idents_list  go to state 8


State 7

   18 idents_list: IDENT .

    $default  reduce using rule 18 (idents_list)


State 8

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list . CLOSE_PARENTHESIS SEMICOLON block DOT
   17 idents_list: idents_list . COMMA IDENT

    CLOSE_PARENTHESIS  shift, and go to state 9
    COMMA              shift, and go to state 10


State 9

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS . SEMICOLON block DOT

    SEMICOLON  shift, and go to state 11


State 10

   17 idents_list: idents_list COMMA . IDENT

    IDENT  shift, and go to state 12


State 11

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON . block DOT

    T_BEGIN   reduce using rule 8 (var)
    $default  reduce using rule 6 ($@3)

    block                 go to state 13
    declaring_vars_block  go to state 14
    var                   go to state 15
    $@3                   go to state 16


State 12

   17 idents_list: idents_list COMMA IDENT .

    $default  reduce using rule 17 (idents_list)


State 13

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block . DOT

    DOT  shift, and go to state 17


State 14

    4 block: declaring_vars_block . $@2 compound_command

    $default  reduce using rule 3 ($@2)

    $@2  go to state 18


State 15

    5 declaring_vars_block: var .

    $default  reduce using rule 5 (declaring_vars_block)


State 16

    7 var: $@3 . VAR declare_vars

    VAR  shift, and go to state 19


State 17

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT .

    $default  reduce using rule 2 (program)


State 18

    4 block: declaring_vars_block $@2 . compound_command

    T_BEGIN  shift, and go to state 20

    compound_command  go to state 21


State 19

    7 var: $@3 VAR . declare_vars

    $default  reduce using rule 11 ($@4)

    declare_vars  go to state 22
    declare_var   go to state 23
    $@4           go to state 24


State 20

   19 compound_command: T_BEGIN . commands T_END

    $default  reduce using rule 20 (commands)

    commands  go to state 25


State 21

    4 block: declaring_vars_block $@2 compound_command .

    $default  reduce using rule 4 (block)


State 22

    7 var: $@3 VAR declare_vars .
    9 declare_vars: declare_vars . declare_var

    IDENT     reduce using rule 11 ($@4)
    $default  reduce using rule 7 (var)

    declare_var  go to state 26
    $@4          go to state 24


State 23

   10 declare_vars: declare_var .

    $default  reduce using rule 10 (declare_vars)


State 24

   13 declare_var: $@4 . id_var_list COLON tipo $@5 SEMICOLON

    IDENT  shift, and go to state 27

    id_var_list  go to state 28


State 25

   19 compound_command: T_BEGIN commands . T_END

    T_END  shift, and go to state 29


State 26

    9 declare_vars: declare_vars declare_var .

    $default  reduce using rule 9 (declare_vars)


State 27

   16 id_var_list: IDENT .

    $default  reduce using rule 16 (id_var_list)


State 28

   13 declare_var: $@4 id_var_list . COLON tipo $@5 SEMICOLON
   15 id_var_list: id_var_list . COMMA IDENT

    COMMA  shift, and go to state 30
    COLON  shift, and go to state 31


State 29

   19 compound_command: T_BEGIN commands T_END .

    $default  reduce using rule 19 (compound_command)


State 30

   15 id_var_list: id_var_list COMMA . IDENT

    IDENT  shift, and go to state 32


State 31

   13 declare_var: $@4 id_var_list COLON . tipo $@5 SEMICOLON

    IDENT  shift, and go to state 33

    tipo  go to state 34


State 32

   15 id_var_list: id_var_list COMMA IDENT .

    $default  reduce using rule 15 (id_var_list)


State 33

   14 tipo: IDENT .

    $default  reduce using rule 14 (tipo)


State 34

   13 declare_var: $@4 id_var_list COLON tipo . $@5 SEMICOLON

    $default  reduce using rule 12 ($@5)

    $@5  go to state 35


State 35

   13 declare_var: $@4 id_var_list COLON tipo $@5 . SEMICOLON

    SEMICOLON  shift, and go to state 36


State 36

   13 declare_var: $@4 id_var_list COLON tipo $@5 SEMICOLON .

    $default  reduce using rule 13 (declare_var)
