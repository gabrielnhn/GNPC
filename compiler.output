Terminals unused in grammar

    LABEL
    TYPE
    ARRAY
    OF
    GOTO
    OR
    AND
    NOT


State 84 conflicts: 17 reduce/reduce
State 143 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 $@1: ε

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    3 $@2: ε

    4 block: declaring_vars_block $@2 declaring_procedures_block compound_command

    5 $@3: ε

    6 declaring_vars_block: VAR $@3 declare_vars
    7                     | ε

    8 declare_vars: declare_vars declare_var
    9             | declare_var

   10 $@4: ε

   11 $@5: ε

   12 declare_var: $@4 id_simple_var_list COLON type $@5 SEMICOLON

   13 type: IDENT

   14 id_simple_var_list: id_simple_var_list COMMA IDENT
   15                   | IDENT

   16 idents_list: idents_list COMMA IDENT
   17            | IDENT

   18 declaring_procedures_block: procedures
   19                           | ε

   20 procedures: procedures procedure_def
   21           | procedure_def

   22 $@6: ε

   23 procedure_def: PROCEDURE IDENT $@6 procedure_params SEMICOLON procedure_def_continues

   24 $@7: ε

   25 $@8: ε

   26 procedure_def: FUNCTION IDENT $@7 procedure_params COLON IDENT $@8 SEMICOLON procedure_def_continues

   27 $@9: ε

   28 procedure_def_continues: FORWARD $@9 SEMICOLON

   29 $@10: ε

   30 $@11: ε

   31 procedure_def_continues: $@10 block $@11 SEMICOLON

   32 $@12: ε

   33 procedure_params: OPEN_PARENTHESIS $@12 procedure_params_continues CLOSE_PARENTHESIS
   34                 | ε

   35 procedure_params_continues: declare_params
   36                           | ε

   37 declare_params: declare_params declare_param
   38               | declare_param

   39 $@13: ε

   40 $@14: ε

   41 declare_param: by_reference_or_not $@13 id_param_list COLON type $@14 optional_semicolon

   42 by_reference_or_not: VAR
   43                    | ε

   44 id_param_list: id_param_list COMMA IDENT
   45              | IDENT

   46 optional_semicolon: SEMICOLON
   47                   | ε

   48 compound_command: T_BEGIN commands optional_semicolon T_END

   49 commands: commands SEMICOLON command
   50         | command

   51 $@15: ε

   52 command: IDENT $@15 starts_with_ident
   53        | loop
   54        | conditional
   55        | read
   56        | write
   57        | compound_command

   58 starts_with_ident: procedure_call
   59                  | assignment_operation

   60 $@16: ε

   61 procedure_call: $@16 procedure_call_continues

   62 procedure_call_continues: OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS
   63                         | ε

   64 procedure_arguments: args_list
   65                    | ε

   66 args_list: args_list COMMA ARGUMENT
   67          | ARGUMENT

   68 ARGUMENT: IDENT
   69         | boolean_expr

   70 read: READ OPEN_PARENTHESIS read_ident_list CLOSE_PARENTHESIS

   71 read_ident_list: read_ident_list COMMA IDENT
   72                | IDENT

   73 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS

   74 write_boolean_expr_list: write_boolean_expr_list COMMA boolean_expr
   75                        | boolean_expr

   76 $@17: ε

   77 $@18: ε

   78 loop: WHILE $@17 boolean_expr $@18 DO command

   79 conditional: if_then cond_else

   80 $@19: ε

   81 if_then: IF boolean_expr $@19 THEN command

   82 $@20: ε

   83 cond_else: ELSE $@20 command
   84          | ε

   85 $@21: ε

   86 assignment_operation: $@21 ASSIGNMENT boolean_expr

   87 boolean_expr: arithmetic_expr
   88             | boolean_expr EQUAL arithmetic_expr
   89             | boolean_expr DIFFERENT arithmetic_expr
   90             | boolean_expr LESS_OR_EQUAL arithmetic_expr
   91             | boolean_expr LESS arithmetic_expr
   92             | boolean_expr MORE_OR_EQUAL arithmetic_expr
   93             | boolean_expr MORE arithmetic_expr

   94 arithmetic_expr: E

   95 E: E PLUS T
   96  | E MINUS T
   97  | T

   98 T: T ASTERISK F
   99  | T DIV F
  100  | F

  101 F: NUMBER

  102 $@22: ε

  103 F: IDENT $@22 IDENT_CONTINUES
  104  | OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS

  105 IDENT_CONTINUES: ε

  106 $@23: ε

  107 IDENT_CONTINUES: $@23 procedure_call


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 2
    OPEN_PARENTHESIS (259) 2 33 62 70 73 104
    CLOSE_PARENTHESIS (260) 2 33 62 70 73 104
    COMMA (261) 14 16 44 66 71 74
    SEMICOLON (262) 2 12 23 26 28 31 46 49
    COLON (263) 12 26 41
    DOT (264) 2
    T_BEGIN (265) 48
    T_END (266) 48
    VAR (267) 6 42
    IDENT (268) 2 13 14 15 16 17 23 26 44 45 52 68 71 72 103
    ASSIGNMENT (269) 86
    LABEL (270)
    TYPE (271)
    ARRAY (272)
    OF (273)
    PROCEDURE (274) 23
    FUNCTION (275) 26
    GOTO (276)
    IF (277) 81
    THEN (278) 81
    ELSE (279) 83
    WHILE (280) 78
    DO (281) 78
    OR (282)
    AND (283)
    NOT (284)
    DIV (285) 99
    ASTERISK (286) 98
    PLUS (287) 95
    MINUS (288) 96
    EQUAL (289) 88
    DIFFERENT (290) 89
    LESS_OR_EQUAL (291) 90
    LESS (292) 91
    MORE_OR_EQUAL (293) 92
    MORE (294) 93
    NUMBER (295) 101
    READ (296) 70
    WRITE (297) 73
    FORWARD (298) 28
    LOWER_THAN_ELSE (299)


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    program (46)
        on left: 2
        on right: 0
    $@1 (47)
        on left: 1
        on right: 2
    block (48)
        on left: 4
        on right: 2 31
    $@2 (49)
        on left: 3
        on right: 4
    declaring_vars_block (50)
        on left: 6 7
        on right: 4
    $@3 (51)
        on left: 5
        on right: 6
    declare_vars (52)
        on left: 8 9
        on right: 6 8
    declare_var (53)
        on left: 12
        on right: 8 9
    $@4 (54)
        on left: 10
        on right: 12
    $@5 (55)
        on left: 11
        on right: 12
    type (56)
        on left: 13
        on right: 12 41
    id_simple_var_list (57)
        on left: 14 15
        on right: 12 14
    idents_list (58)
        on left: 16 17
        on right: 2 16
    declaring_procedures_block (59)
        on left: 18 19
        on right: 4
    procedures (60)
        on left: 20 21
        on right: 18 20
    procedure_def (61)
        on left: 23 26
        on right: 20 21
    $@6 (62)
        on left: 22
        on right: 23
    $@7 (63)
        on left: 24
        on right: 26
    $@8 (64)
        on left: 25
        on right: 26
    procedure_def_continues (65)
        on left: 28 31
        on right: 23 26
    $@9 (66)
        on left: 27
        on right: 28
    $@10 (67)
        on left: 29
        on right: 31
    $@11 (68)
        on left: 30
        on right: 31
    procedure_params (69)
        on left: 33 34
        on right: 23 26
    $@12 (70)
        on left: 32
        on right: 33
    procedure_params_continues (71)
        on left: 35 36
        on right: 33
    declare_params (72)
        on left: 37 38
        on right: 35 37
    declare_param (73)
        on left: 41
        on right: 37 38
    $@13 (74)
        on left: 39
        on right: 41
    $@14 (75)
        on left: 40
        on right: 41
    by_reference_or_not (76)
        on left: 42 43
        on right: 41
    id_param_list (77)
        on left: 44 45
        on right: 41 44
    optional_semicolon (78)
        on left: 46 47
        on right: 41 48
    compound_command (79)
        on left: 48
        on right: 4 57
    commands (80)
        on left: 49 50
        on right: 48 49
    command (81)
        on left: 52 53 54 55 56 57
        on right: 49 50 78 81 83
    $@15 (82)
        on left: 51
        on right: 52
    starts_with_ident (83)
        on left: 58 59
        on right: 52
    procedure_call (84)
        on left: 61
        on right: 58 107
    $@16 (85)
        on left: 60
        on right: 61
    procedure_call_continues (86)
        on left: 62 63
        on right: 61
    procedure_arguments (87)
        on left: 64 65
        on right: 62
    args_list (88)
        on left: 66 67
        on right: 64 66
    ARGUMENT (89)
        on left: 68 69
        on right: 66 67
    read (90)
        on left: 70
        on right: 55
    read_ident_list (91)
        on left: 71 72
        on right: 70 71
    write (92)
        on left: 73
        on right: 56
    write_boolean_expr_list (93)
        on left: 74 75
        on right: 73 74
    loop (94)
        on left: 78
        on right: 53
    $@17 (95)
        on left: 76
        on right: 78
    $@18 (96)
        on left: 77
        on right: 78
    conditional (97)
        on left: 79
        on right: 54
    if_then (98)
        on left: 81
        on right: 79
    $@19 (99)
        on left: 80
        on right: 81
    cond_else (100)
        on left: 83 84
        on right: 79
    $@20 (101)
        on left: 82
        on right: 83
    assignment_operation (102)
        on left: 86
        on right: 59
    $@21 (103)
        on left: 85
        on right: 86
    boolean_expr (104)
        on left: 87 88 89 90 91 92 93
        on right: 69 74 75 78 81 86 88 89 90 91 92 93 104
    arithmetic_expr (105)
        on left: 94
        on right: 87 88 89 90 91 92 93
    E (106)
        on left: 95 96 97
        on right: 94 95 96
    T (107)
        on left: 98 99 100
        on right: 95 96 97 98 99
    F (108)
        on left: 101 103 104
        on right: 98 99 100
    $@22 (109)
        on left: 102
        on right: 103
    IDENT_CONTINUES (110)
        on left: 105 107
        on right: 103
    $@23 (111)
        on left: 106
        on right: 107


State 0

    0 $accept: • program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 • PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end •

    $default  accept


State 4

    2 program: $@1 PROGRAM • IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 5


State 5

    2 program: $@1 PROGRAM IDENT • OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    OPEN_PARENTHESIS  shift, and go to state 6


State 6

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS • idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 7

    idents_list  go to state 8


State 7

   17 idents_list: IDENT •

    $default  reduce using rule 17 (idents_list)


State 8

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list • CLOSE_PARENTHESIS SEMICOLON block DOT
   16 idents_list: idents_list • COMMA IDENT

    CLOSE_PARENTHESIS  shift, and go to state 9
    COMMA              shift, and go to state 10


State 9

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS • SEMICOLON block DOT

    SEMICOLON  shift, and go to state 11


State 10

   16 idents_list: idents_list COMMA • IDENT

    IDENT  shift, and go to state 12


State 11

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON • block DOT

    VAR  shift, and go to state 13

    T_BEGIN    reduce using rule 7 (declaring_vars_block)
    PROCEDURE  reduce using rule 7 (declaring_vars_block)
    FUNCTION   reduce using rule 7 (declaring_vars_block)

    block                 go to state 14
    declaring_vars_block  go to state 15


State 12

   16 idents_list: idents_list COMMA IDENT •

    $default  reduce using rule 16 (idents_list)


State 13

    6 declaring_vars_block: VAR • $@3 declare_vars

    $default  reduce using rule 5 ($@3)

    $@3  go to state 16


State 14

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block • DOT

    DOT  shift, and go to state 17


State 15

    4 block: declaring_vars_block • $@2 declaring_procedures_block compound_command

    $default  reduce using rule 3 ($@2)

    $@2  go to state 18


State 16

    6 declaring_vars_block: VAR $@3 • declare_vars

    $default  reduce using rule 10 ($@4)

    declare_vars  go to state 19
    declare_var   go to state 20
    $@4           go to state 21


State 17

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT •

    $default  reduce using rule 2 (program)


State 18

    4 block: declaring_vars_block $@2 • declaring_procedures_block compound_command

    PROCEDURE  shift, and go to state 22
    FUNCTION   shift, and go to state 23

    T_BEGIN  reduce using rule 19 (declaring_procedures_block)

    declaring_procedures_block  go to state 24
    procedures                  go to state 25
    procedure_def               go to state 26


State 19

    6 declaring_vars_block: VAR $@3 declare_vars •
    8 declare_vars: declare_vars • declare_var

    T_BEGIN    reduce using rule 6 (declaring_vars_block)
    IDENT      reduce using rule 10 ($@4)
    PROCEDURE  reduce using rule 6 (declaring_vars_block)
    FUNCTION   reduce using rule 6 (declaring_vars_block)

    declare_var  go to state 27
    $@4          go to state 21


State 20

    9 declare_vars: declare_var •

    $default  reduce using rule 9 (declare_vars)


State 21

   12 declare_var: $@4 • id_simple_var_list COLON type $@5 SEMICOLON

    IDENT  shift, and go to state 28

    id_simple_var_list  go to state 29


State 22

   23 procedure_def: PROCEDURE • IDENT $@6 procedure_params SEMICOLON procedure_def_continues

    IDENT  shift, and go to state 30


State 23

   26 procedure_def: FUNCTION • IDENT $@7 procedure_params COLON IDENT $@8 SEMICOLON procedure_def_continues

    IDENT  shift, and go to state 31


State 24

    4 block: declaring_vars_block $@2 declaring_procedures_block • compound_command

    T_BEGIN  shift, and go to state 32

    compound_command  go to state 33


State 25

   18 declaring_procedures_block: procedures •
   20 procedures: procedures • procedure_def

    PROCEDURE  shift, and go to state 22
    FUNCTION   shift, and go to state 23

    T_BEGIN  reduce using rule 18 (declaring_procedures_block)

    procedure_def  go to state 34


State 26

   21 procedures: procedure_def •

    $default  reduce using rule 21 (procedures)


State 27

    8 declare_vars: declare_vars declare_var •

    $default  reduce using rule 8 (declare_vars)


State 28

   15 id_simple_var_list: IDENT •

    $default  reduce using rule 15 (id_simple_var_list)


State 29

   12 declare_var: $@4 id_simple_var_list • COLON type $@5 SEMICOLON
   14 id_simple_var_list: id_simple_var_list • COMMA IDENT

    COMMA  shift, and go to state 35
    COLON  shift, and go to state 36


State 30

   23 procedure_def: PROCEDURE IDENT • $@6 procedure_params SEMICOLON procedure_def_continues

    $default  reduce using rule 22 ($@6)

    $@6  go to state 37


State 31

   26 procedure_def: FUNCTION IDENT • $@7 procedure_params COLON IDENT $@8 SEMICOLON procedure_def_continues

    $default  reduce using rule 24 ($@7)

    $@7  go to state 38


State 32

   48 compound_command: T_BEGIN • commands optional_semicolon T_END

    T_BEGIN  shift, and go to state 32
    IDENT    shift, and go to state 39
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    READ     shift, and go to state 42
    WRITE    shift, and go to state 43

    compound_command  go to state 44
    commands          go to state 45
    command           go to state 46
    read              go to state 47
    write             go to state 48
    loop              go to state 49
    conditional       go to state 50
    if_then           go to state 51


State 33

    4 block: declaring_vars_block $@2 declaring_procedures_block compound_command •

    $default  reduce using rule 4 (block)


State 34

   20 procedures: procedures procedure_def •

    $default  reduce using rule 20 (procedures)


State 35

   14 id_simple_var_list: id_simple_var_list COMMA • IDENT

    IDENT  shift, and go to state 52


State 36

   12 declare_var: $@4 id_simple_var_list COLON • type $@5 SEMICOLON

    IDENT  shift, and go to state 53

    type  go to state 54


State 37

   23 procedure_def: PROCEDURE IDENT $@6 • procedure_params SEMICOLON procedure_def_continues

    OPEN_PARENTHESIS  shift, and go to state 55

    SEMICOLON  reduce using rule 34 (procedure_params)

    procedure_params  go to state 56


State 38

   26 procedure_def: FUNCTION IDENT $@7 • procedure_params COLON IDENT $@8 SEMICOLON procedure_def_continues

    OPEN_PARENTHESIS  shift, and go to state 55

    COLON  reduce using rule 34 (procedure_params)

    procedure_params  go to state 57


State 39

   52 command: IDENT • $@15 starts_with_ident

    $default  reduce using rule 51 ($@15)

    $@15  go to state 58


State 40

   81 if_then: IF • boolean_expr $@19 THEN command

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    boolean_expr     go to state 62
    arithmetic_expr  go to state 63
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 41

   78 loop: WHILE • $@17 boolean_expr $@18 DO command

    $default  reduce using rule 76 ($@17)

    $@17  go to state 67


State 42

   70 read: READ • OPEN_PARENTHESIS read_ident_list CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 68


State 43

   73 write: WRITE • OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 69


State 44

   57 command: compound_command •

    $default  reduce using rule 57 (command)


State 45

   48 compound_command: T_BEGIN commands • optional_semicolon T_END
   49 commands: commands • SEMICOLON command

    SEMICOLON  shift, and go to state 70

    T_END  reduce using rule 47 (optional_semicolon)

    optional_semicolon  go to state 71


State 46

   50 commands: command •

    $default  reduce using rule 50 (commands)


State 47

   55 command: read •

    $default  reduce using rule 55 (command)


State 48

   56 command: write •

    $default  reduce using rule 56 (command)


State 49

   53 command: loop •

    $default  reduce using rule 53 (command)


State 50

   54 command: conditional •

    $default  reduce using rule 54 (command)


State 51

   79 conditional: if_then • cond_else

    ELSE  shift, and go to state 72

    SEMICOLON  reduce using rule 84 (cond_else)
    T_END      reduce using rule 84 (cond_else)

    cond_else  go to state 73


State 52

   14 id_simple_var_list: id_simple_var_list COMMA IDENT •

    $default  reduce using rule 14 (id_simple_var_list)


State 53

   13 type: IDENT •

    $default  reduce using rule 13 (type)


State 54

   12 declare_var: $@4 id_simple_var_list COLON type • $@5 SEMICOLON

    $default  reduce using rule 11 ($@5)

    $@5  go to state 74


State 55

   33 procedure_params: OPEN_PARENTHESIS • $@12 procedure_params_continues CLOSE_PARENTHESIS

    $default  reduce using rule 32 ($@12)

    $@12  go to state 75


State 56

   23 procedure_def: PROCEDURE IDENT $@6 procedure_params • SEMICOLON procedure_def_continues

    SEMICOLON  shift, and go to state 76


State 57

   26 procedure_def: FUNCTION IDENT $@7 procedure_params • COLON IDENT $@8 SEMICOLON procedure_def_continues

    COLON  shift, and go to state 77


State 58

   52 command: IDENT $@15 • starts_with_ident

    OPEN_PARENTHESIS  reduce using rule 60 ($@16)
    SEMICOLON         reduce using rule 60 ($@16)
    T_END             reduce using rule 60 ($@16)
    ASSIGNMENT        reduce using rule 85 ($@21)
    ELSE              reduce using rule 60 ($@16)

    starts_with_ident     go to state 78
    procedure_call        go to state 79
    $@16                  go to state 80
    assignment_operation  go to state 81
    $@21                  go to state 82


State 59

  104 F: OPEN_PARENTHESIS • boolean_expr CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    boolean_expr     go to state 83
    arithmetic_expr  go to state 63
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 60

  103 F: IDENT • $@22 IDENT_CONTINUES

    $default  reduce using rule 102 ($@22)

    $@22  go to state 84


State 61

  101 F: NUMBER •

    $default  reduce using rule 101 (F)


State 62

   81 if_then: IF boolean_expr • $@19 THEN command
   88 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   89             | boolean_expr • DIFFERENT arithmetic_expr
   90             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   91             | boolean_expr • LESS arithmetic_expr
   92             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   93             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 85
    DIFFERENT      shift, and go to state 86
    LESS_OR_EQUAL  shift, and go to state 87
    LESS           shift, and go to state 88
    MORE_OR_EQUAL  shift, and go to state 89
    MORE           shift, and go to state 90

    THEN  reduce using rule 80 ($@19)

    $@19  go to state 91


State 63

   87 boolean_expr: arithmetic_expr •

    $default  reduce using rule 87 (boolean_expr)


State 64

   94 arithmetic_expr: E •
   95 E: E • PLUS T
   96  | E • MINUS T

    PLUS   shift, and go to state 92
    MINUS  shift, and go to state 93

    CLOSE_PARENTHESIS  reduce using rule 94 (arithmetic_expr)
    COMMA              reduce using rule 94 (arithmetic_expr)
    SEMICOLON          reduce using rule 94 (arithmetic_expr)
    T_END              reduce using rule 94 (arithmetic_expr)
    THEN               reduce using rule 94 (arithmetic_expr)
    ELSE               reduce using rule 94 (arithmetic_expr)
    DO                 reduce using rule 94 (arithmetic_expr)
    EQUAL              reduce using rule 94 (arithmetic_expr)
    DIFFERENT          reduce using rule 94 (arithmetic_expr)
    LESS_OR_EQUAL      reduce using rule 94 (arithmetic_expr)
    LESS               reduce using rule 94 (arithmetic_expr)
    MORE_OR_EQUAL      reduce using rule 94 (arithmetic_expr)
    MORE               reduce using rule 94 (arithmetic_expr)


State 65

   97 E: T •
   98 T: T • ASTERISK F
   99  | T • DIV F

    DIV       shift, and go to state 94
    ASTERISK  shift, and go to state 95

    CLOSE_PARENTHESIS  reduce using rule 97 (E)
    COMMA              reduce using rule 97 (E)
    SEMICOLON          reduce using rule 97 (E)
    T_END              reduce using rule 97 (E)
    THEN               reduce using rule 97 (E)
    ELSE               reduce using rule 97 (E)
    DO                 reduce using rule 97 (E)
    PLUS               reduce using rule 97 (E)
    MINUS              reduce using rule 97 (E)
    EQUAL              reduce using rule 97 (E)
    DIFFERENT          reduce using rule 97 (E)
    LESS_OR_EQUAL      reduce using rule 97 (E)
    LESS               reduce using rule 97 (E)
    MORE_OR_EQUAL      reduce using rule 97 (E)
    MORE               reduce using rule 97 (E)


State 66

  100 T: F •

    $default  reduce using rule 100 (T)


State 67

   78 loop: WHILE $@17 • boolean_expr $@18 DO command

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    boolean_expr     go to state 96
    arithmetic_expr  go to state 63
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 68

   70 read: READ OPEN_PARENTHESIS • read_ident_list CLOSE_PARENTHESIS

    IDENT  shift, and go to state 97

    read_ident_list  go to state 98


State 69

   73 write: WRITE OPEN_PARENTHESIS • write_boolean_expr_list CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    write_boolean_expr_list  go to state 99
    boolean_expr             go to state 100
    arithmetic_expr          go to state 63
    E                        go to state 64
    T                        go to state 65
    F                        go to state 66


State 70

   46 optional_semicolon: SEMICOLON •
   49 commands: commands SEMICOLON • command

    T_BEGIN  shift, and go to state 32
    IDENT    shift, and go to state 39
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    READ     shift, and go to state 42
    WRITE    shift, and go to state 43

    T_END  reduce using rule 46 (optional_semicolon)

    compound_command  go to state 44
    command           go to state 101
    read              go to state 47
    write             go to state 48
    loop              go to state 49
    conditional       go to state 50
    if_then           go to state 51


State 71

   48 compound_command: T_BEGIN commands optional_semicolon • T_END

    T_END  shift, and go to state 102


State 72

   83 cond_else: ELSE • $@20 command

    $default  reduce using rule 82 ($@20)

    $@20  go to state 103


State 73

   79 conditional: if_then cond_else •

    $default  reduce using rule 79 (conditional)


State 74

   12 declare_var: $@4 id_simple_var_list COLON type $@5 • SEMICOLON

    SEMICOLON  shift, and go to state 104


State 75

   33 procedure_params: OPEN_PARENTHESIS $@12 • procedure_params_continues CLOSE_PARENTHESIS

    VAR  shift, and go to state 105

    CLOSE_PARENTHESIS  reduce using rule 36 (procedure_params_continues)
    IDENT              reduce using rule 43 (by_reference_or_not)

    procedure_params_continues  go to state 106
    declare_params              go to state 107
    declare_param               go to state 108
    by_reference_or_not         go to state 109


State 76

   23 procedure_def: PROCEDURE IDENT $@6 procedure_params SEMICOLON • procedure_def_continues

    FORWARD  shift, and go to state 110

    T_BEGIN    reduce using rule 29 ($@10)
    VAR        reduce using rule 29 ($@10)
    PROCEDURE  reduce using rule 29 ($@10)
    FUNCTION   reduce using rule 29 ($@10)

    procedure_def_continues  go to state 111
    $@10                     go to state 112


State 77

   26 procedure_def: FUNCTION IDENT $@7 procedure_params COLON • IDENT $@8 SEMICOLON procedure_def_continues

    IDENT  shift, and go to state 113


State 78

   52 command: IDENT $@15 starts_with_ident •

    $default  reduce using rule 52 (command)


State 79

   58 starts_with_ident: procedure_call •

    $default  reduce using rule 58 (starts_with_ident)


State 80

   61 procedure_call: $@16 • procedure_call_continues

    OPEN_PARENTHESIS  shift, and go to state 114

    CLOSE_PARENTHESIS  reduce using rule 63 (procedure_call_continues)
    COMMA              reduce using rule 63 (procedure_call_continues)
    SEMICOLON          reduce using rule 63 (procedure_call_continues)
    T_END              reduce using rule 63 (procedure_call_continues)
    THEN               reduce using rule 63 (procedure_call_continues)
    ELSE               reduce using rule 63 (procedure_call_continues)
    DO                 reduce using rule 63 (procedure_call_continues)
    DIV                reduce using rule 63 (procedure_call_continues)
    ASTERISK           reduce using rule 63 (procedure_call_continues)
    PLUS               reduce using rule 63 (procedure_call_continues)
    MINUS              reduce using rule 63 (procedure_call_continues)
    EQUAL              reduce using rule 63 (procedure_call_continues)
    DIFFERENT          reduce using rule 63 (procedure_call_continues)
    LESS_OR_EQUAL      reduce using rule 63 (procedure_call_continues)
    LESS               reduce using rule 63 (procedure_call_continues)
    MORE_OR_EQUAL      reduce using rule 63 (procedure_call_continues)
    MORE               reduce using rule 63 (procedure_call_continues)

    procedure_call_continues  go to state 115


State 81

   59 starts_with_ident: assignment_operation •

    $default  reduce using rule 59 (starts_with_ident)


State 82

   86 assignment_operation: $@21 • ASSIGNMENT boolean_expr

    ASSIGNMENT  shift, and go to state 116


State 83

   88 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   89             | boolean_expr • DIFFERENT arithmetic_expr
   90             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   91             | boolean_expr • LESS arithmetic_expr
   92             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   93             | boolean_expr • MORE arithmetic_expr
  104 F: OPEN_PARENTHESIS boolean_expr • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 117
    EQUAL              shift, and go to state 85
    DIFFERENT          shift, and go to state 86
    LESS_OR_EQUAL      shift, and go to state 87
    LESS               shift, and go to state 88
    MORE_OR_EQUAL      shift, and go to state 89
    MORE               shift, and go to state 90


State 84

  103 F: IDENT $@22 • IDENT_CONTINUES

    OPEN_PARENTHESIS   reduce using rule 106 ($@23)
    CLOSE_PARENTHESIS  reduce using rule 105 (IDENT_CONTINUES)
    CLOSE_PARENTHESIS  [reduce using rule 106 ($@23)]
    COMMA              reduce using rule 105 (IDENT_CONTINUES)
    COMMA              [reduce using rule 106 ($@23)]
    SEMICOLON          reduce using rule 105 (IDENT_CONTINUES)
    SEMICOLON          [reduce using rule 106 ($@23)]
    T_END              reduce using rule 105 (IDENT_CONTINUES)
    T_END              [reduce using rule 106 ($@23)]
    THEN               reduce using rule 105 (IDENT_CONTINUES)
    THEN               [reduce using rule 106 ($@23)]
    ELSE               reduce using rule 105 (IDENT_CONTINUES)
    ELSE               [reduce using rule 106 ($@23)]
    DO                 reduce using rule 105 (IDENT_CONTINUES)
    DO                 [reduce using rule 106 ($@23)]
    DIV                reduce using rule 105 (IDENT_CONTINUES)
    DIV                [reduce using rule 106 ($@23)]
    ASTERISK           reduce using rule 105 (IDENT_CONTINUES)
    ASTERISK           [reduce using rule 106 ($@23)]
    PLUS               reduce using rule 105 (IDENT_CONTINUES)
    PLUS               [reduce using rule 106 ($@23)]
    MINUS              reduce using rule 105 (IDENT_CONTINUES)
    MINUS              [reduce using rule 106 ($@23)]
    EQUAL              reduce using rule 105 (IDENT_CONTINUES)
    EQUAL              [reduce using rule 106 ($@23)]
    DIFFERENT          reduce using rule 105 (IDENT_CONTINUES)
    DIFFERENT          [reduce using rule 106 ($@23)]
    LESS_OR_EQUAL      reduce using rule 105 (IDENT_CONTINUES)
    LESS_OR_EQUAL      [reduce using rule 106 ($@23)]
    LESS               reduce using rule 105 (IDENT_CONTINUES)
    LESS               [reduce using rule 106 ($@23)]
    MORE_OR_EQUAL      reduce using rule 105 (IDENT_CONTINUES)
    MORE_OR_EQUAL      [reduce using rule 106 ($@23)]
    MORE               reduce using rule 105 (IDENT_CONTINUES)
    MORE               [reduce using rule 106 ($@23)]

    IDENT_CONTINUES  go to state 118
    $@23             go to state 119

    reduce/reduce conflict on tokens CLOSE_PARENTHESIS, COMMA, SEMICOLON, T_END, THEN, ELSE, DO, DIV, ASTERISK, PLUS, MINUS, EQUAL, DIFFERENT, LESS_OR_EQUAL, LESS, MORE_OR_EQUAL, MORE:
      105 IDENT_CONTINUES: ε •
      106 $@23: ε •
      Example: •
      First reduce derivation
        IDENT_CONTINUES
        ↳ 105: ε •
      Second reduce derivation
        $@23
        ↳ 106: ε •



State 85

   88 boolean_expr: boolean_expr EQUAL • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    arithmetic_expr  go to state 120
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 86

   89 boolean_expr: boolean_expr DIFFERENT • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    arithmetic_expr  go to state 121
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 87

   90 boolean_expr: boolean_expr LESS_OR_EQUAL • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    arithmetic_expr  go to state 122
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 88

   91 boolean_expr: boolean_expr LESS • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    arithmetic_expr  go to state 123
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 89

   92 boolean_expr: boolean_expr MORE_OR_EQUAL • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    arithmetic_expr  go to state 124
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 90

   93 boolean_expr: boolean_expr MORE • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    arithmetic_expr  go to state 125
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 91

   81 if_then: IF boolean_expr $@19 • THEN command

    THEN  shift, and go to state 126


State 92

   95 E: E PLUS • T

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    T  go to state 127
    F  go to state 66


State 93

   96 E: E MINUS • T

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    T  go to state 128
    F  go to state 66


State 94

   99 T: T DIV • F

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    F  go to state 129


State 95

   98 T: T ASTERISK • F

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    F  go to state 130


State 96

   78 loop: WHILE $@17 boolean_expr • $@18 DO command
   88 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   89             | boolean_expr • DIFFERENT arithmetic_expr
   90             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   91             | boolean_expr • LESS arithmetic_expr
   92             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   93             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 85
    DIFFERENT      shift, and go to state 86
    LESS_OR_EQUAL  shift, and go to state 87
    LESS           shift, and go to state 88
    MORE_OR_EQUAL  shift, and go to state 89
    MORE           shift, and go to state 90

    DO  reduce using rule 77 ($@18)

    $@18  go to state 131


State 97

   72 read_ident_list: IDENT •

    $default  reduce using rule 72 (read_ident_list)


State 98

   70 read: READ OPEN_PARENTHESIS read_ident_list • CLOSE_PARENTHESIS
   71 read_ident_list: read_ident_list • COMMA IDENT

    CLOSE_PARENTHESIS  shift, and go to state 132
    COMMA              shift, and go to state 133


State 99

   73 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list • CLOSE_PARENTHESIS
   74 write_boolean_expr_list: write_boolean_expr_list • COMMA boolean_expr

    CLOSE_PARENTHESIS  shift, and go to state 134
    COMMA              shift, and go to state 135


State 100

   75 write_boolean_expr_list: boolean_expr •
   88 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   89             | boolean_expr • DIFFERENT arithmetic_expr
   90             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   91             | boolean_expr • LESS arithmetic_expr
   92             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   93             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 85
    DIFFERENT      shift, and go to state 86
    LESS_OR_EQUAL  shift, and go to state 87
    LESS           shift, and go to state 88
    MORE_OR_EQUAL  shift, and go to state 89
    MORE           shift, and go to state 90

    CLOSE_PARENTHESIS  reduce using rule 75 (write_boolean_expr_list)
    COMMA              reduce using rule 75 (write_boolean_expr_list)


State 101

   49 commands: commands SEMICOLON command •

    $default  reduce using rule 49 (commands)


State 102

   48 compound_command: T_BEGIN commands optional_semicolon T_END •

    $default  reduce using rule 48 (compound_command)


State 103

   83 cond_else: ELSE $@20 • command

    T_BEGIN  shift, and go to state 32
    IDENT    shift, and go to state 39
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    READ     shift, and go to state 42
    WRITE    shift, and go to state 43

    compound_command  go to state 44
    command           go to state 136
    read              go to state 47
    write             go to state 48
    loop              go to state 49
    conditional       go to state 50
    if_then           go to state 51


State 104

   12 declare_var: $@4 id_simple_var_list COLON type $@5 SEMICOLON •

    $default  reduce using rule 12 (declare_var)


State 105

   42 by_reference_or_not: VAR •

    $default  reduce using rule 42 (by_reference_or_not)


State 106

   33 procedure_params: OPEN_PARENTHESIS $@12 procedure_params_continues • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 137


State 107

   35 procedure_params_continues: declare_params •
   37 declare_params: declare_params • declare_param

    VAR  shift, and go to state 105

    CLOSE_PARENTHESIS  reduce using rule 35 (procedure_params_continues)
    IDENT              reduce using rule 43 (by_reference_or_not)

    declare_param        go to state 138
    by_reference_or_not  go to state 109


State 108

   38 declare_params: declare_param •

    $default  reduce using rule 38 (declare_params)


State 109

   41 declare_param: by_reference_or_not • $@13 id_param_list COLON type $@14 optional_semicolon

    $default  reduce using rule 39 ($@13)

    $@13  go to state 139


State 110

   28 procedure_def_continues: FORWARD • $@9 SEMICOLON

    $default  reduce using rule 27 ($@9)

    $@9  go to state 140


State 111

   23 procedure_def: PROCEDURE IDENT $@6 procedure_params SEMICOLON procedure_def_continues •

    $default  reduce using rule 23 (procedure_def)


State 112

   31 procedure_def_continues: $@10 • block $@11 SEMICOLON

    VAR  shift, and go to state 13

    T_BEGIN    reduce using rule 7 (declaring_vars_block)
    PROCEDURE  reduce using rule 7 (declaring_vars_block)
    FUNCTION   reduce using rule 7 (declaring_vars_block)

    block                 go to state 141
    declaring_vars_block  go to state 15


State 113

   26 procedure_def: FUNCTION IDENT $@7 procedure_params COLON IDENT • $@8 SEMICOLON procedure_def_continues

    $default  reduce using rule 25 ($@8)

    $@8  go to state 142


State 114

   62 procedure_call_continues: OPEN_PARENTHESIS • procedure_arguments CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 143
    NUMBER            shift, and go to state 61

    CLOSE_PARENTHESIS  reduce using rule 65 (procedure_arguments)

    procedure_arguments  go to state 144
    args_list            go to state 145
    ARGUMENT             go to state 146
    boolean_expr         go to state 147
    arithmetic_expr      go to state 63
    E                    go to state 64
    T                    go to state 65
    F                    go to state 66


State 115

   61 procedure_call: $@16 procedure_call_continues •

    $default  reduce using rule 61 (procedure_call)


State 116

   86 assignment_operation: $@21 ASSIGNMENT • boolean_expr

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    boolean_expr     go to state 148
    arithmetic_expr  go to state 63
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 117

  104 F: OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS •

    $default  reduce using rule 104 (F)


State 118

  103 F: IDENT $@22 IDENT_CONTINUES •

    $default  reduce using rule 103 (F)


State 119

  107 IDENT_CONTINUES: $@23 • procedure_call

    $default  reduce using rule 60 ($@16)

    procedure_call  go to state 149
    $@16            go to state 80


State 120

   88 boolean_expr: boolean_expr EQUAL arithmetic_expr •

    $default  reduce using rule 88 (boolean_expr)


State 121

   89 boolean_expr: boolean_expr DIFFERENT arithmetic_expr •

    $default  reduce using rule 89 (boolean_expr)


State 122

   90 boolean_expr: boolean_expr LESS_OR_EQUAL arithmetic_expr •

    $default  reduce using rule 90 (boolean_expr)


State 123

   91 boolean_expr: boolean_expr LESS arithmetic_expr •

    $default  reduce using rule 91 (boolean_expr)


State 124

   92 boolean_expr: boolean_expr MORE_OR_EQUAL arithmetic_expr •

    $default  reduce using rule 92 (boolean_expr)


State 125

   93 boolean_expr: boolean_expr MORE arithmetic_expr •

    $default  reduce using rule 93 (boolean_expr)


State 126

   81 if_then: IF boolean_expr $@19 THEN • command

    T_BEGIN  shift, and go to state 32
    IDENT    shift, and go to state 39
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    READ     shift, and go to state 42
    WRITE    shift, and go to state 43

    compound_command  go to state 44
    command           go to state 150
    read              go to state 47
    write             go to state 48
    loop              go to state 49
    conditional       go to state 50
    if_then           go to state 51


State 127

   95 E: E PLUS T •
   98 T: T • ASTERISK F
   99  | T • DIV F

    DIV       shift, and go to state 94
    ASTERISK  shift, and go to state 95

    CLOSE_PARENTHESIS  reduce using rule 95 (E)
    COMMA              reduce using rule 95 (E)
    SEMICOLON          reduce using rule 95 (E)
    T_END              reduce using rule 95 (E)
    THEN               reduce using rule 95 (E)
    ELSE               reduce using rule 95 (E)
    DO                 reduce using rule 95 (E)
    PLUS               reduce using rule 95 (E)
    MINUS              reduce using rule 95 (E)
    EQUAL              reduce using rule 95 (E)
    DIFFERENT          reduce using rule 95 (E)
    LESS_OR_EQUAL      reduce using rule 95 (E)
    LESS               reduce using rule 95 (E)
    MORE_OR_EQUAL      reduce using rule 95 (E)
    MORE               reduce using rule 95 (E)


State 128

   96 E: E MINUS T •
   98 T: T • ASTERISK F
   99  | T • DIV F

    DIV       shift, and go to state 94
    ASTERISK  shift, and go to state 95

    CLOSE_PARENTHESIS  reduce using rule 96 (E)
    COMMA              reduce using rule 96 (E)
    SEMICOLON          reduce using rule 96 (E)
    T_END              reduce using rule 96 (E)
    THEN               reduce using rule 96 (E)
    ELSE               reduce using rule 96 (E)
    DO                 reduce using rule 96 (E)
    PLUS               reduce using rule 96 (E)
    MINUS              reduce using rule 96 (E)
    EQUAL              reduce using rule 96 (E)
    DIFFERENT          reduce using rule 96 (E)
    LESS_OR_EQUAL      reduce using rule 96 (E)
    LESS               reduce using rule 96 (E)
    MORE_OR_EQUAL      reduce using rule 96 (E)
    MORE               reduce using rule 96 (E)


State 129

   99 T: T DIV F •

    $default  reduce using rule 99 (T)


State 130

   98 T: T ASTERISK F •

    $default  reduce using rule 98 (T)


State 131

   78 loop: WHILE $@17 boolean_expr $@18 • DO command

    DO  shift, and go to state 151


State 132

   70 read: READ OPEN_PARENTHESIS read_ident_list CLOSE_PARENTHESIS •

    $default  reduce using rule 70 (read)


State 133

   71 read_ident_list: read_ident_list COMMA • IDENT

    IDENT  shift, and go to state 152


State 134

   73 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS •

    $default  reduce using rule 73 (write)


State 135

   74 write_boolean_expr_list: write_boolean_expr_list COMMA • boolean_expr

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    boolean_expr     go to state 153
    arithmetic_expr  go to state 63
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 136

   83 cond_else: ELSE $@20 command •

    $default  reduce using rule 83 (cond_else)


State 137

   33 procedure_params: OPEN_PARENTHESIS $@12 procedure_params_continues CLOSE_PARENTHESIS •

    $default  reduce using rule 33 (procedure_params)


State 138

   37 declare_params: declare_params declare_param •

    $default  reduce using rule 37 (declare_params)


State 139

   41 declare_param: by_reference_or_not $@13 • id_param_list COLON type $@14 optional_semicolon

    IDENT  shift, and go to state 154

    id_param_list  go to state 155


State 140

   28 procedure_def_continues: FORWARD $@9 • SEMICOLON

    SEMICOLON  shift, and go to state 156


State 141

   31 procedure_def_continues: $@10 block • $@11 SEMICOLON

    $default  reduce using rule 30 ($@11)

    $@11  go to state 157


State 142

   26 procedure_def: FUNCTION IDENT $@7 procedure_params COLON IDENT $@8 • SEMICOLON procedure_def_continues

    SEMICOLON  shift, and go to state 158


State 143

   68 ARGUMENT: IDENT •
  103 F: IDENT • $@22 IDENT_CONTINUES

    OPEN_PARENTHESIS   reduce using rule 102 ($@22)
    CLOSE_PARENTHESIS  reduce using rule 68 (ARGUMENT)
    CLOSE_PARENTHESIS  [reduce using rule 102 ($@22)]
    COMMA              reduce using rule 68 (ARGUMENT)
    COMMA              [reduce using rule 102 ($@22)]
    DIV                reduce using rule 102 ($@22)
    ASTERISK           reduce using rule 102 ($@22)
    PLUS               reduce using rule 102 ($@22)
    MINUS              reduce using rule 102 ($@22)
    EQUAL              reduce using rule 102 ($@22)
    DIFFERENT          reduce using rule 102 ($@22)
    LESS_OR_EQUAL      reduce using rule 102 ($@22)
    LESS               reduce using rule 102 ($@22)
    MORE_OR_EQUAL      reduce using rule 102 ($@22)
    MORE               reduce using rule 102 ($@22)

    $@22  go to state 84

    reduce/reduce conflict on tokens CLOSE_PARENTHESIS, COMMA:
       68 ARGUMENT: IDENT •
      102 $@22: ε •
      Example: IDENT •
      First reduce derivation
        ARGUMENT
        ↳ 68: IDENT •
      Second reduce derivation
        ARGUMENT
        ↳ 69: boolean_expr
              ↳ 87: arithmetic_expr
                    ↳ 94: E
                          ↳ 97: T
                                ↳ 100: F
                                       ↳ 103: IDENT $@22       IDENT_CONTINUES
                                                    ↳ 102: ε • ↳ 103: ε



State 144

   62 procedure_call_continues: OPEN_PARENTHESIS procedure_arguments • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 159


State 145

   64 procedure_arguments: args_list •
   66 args_list: args_list • COMMA ARGUMENT

    COMMA  shift, and go to state 160

    CLOSE_PARENTHESIS  reduce using rule 64 (procedure_arguments)


State 146

   67 args_list: ARGUMENT •

    $default  reduce using rule 67 (args_list)


State 147

   69 ARGUMENT: boolean_expr •
   88 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   89             | boolean_expr • DIFFERENT arithmetic_expr
   90             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   91             | boolean_expr • LESS arithmetic_expr
   92             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   93             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 85
    DIFFERENT      shift, and go to state 86
    LESS_OR_EQUAL  shift, and go to state 87
    LESS           shift, and go to state 88
    MORE_OR_EQUAL  shift, and go to state 89
    MORE           shift, and go to state 90

    CLOSE_PARENTHESIS  reduce using rule 69 (ARGUMENT)
    COMMA              reduce using rule 69 (ARGUMENT)


State 148

   86 assignment_operation: $@21 ASSIGNMENT boolean_expr •
   88 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   89             | boolean_expr • DIFFERENT arithmetic_expr
   90             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   91             | boolean_expr • LESS arithmetic_expr
   92             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   93             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 85
    DIFFERENT      shift, and go to state 86
    LESS_OR_EQUAL  shift, and go to state 87
    LESS           shift, and go to state 88
    MORE_OR_EQUAL  shift, and go to state 89
    MORE           shift, and go to state 90

    SEMICOLON  reduce using rule 86 (assignment_operation)
    T_END      reduce using rule 86 (assignment_operation)
    ELSE       reduce using rule 86 (assignment_operation)


State 149

  107 IDENT_CONTINUES: $@23 procedure_call •

    $default  reduce using rule 107 (IDENT_CONTINUES)


State 150

   81 if_then: IF boolean_expr $@19 THEN command •

    $default  reduce using rule 81 (if_then)


State 151

   78 loop: WHILE $@17 boolean_expr $@18 DO • command

    T_BEGIN  shift, and go to state 32
    IDENT    shift, and go to state 39
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    READ     shift, and go to state 42
    WRITE    shift, and go to state 43

    compound_command  go to state 44
    command           go to state 161
    read              go to state 47
    write             go to state 48
    loop              go to state 49
    conditional       go to state 50
    if_then           go to state 51


State 152

   71 read_ident_list: read_ident_list COMMA IDENT •

    $default  reduce using rule 71 (read_ident_list)


State 153

   74 write_boolean_expr_list: write_boolean_expr_list COMMA boolean_expr •
   88 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   89             | boolean_expr • DIFFERENT arithmetic_expr
   90             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   91             | boolean_expr • LESS arithmetic_expr
   92             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   93             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 85
    DIFFERENT      shift, and go to state 86
    LESS_OR_EQUAL  shift, and go to state 87
    LESS           shift, and go to state 88
    MORE_OR_EQUAL  shift, and go to state 89
    MORE           shift, and go to state 90

    CLOSE_PARENTHESIS  reduce using rule 74 (write_boolean_expr_list)
    COMMA              reduce using rule 74 (write_boolean_expr_list)


State 154

   45 id_param_list: IDENT •

    $default  reduce using rule 45 (id_param_list)


State 155

   41 declare_param: by_reference_or_not $@13 id_param_list • COLON type $@14 optional_semicolon
   44 id_param_list: id_param_list • COMMA IDENT

    COMMA  shift, and go to state 162
    COLON  shift, and go to state 163


State 156

   28 procedure_def_continues: FORWARD $@9 SEMICOLON •

    $default  reduce using rule 28 (procedure_def_continues)


State 157

   31 procedure_def_continues: $@10 block $@11 • SEMICOLON

    SEMICOLON  shift, and go to state 164


State 158

   26 procedure_def: FUNCTION IDENT $@7 procedure_params COLON IDENT $@8 SEMICOLON • procedure_def_continues

    FORWARD  shift, and go to state 110

    T_BEGIN    reduce using rule 29 ($@10)
    VAR        reduce using rule 29 ($@10)
    PROCEDURE  reduce using rule 29 ($@10)
    FUNCTION   reduce using rule 29 ($@10)

    procedure_def_continues  go to state 165
    $@10                     go to state 112


State 159

   62 procedure_call_continues: OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS •

    $default  reduce using rule 62 (procedure_call_continues)


State 160

   66 args_list: args_list COMMA • ARGUMENT

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 143
    NUMBER            shift, and go to state 61

    ARGUMENT         go to state 166
    boolean_expr     go to state 147
    arithmetic_expr  go to state 63
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 161

   78 loop: WHILE $@17 boolean_expr $@18 DO command •

    $default  reduce using rule 78 (loop)


State 162

   44 id_param_list: id_param_list COMMA • IDENT

    IDENT  shift, and go to state 167


State 163

   41 declare_param: by_reference_or_not $@13 id_param_list COLON • type $@14 optional_semicolon

    IDENT  shift, and go to state 53

    type  go to state 168


State 164

   31 procedure_def_continues: $@10 block $@11 SEMICOLON •

    $default  reduce using rule 31 (procedure_def_continues)


State 165

   26 procedure_def: FUNCTION IDENT $@7 procedure_params COLON IDENT $@8 SEMICOLON procedure_def_continues •

    $default  reduce using rule 26 (procedure_def)


State 166

   66 args_list: args_list COMMA ARGUMENT •

    $default  reduce using rule 66 (args_list)


State 167

   44 id_param_list: id_param_list COMMA IDENT •

    $default  reduce using rule 44 (id_param_list)


State 168

   41 declare_param: by_reference_or_not $@13 id_param_list COLON type • $@14 optional_semicolon

    $default  reduce using rule 40 ($@14)

    $@14  go to state 169


State 169

   41 declare_param: by_reference_or_not $@13 id_param_list COLON type $@14 • optional_semicolon

    SEMICOLON  shift, and go to state 170

    CLOSE_PARENTHESIS  reduce using rule 47 (optional_semicolon)
    VAR                reduce using rule 47 (optional_semicolon)
    IDENT              reduce using rule 47 (optional_semicolon)

    optional_semicolon  go to state 171


State 170

   46 optional_semicolon: SEMICOLON •

    $default  reduce using rule 46 (optional_semicolon)


State 171

   41 declare_param: by_reference_or_not $@13 id_param_list COLON type $@14 optional_semicolon •

    $default  reduce using rule 41 (declare_param)
