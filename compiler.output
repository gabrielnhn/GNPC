Terminals unused in grammar

    LABEL
    TYPE
    ARRAY
    OF
    GOTO
    OR
    AND
    NOT


State 98 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 $@1: ε

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    3 block: declaring_vars_block declaring_procedures_block compound_command

    4 $@2: ε

    5 declaring_vars_block: VAR $@2 declare_vars
    6                     | ε

    7 declare_vars: declare_vars declare_var
    8             | declare_var

    9 $@3: ε

   10 $@4: ε

   11 declare_var: $@3 id_simple_var_list COLON type $@4 SEMICOLON

   12 type: IDENT

   13 id_simple_var_list: id_simple_var_list COMMA IDENT
   14                   | IDENT

   15 idents_list: idents_list COMMA IDENT
   16            | IDENT

   17 declaring_procedures_block: procedures
   18                           | ε

   19 procedures: procedures procedure_def
   20           | procedure_def

   21 $@5: ε

   22 procedure_def: PROCEDURE IDENT $@5 procedure_params SEMICOLON block

   23 $@6: ε

   24 $@7: ε

   25 procedure_params: OPEN_PARENTHESIS $@6 declare_params $@7 CLOSE_PARENTHESIS
   26                 | ε

   27 declare_params: declare_params declare_param
   28               | declare_param

   29 $@8: ε

   30 $@9: ε

   31 declare_param: by_reference_or_not $@8 id_param_list COLON type $@9 optional_semicolon

   32 by_reference_or_not: VAR
   33                    | ε

   34 id_param_list: id_param_list COMMA IDENT
   35              | IDENT

   36 optional_semicolon: SEMICOLON
   37                   | ε

   38 compound_command: T_BEGIN commands T_END

   39 commands: commands command
   40         | command

   41 command: assignment_operation
   42        | loop
   43        | conditional
   44        | read
   45        | write
   46        | procedure_call

   47 $@10: ε

   48 $@11: ε

   49 procedure_call: IDENT $@10 OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS $@11 SEMICOLON

   50 procedure_arguments: args_list

   51 args_list: args_list COMMA ARGUMENT
   52          | ARGUMENT

   53 ARGUMENT: IDENT
   54         | boolean_expr

   55 $@12: ε

   56 read: READ OPEN_PARENTHESIS IDENT $@12 CLOSE_PARENTHESIS SEMICOLON

   57 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

   58 write_boolean_expr_list: write_boolean_expr_list COMMA boolean_expr
   59                        | boolean_expr

   60 $@13: ε

   61 $@14: ε

   62 loop: WHILE $@13 boolean_expr $@14 DO command

   63 conditional: if_then cond_else

   64 $@15: ε

   65 if_then: IF boolean_expr $@15 THEN command

   66 $@16: ε

   67 cond_else: ELSE $@16 command
   68          | ε

   69 $@17: ε

   70 assignment_operation: IDENT $@17 ASSIGNMENT boolean_expr SEMICOLON

   71 boolean_expr: arithmetic_expr
   72             | boolean_expr EQUAL arithmetic_expr
   73             | boolean_expr DIFFERENT arithmetic_expr
   74             | boolean_expr LESS_OR_EQUAL arithmetic_expr
   75             | boolean_expr LESS arithmetic_expr
   76             | boolean_expr MORE_OR_EQUAL arithmetic_expr
   77             | boolean_expr MORE arithmetic_expr

   78 arithmetic_expr: E

   79 E: E PLUS T
   80  | E MINUS T
   81  | T

   82 T: T ASTERISK F
   83  | T DIV F
   84  | F

   85 F: NUMBER
   86  | IDENT
   87  | OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 2
    OPEN_PARENTHESIS (259) 2 25 49 56 57 87
    CLOSE_PARENTHESIS (260) 2 25 49 56 57 87
    COMMA (261) 13 15 34 51 58
    SEMICOLON (262) 2 11 22 36 49 56 57 70
    COLON (263) 11 31
    DOT (264) 2
    T_BEGIN (265) 38
    T_END (266) 38
    VAR (267) 5 32
    IDENT (268) 2 12 13 14 15 16 22 34 35 49 53 56 70 86
    ASSIGNMENT (269) 70
    LABEL (270)
    TYPE (271)
    ARRAY (272)
    OF (273)
    PROCEDURE (274) 22
    GOTO (275)
    IF (276) 65
    THEN (277) 65
    ELSE (278) 67
    WHILE (279) 62
    DO (280) 62
    OR (281)
    AND (282)
    NOT (283)
    DIV (284) 83
    ASTERISK (285) 82
    PLUS (286) 79
    MINUS (287) 80
    EQUAL (288) 72
    DIFFERENT (289) 73
    LESS_OR_EQUAL (290) 74
    LESS (291) 75
    MORE_OR_EQUAL (292) 76
    MORE (293) 77
    NUMBER (294) 85
    READ (295) 56
    WRITE (296) 57
    LOWER_THAN_ELSE (297)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program (44)
        on left: 2
        on right: 0
    $@1 (45)
        on left: 1
        on right: 2
    block (46)
        on left: 3
        on right: 2 22
    declaring_vars_block (47)
        on left: 5 6
        on right: 3
    $@2 (48)
        on left: 4
        on right: 5
    declare_vars (49)
        on left: 7 8
        on right: 5 7
    declare_var (50)
        on left: 11
        on right: 7 8
    $@3 (51)
        on left: 9
        on right: 11
    $@4 (52)
        on left: 10
        on right: 11
    type (53)
        on left: 12
        on right: 11 31
    id_simple_var_list (54)
        on left: 13 14
        on right: 11 13
    idents_list (55)
        on left: 15 16
        on right: 2 15
    declaring_procedures_block (56)
        on left: 17 18
        on right: 3
    procedures (57)
        on left: 19 20
        on right: 17 19
    procedure_def (58)
        on left: 22
        on right: 19 20
    $@5 (59)
        on left: 21
        on right: 22
    procedure_params (60)
        on left: 25 26
        on right: 22
    $@6 (61)
        on left: 23
        on right: 25
    $@7 (62)
        on left: 24
        on right: 25
    declare_params (63)
        on left: 27 28
        on right: 25 27
    declare_param (64)
        on left: 31
        on right: 27 28
    $@8 (65)
        on left: 29
        on right: 31
    $@9 (66)
        on left: 30
        on right: 31
    by_reference_or_not (67)
        on left: 32 33
        on right: 31
    id_param_list (68)
        on left: 34 35
        on right: 31 34
    optional_semicolon (69)
        on left: 36 37
        on right: 31
    compound_command (70)
        on left: 38
        on right: 3
    commands (71)
        on left: 39 40
        on right: 38 39
    command (72)
        on left: 41 42 43 44 45 46
        on right: 39 40 62 65 67
    procedure_call (73)
        on left: 49
        on right: 46
    $@10 (74)
        on left: 47
        on right: 49
    $@11 (75)
        on left: 48
        on right: 49
    procedure_arguments (76)
        on left: 50
        on right: 49
    args_list (77)
        on left: 51 52
        on right: 50 51
    ARGUMENT (78)
        on left: 53 54
        on right: 51 52
    read (79)
        on left: 56
        on right: 44
    $@12 (80)
        on left: 55
        on right: 56
    write (81)
        on left: 57
        on right: 45
    write_boolean_expr_list (82)
        on left: 58 59
        on right: 57 58
    loop (83)
        on left: 62
        on right: 42
    $@13 (84)
        on left: 60
        on right: 62
    $@14 (85)
        on left: 61
        on right: 62
    conditional (86)
        on left: 63
        on right: 43
    if_then (87)
        on left: 65
        on right: 63
    $@15 (88)
        on left: 64
        on right: 65
    cond_else (89)
        on left: 67 68
        on right: 63
    $@16 (90)
        on left: 66
        on right: 67
    assignment_operation (91)
        on left: 70
        on right: 41
    $@17 (92)
        on left: 69
        on right: 70
    boolean_expr (93)
        on left: 71 72 73 74 75 76 77
        on right: 54 58 59 62 65 70 72 73 74 75 76 77 87
    arithmetic_expr (94)
        on left: 78
        on right: 71 72 73 74 75 76 77
    E (95)
        on left: 79 80 81
        on right: 78 79 80
    T (96)
        on left: 82 83 84
        on right: 79 80 81 82 83
    F (97)
        on left: 85 86 87
        on right: 82 83 84


State 0

    0 $accept: • program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 • PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end •

    $default  accept


State 4

    2 program: $@1 PROGRAM • IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 5


State 5

    2 program: $@1 PROGRAM IDENT • OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    OPEN_PARENTHESIS  shift, and go to state 6


State 6

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS • idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 7

    idents_list  go to state 8


State 7

   16 idents_list: IDENT •

    $default  reduce using rule 16 (idents_list)


State 8

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list • CLOSE_PARENTHESIS SEMICOLON block DOT
   15 idents_list: idents_list • COMMA IDENT

    CLOSE_PARENTHESIS  shift, and go to state 9
    COMMA              shift, and go to state 10


State 9

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS • SEMICOLON block DOT

    SEMICOLON  shift, and go to state 11


State 10

   15 idents_list: idents_list COMMA • IDENT

    IDENT  shift, and go to state 12


State 11

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON • block DOT

    VAR  shift, and go to state 13

    T_BEGIN    reduce using rule 6 (declaring_vars_block)
    PROCEDURE  reduce using rule 6 (declaring_vars_block)

    block                 go to state 14
    declaring_vars_block  go to state 15


State 12

   15 idents_list: idents_list COMMA IDENT •

    $default  reduce using rule 15 (idents_list)


State 13

    5 declaring_vars_block: VAR • $@2 declare_vars

    $default  reduce using rule 4 ($@2)

    $@2  go to state 16


State 14

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block • DOT

    DOT  shift, and go to state 17


State 15

    3 block: declaring_vars_block • declaring_procedures_block compound_command

    PROCEDURE  shift, and go to state 18

    T_BEGIN  reduce using rule 18 (declaring_procedures_block)

    declaring_procedures_block  go to state 19
    procedures                  go to state 20
    procedure_def               go to state 21


State 16

    5 declaring_vars_block: VAR $@2 • declare_vars

    $default  reduce using rule 9 ($@3)

    declare_vars  go to state 22
    declare_var   go to state 23
    $@3           go to state 24


State 17

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT •

    $default  reduce using rule 2 (program)


State 18

   22 procedure_def: PROCEDURE • IDENT $@5 procedure_params SEMICOLON block

    IDENT  shift, and go to state 25


State 19

    3 block: declaring_vars_block declaring_procedures_block • compound_command

    T_BEGIN  shift, and go to state 26

    compound_command  go to state 27


State 20

   17 declaring_procedures_block: procedures •
   19 procedures: procedures • procedure_def

    PROCEDURE  shift, and go to state 18

    T_BEGIN  reduce using rule 17 (declaring_procedures_block)

    procedure_def  go to state 28


State 21

   20 procedures: procedure_def •

    $default  reduce using rule 20 (procedures)


State 22

    5 declaring_vars_block: VAR $@2 declare_vars •
    7 declare_vars: declare_vars • declare_var

    T_BEGIN    reduce using rule 5 (declaring_vars_block)
    IDENT      reduce using rule 9 ($@3)
    PROCEDURE  reduce using rule 5 (declaring_vars_block)

    declare_var  go to state 29
    $@3          go to state 24


State 23

    8 declare_vars: declare_var •

    $default  reduce using rule 8 (declare_vars)


State 24

   11 declare_var: $@3 • id_simple_var_list COLON type $@4 SEMICOLON

    IDENT  shift, and go to state 30

    id_simple_var_list  go to state 31


State 25

   22 procedure_def: PROCEDURE IDENT • $@5 procedure_params SEMICOLON block

    $default  reduce using rule 21 ($@5)

    $@5  go to state 32


State 26

   38 compound_command: T_BEGIN • commands T_END

    IDENT  shift, and go to state 33
    IF     shift, and go to state 34
    WHILE  shift, and go to state 35
    READ   shift, and go to state 36
    WRITE  shift, and go to state 37

    commands              go to state 38
    command               go to state 39
    procedure_call        go to state 40
    read                  go to state 41
    write                 go to state 42
    loop                  go to state 43
    conditional           go to state 44
    if_then               go to state 45
    assignment_operation  go to state 46


State 27

    3 block: declaring_vars_block declaring_procedures_block compound_command •

    $default  reduce using rule 3 (block)


State 28

   19 procedures: procedures procedure_def •

    $default  reduce using rule 19 (procedures)


State 29

    7 declare_vars: declare_vars declare_var •

    $default  reduce using rule 7 (declare_vars)


State 30

   14 id_simple_var_list: IDENT •

    $default  reduce using rule 14 (id_simple_var_list)


State 31

   11 declare_var: $@3 id_simple_var_list • COLON type $@4 SEMICOLON
   13 id_simple_var_list: id_simple_var_list • COMMA IDENT

    COMMA  shift, and go to state 47
    COLON  shift, and go to state 48


State 32

   22 procedure_def: PROCEDURE IDENT $@5 • procedure_params SEMICOLON block

    OPEN_PARENTHESIS  shift, and go to state 49

    SEMICOLON  reduce using rule 26 (procedure_params)

    procedure_params  go to state 50


State 33

   49 procedure_call: IDENT • $@10 OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS $@11 SEMICOLON
   70 assignment_operation: IDENT • $@17 ASSIGNMENT boolean_expr SEMICOLON

    OPEN_PARENTHESIS  reduce using rule 47 ($@10)
    ASSIGNMENT        reduce using rule 69 ($@17)

    $@10  go to state 51
    $@17  go to state 52


State 34

   65 if_then: IF • boolean_expr $@15 THEN command

    OPEN_PARENTHESIS  shift, and go to state 53
    IDENT             shift, and go to state 54
    NUMBER            shift, and go to state 55

    boolean_expr     go to state 56
    arithmetic_expr  go to state 57
    E                go to state 58
    T                go to state 59
    F                go to state 60


State 35

   62 loop: WHILE • $@13 boolean_expr $@14 DO command

    $default  reduce using rule 60 ($@13)

    $@13  go to state 61


State 36

   56 read: READ • OPEN_PARENTHESIS IDENT $@12 CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 62


State 37

   57 write: WRITE • OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 63


State 38

   38 compound_command: T_BEGIN commands • T_END
   39 commands: commands • command

    T_END  shift, and go to state 64
    IDENT  shift, and go to state 33
    IF     shift, and go to state 34
    WHILE  shift, and go to state 35
    READ   shift, and go to state 36
    WRITE  shift, and go to state 37

    command               go to state 65
    procedure_call        go to state 40
    read                  go to state 41
    write                 go to state 42
    loop                  go to state 43
    conditional           go to state 44
    if_then               go to state 45
    assignment_operation  go to state 46


State 39

   40 commands: command •

    $default  reduce using rule 40 (commands)


State 40

   46 command: procedure_call •

    $default  reduce using rule 46 (command)


State 41

   44 command: read •

    $default  reduce using rule 44 (command)


State 42

   45 command: write •

    $default  reduce using rule 45 (command)


State 43

   42 command: loop •

    $default  reduce using rule 42 (command)


State 44

   43 command: conditional •

    $default  reduce using rule 43 (command)


State 45

   63 conditional: if_then • cond_else

    ELSE  shift, and go to state 66

    T_END  reduce using rule 68 (cond_else)
    IDENT  reduce using rule 68 (cond_else)
    IF     reduce using rule 68 (cond_else)
    WHILE  reduce using rule 68 (cond_else)
    READ   reduce using rule 68 (cond_else)
    WRITE  reduce using rule 68 (cond_else)

    cond_else  go to state 67


State 46

   41 command: assignment_operation •

    $default  reduce using rule 41 (command)


State 47

   13 id_simple_var_list: id_simple_var_list COMMA • IDENT

    IDENT  shift, and go to state 68


State 48

   11 declare_var: $@3 id_simple_var_list COLON • type $@4 SEMICOLON

    IDENT  shift, and go to state 69

    type  go to state 70


State 49

   25 procedure_params: OPEN_PARENTHESIS • $@6 declare_params $@7 CLOSE_PARENTHESIS

    $default  reduce using rule 23 ($@6)

    $@6  go to state 71


State 50

   22 procedure_def: PROCEDURE IDENT $@5 procedure_params • SEMICOLON block

    SEMICOLON  shift, and go to state 72


State 51

   49 procedure_call: IDENT $@10 • OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS $@11 SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 73


State 52

   70 assignment_operation: IDENT $@17 • ASSIGNMENT boolean_expr SEMICOLON

    ASSIGNMENT  shift, and go to state 74


State 53

   87 F: OPEN_PARENTHESIS • boolean_expr CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 53
    IDENT             shift, and go to state 54
    NUMBER            shift, and go to state 55

    boolean_expr     go to state 75
    arithmetic_expr  go to state 57
    E                go to state 58
    T                go to state 59
    F                go to state 60


State 54

   86 F: IDENT •

    $default  reduce using rule 86 (F)


State 55

   85 F: NUMBER •

    $default  reduce using rule 85 (F)


State 56

   65 if_then: IF boolean_expr • $@15 THEN command
   72 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   73             | boolean_expr • DIFFERENT arithmetic_expr
   74             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   75             | boolean_expr • LESS arithmetic_expr
   76             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   77             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 76
    DIFFERENT      shift, and go to state 77
    LESS_OR_EQUAL  shift, and go to state 78
    LESS           shift, and go to state 79
    MORE_OR_EQUAL  shift, and go to state 80
    MORE           shift, and go to state 81

    THEN  reduce using rule 64 ($@15)

    $@15  go to state 82


State 57

   71 boolean_expr: arithmetic_expr •

    $default  reduce using rule 71 (boolean_expr)


State 58

   78 arithmetic_expr: E •
   79 E: E • PLUS T
   80  | E • MINUS T

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    CLOSE_PARENTHESIS  reduce using rule 78 (arithmetic_expr)
    COMMA              reduce using rule 78 (arithmetic_expr)
    SEMICOLON          reduce using rule 78 (arithmetic_expr)
    THEN               reduce using rule 78 (arithmetic_expr)
    DO                 reduce using rule 78 (arithmetic_expr)
    EQUAL              reduce using rule 78 (arithmetic_expr)
    DIFFERENT          reduce using rule 78 (arithmetic_expr)
    LESS_OR_EQUAL      reduce using rule 78 (arithmetic_expr)
    LESS               reduce using rule 78 (arithmetic_expr)
    MORE_OR_EQUAL      reduce using rule 78 (arithmetic_expr)
    MORE               reduce using rule 78 (arithmetic_expr)


State 59

   81 E: T •
   82 T: T • ASTERISK F
   83  | T • DIV F

    DIV       shift, and go to state 85
    ASTERISK  shift, and go to state 86

    CLOSE_PARENTHESIS  reduce using rule 81 (E)
    COMMA              reduce using rule 81 (E)
    SEMICOLON          reduce using rule 81 (E)
    THEN               reduce using rule 81 (E)
    DO                 reduce using rule 81 (E)
    PLUS               reduce using rule 81 (E)
    MINUS              reduce using rule 81 (E)
    EQUAL              reduce using rule 81 (E)
    DIFFERENT          reduce using rule 81 (E)
    LESS_OR_EQUAL      reduce using rule 81 (E)
    LESS               reduce using rule 81 (E)
    MORE_OR_EQUAL      reduce using rule 81 (E)
    MORE               reduce using rule 81 (E)


State 60

   84 T: F •

    $default  reduce using rule 84 (T)


State 61

   62 loop: WHILE $@13 • boolean_expr $@14 DO command

    OPEN_PARENTHESIS  shift, and go to state 53
    IDENT             shift, and go to state 54
    NUMBER            shift, and go to state 55

    boolean_expr     go to state 87
    arithmetic_expr  go to state 57
    E                go to state 58
    T                go to state 59
    F                go to state 60


State 62

   56 read: READ OPEN_PARENTHESIS • IDENT $@12 CLOSE_PARENTHESIS SEMICOLON

    IDENT  shift, and go to state 88


State 63

   57 write: WRITE OPEN_PARENTHESIS • write_boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 53
    IDENT             shift, and go to state 54
    NUMBER            shift, and go to state 55

    write_boolean_expr_list  go to state 89
    boolean_expr             go to state 90
    arithmetic_expr          go to state 57
    E                        go to state 58
    T                        go to state 59
    F                        go to state 60


State 64

   38 compound_command: T_BEGIN commands T_END •

    $default  reduce using rule 38 (compound_command)


State 65

   39 commands: commands command •

    $default  reduce using rule 39 (commands)


State 66

   67 cond_else: ELSE • $@16 command

    $default  reduce using rule 66 ($@16)

    $@16  go to state 91


State 67

   63 conditional: if_then cond_else •

    $default  reduce using rule 63 (conditional)


State 68

   13 id_simple_var_list: id_simple_var_list COMMA IDENT •

    $default  reduce using rule 13 (id_simple_var_list)


State 69

   12 type: IDENT •

    $default  reduce using rule 12 (type)


State 70

   11 declare_var: $@3 id_simple_var_list COLON type • $@4 SEMICOLON

    $default  reduce using rule 10 ($@4)

    $@4  go to state 92


State 71

   25 procedure_params: OPEN_PARENTHESIS $@6 • declare_params $@7 CLOSE_PARENTHESIS

    VAR  shift, and go to state 93

    IDENT  reduce using rule 33 (by_reference_or_not)

    declare_params       go to state 94
    declare_param        go to state 95
    by_reference_or_not  go to state 96


State 72

   22 procedure_def: PROCEDURE IDENT $@5 procedure_params SEMICOLON • block

    VAR  shift, and go to state 13

    T_BEGIN    reduce using rule 6 (declaring_vars_block)
    PROCEDURE  reduce using rule 6 (declaring_vars_block)

    block                 go to state 97
    declaring_vars_block  go to state 15


State 73

   49 procedure_call: IDENT $@10 OPEN_PARENTHESIS • procedure_arguments CLOSE_PARENTHESIS $@11 SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 53
    IDENT             shift, and go to state 98
    NUMBER            shift, and go to state 55

    procedure_arguments  go to state 99
    args_list            go to state 100
    ARGUMENT             go to state 101
    boolean_expr         go to state 102
    arithmetic_expr      go to state 57
    E                    go to state 58
    T                    go to state 59
    F                    go to state 60


State 74

   70 assignment_operation: IDENT $@17 ASSIGNMENT • boolean_expr SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 53
    IDENT             shift, and go to state 54
    NUMBER            shift, and go to state 55

    boolean_expr     go to state 103
    arithmetic_expr  go to state 57
    E                go to state 58
    T                go to state 59
    F                go to state 60


State 75

   72 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   73             | boolean_expr • DIFFERENT arithmetic_expr
   74             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   75             | boolean_expr • LESS arithmetic_expr
   76             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   77             | boolean_expr • MORE arithmetic_expr
   87 F: OPEN_PARENTHESIS boolean_expr • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 104
    EQUAL              shift, and go to state 76
    DIFFERENT          shift, and go to state 77
    LESS_OR_EQUAL      shift, and go to state 78
    LESS               shift, and go to state 79
    MORE_OR_EQUAL      shift, and go to state 80
    MORE               shift, and go to state 81


State 76

   72 boolean_expr: boolean_expr EQUAL • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 53
    IDENT             shift, and go to state 54
    NUMBER            shift, and go to state 55

    arithmetic_expr  go to state 105
    E                go to state 58
    T                go to state 59
    F                go to state 60


State 77

   73 boolean_expr: boolean_expr DIFFERENT • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 53
    IDENT             shift, and go to state 54
    NUMBER            shift, and go to state 55

    arithmetic_expr  go to state 106
    E                go to state 58
    T                go to state 59
    F                go to state 60


State 78

   74 boolean_expr: boolean_expr LESS_OR_EQUAL • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 53
    IDENT             shift, and go to state 54
    NUMBER            shift, and go to state 55

    arithmetic_expr  go to state 107
    E                go to state 58
    T                go to state 59
    F                go to state 60


State 79

   75 boolean_expr: boolean_expr LESS • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 53
    IDENT             shift, and go to state 54
    NUMBER            shift, and go to state 55

    arithmetic_expr  go to state 108
    E                go to state 58
    T                go to state 59
    F                go to state 60


State 80

   76 boolean_expr: boolean_expr MORE_OR_EQUAL • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 53
    IDENT             shift, and go to state 54
    NUMBER            shift, and go to state 55

    arithmetic_expr  go to state 109
    E                go to state 58
    T                go to state 59
    F                go to state 60


State 81

   77 boolean_expr: boolean_expr MORE • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 53
    IDENT             shift, and go to state 54
    NUMBER            shift, and go to state 55

    arithmetic_expr  go to state 110
    E                go to state 58
    T                go to state 59
    F                go to state 60


State 82

   65 if_then: IF boolean_expr $@15 • THEN command

    THEN  shift, and go to state 111


State 83

   79 E: E PLUS • T

    OPEN_PARENTHESIS  shift, and go to state 53
    IDENT             shift, and go to state 54
    NUMBER            shift, and go to state 55

    T  go to state 112
    F  go to state 60


State 84

   80 E: E MINUS • T

    OPEN_PARENTHESIS  shift, and go to state 53
    IDENT             shift, and go to state 54
    NUMBER            shift, and go to state 55

    T  go to state 113
    F  go to state 60


State 85

   83 T: T DIV • F

    OPEN_PARENTHESIS  shift, and go to state 53
    IDENT             shift, and go to state 54
    NUMBER            shift, and go to state 55

    F  go to state 114


State 86

   82 T: T ASTERISK • F

    OPEN_PARENTHESIS  shift, and go to state 53
    IDENT             shift, and go to state 54
    NUMBER            shift, and go to state 55

    F  go to state 115


State 87

   62 loop: WHILE $@13 boolean_expr • $@14 DO command
   72 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   73             | boolean_expr • DIFFERENT arithmetic_expr
   74             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   75             | boolean_expr • LESS arithmetic_expr
   76             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   77             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 76
    DIFFERENT      shift, and go to state 77
    LESS_OR_EQUAL  shift, and go to state 78
    LESS           shift, and go to state 79
    MORE_OR_EQUAL  shift, and go to state 80
    MORE           shift, and go to state 81

    DO  reduce using rule 61 ($@14)

    $@14  go to state 116


State 88

   56 read: READ OPEN_PARENTHESIS IDENT • $@12 CLOSE_PARENTHESIS SEMICOLON

    $default  reduce using rule 55 ($@12)

    $@12  go to state 117


State 89

   57 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list • CLOSE_PARENTHESIS SEMICOLON
   58 write_boolean_expr_list: write_boolean_expr_list • COMMA boolean_expr

    CLOSE_PARENTHESIS  shift, and go to state 118
    COMMA              shift, and go to state 119


State 90

   59 write_boolean_expr_list: boolean_expr •
   72 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   73             | boolean_expr • DIFFERENT arithmetic_expr
   74             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   75             | boolean_expr • LESS arithmetic_expr
   76             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   77             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 76
    DIFFERENT      shift, and go to state 77
    LESS_OR_EQUAL  shift, and go to state 78
    LESS           shift, and go to state 79
    MORE_OR_EQUAL  shift, and go to state 80
    MORE           shift, and go to state 81

    CLOSE_PARENTHESIS  reduce using rule 59 (write_boolean_expr_list)
    COMMA              reduce using rule 59 (write_boolean_expr_list)


State 91

   67 cond_else: ELSE $@16 • command

    IDENT  shift, and go to state 33
    IF     shift, and go to state 34
    WHILE  shift, and go to state 35
    READ   shift, and go to state 36
    WRITE  shift, and go to state 37

    command               go to state 120
    procedure_call        go to state 40
    read                  go to state 41
    write                 go to state 42
    loop                  go to state 43
    conditional           go to state 44
    if_then               go to state 45
    assignment_operation  go to state 46


State 92

   11 declare_var: $@3 id_simple_var_list COLON type $@4 • SEMICOLON

    SEMICOLON  shift, and go to state 121


State 93

   32 by_reference_or_not: VAR •

    $default  reduce using rule 32 (by_reference_or_not)


State 94

   25 procedure_params: OPEN_PARENTHESIS $@6 declare_params • $@7 CLOSE_PARENTHESIS
   27 declare_params: declare_params • declare_param

    VAR  shift, and go to state 93

    CLOSE_PARENTHESIS  reduce using rule 24 ($@7)
    IDENT              reduce using rule 33 (by_reference_or_not)

    $@7                  go to state 122
    declare_param        go to state 123
    by_reference_or_not  go to state 96


State 95

   28 declare_params: declare_param •

    $default  reduce using rule 28 (declare_params)


State 96

   31 declare_param: by_reference_or_not • $@8 id_param_list COLON type $@9 optional_semicolon

    $default  reduce using rule 29 ($@8)

    $@8  go to state 124


State 97

   22 procedure_def: PROCEDURE IDENT $@5 procedure_params SEMICOLON block •

    $default  reduce using rule 22 (procedure_def)


State 98

   53 ARGUMENT: IDENT •
   86 F: IDENT •

    CLOSE_PARENTHESIS  reduce using rule 53 (ARGUMENT)
    CLOSE_PARENTHESIS  [reduce using rule 86 (F)]
    COMMA              reduce using rule 53 (ARGUMENT)
    COMMA              [reduce using rule 86 (F)]
    DIV                reduce using rule 86 (F)
    ASTERISK           reduce using rule 86 (F)
    PLUS               reduce using rule 86 (F)
    MINUS              reduce using rule 86 (F)
    EQUAL              reduce using rule 86 (F)
    DIFFERENT          reduce using rule 86 (F)
    LESS_OR_EQUAL      reduce using rule 86 (F)
    LESS               reduce using rule 86 (F)
    MORE_OR_EQUAL      reduce using rule 86 (F)
    MORE               reduce using rule 86 (F)

    reduce/reduce conflict on tokens CLOSE_PARENTHESIS, COMMA:
       53 ARGUMENT: IDENT •
       86 F: IDENT •
      Example: IDENT •
      First reduce derivation
        ARGUMENT
        ↳ 53: IDENT •
      Second reduce derivation
        ARGUMENT
        ↳ 54: boolean_expr
              ↳ 71: arithmetic_expr
                    ↳ 78: E
                          ↳ 81: T
                                ↳ 84: F
                                      ↳ 86: IDENT •



State 99

   49 procedure_call: IDENT $@10 OPEN_PARENTHESIS procedure_arguments • CLOSE_PARENTHESIS $@11 SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 125


State 100

   50 procedure_arguments: args_list •
   51 args_list: args_list • COMMA ARGUMENT

    COMMA  shift, and go to state 126

    CLOSE_PARENTHESIS  reduce using rule 50 (procedure_arguments)


State 101

   52 args_list: ARGUMENT •

    $default  reduce using rule 52 (args_list)


State 102

   54 ARGUMENT: boolean_expr •
   72 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   73             | boolean_expr • DIFFERENT arithmetic_expr
   74             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   75             | boolean_expr • LESS arithmetic_expr
   76             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   77             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 76
    DIFFERENT      shift, and go to state 77
    LESS_OR_EQUAL  shift, and go to state 78
    LESS           shift, and go to state 79
    MORE_OR_EQUAL  shift, and go to state 80
    MORE           shift, and go to state 81

    CLOSE_PARENTHESIS  reduce using rule 54 (ARGUMENT)
    COMMA              reduce using rule 54 (ARGUMENT)


State 103

   70 assignment_operation: IDENT $@17 ASSIGNMENT boolean_expr • SEMICOLON
   72 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   73             | boolean_expr • DIFFERENT arithmetic_expr
   74             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   75             | boolean_expr • LESS arithmetic_expr
   76             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   77             | boolean_expr • MORE arithmetic_expr

    SEMICOLON      shift, and go to state 127
    EQUAL          shift, and go to state 76
    DIFFERENT      shift, and go to state 77
    LESS_OR_EQUAL  shift, and go to state 78
    LESS           shift, and go to state 79
    MORE_OR_EQUAL  shift, and go to state 80
    MORE           shift, and go to state 81


State 104

   87 F: OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS •

    $default  reduce using rule 87 (F)


State 105

   72 boolean_expr: boolean_expr EQUAL arithmetic_expr •

    $default  reduce using rule 72 (boolean_expr)


State 106

   73 boolean_expr: boolean_expr DIFFERENT arithmetic_expr •

    $default  reduce using rule 73 (boolean_expr)


State 107

   74 boolean_expr: boolean_expr LESS_OR_EQUAL arithmetic_expr •

    $default  reduce using rule 74 (boolean_expr)


State 108

   75 boolean_expr: boolean_expr LESS arithmetic_expr •

    $default  reduce using rule 75 (boolean_expr)


State 109

   76 boolean_expr: boolean_expr MORE_OR_EQUAL arithmetic_expr •

    $default  reduce using rule 76 (boolean_expr)


State 110

   77 boolean_expr: boolean_expr MORE arithmetic_expr •

    $default  reduce using rule 77 (boolean_expr)


State 111

   65 if_then: IF boolean_expr $@15 THEN • command

    IDENT  shift, and go to state 33
    IF     shift, and go to state 34
    WHILE  shift, and go to state 35
    READ   shift, and go to state 36
    WRITE  shift, and go to state 37

    command               go to state 128
    procedure_call        go to state 40
    read                  go to state 41
    write                 go to state 42
    loop                  go to state 43
    conditional           go to state 44
    if_then               go to state 45
    assignment_operation  go to state 46


State 112

   79 E: E PLUS T •
   82 T: T • ASTERISK F
   83  | T • DIV F

    DIV       shift, and go to state 85
    ASTERISK  shift, and go to state 86

    CLOSE_PARENTHESIS  reduce using rule 79 (E)
    COMMA              reduce using rule 79 (E)
    SEMICOLON          reduce using rule 79 (E)
    THEN               reduce using rule 79 (E)
    DO                 reduce using rule 79 (E)
    PLUS               reduce using rule 79 (E)
    MINUS              reduce using rule 79 (E)
    EQUAL              reduce using rule 79 (E)
    DIFFERENT          reduce using rule 79 (E)
    LESS_OR_EQUAL      reduce using rule 79 (E)
    LESS               reduce using rule 79 (E)
    MORE_OR_EQUAL      reduce using rule 79 (E)
    MORE               reduce using rule 79 (E)


State 113

   80 E: E MINUS T •
   82 T: T • ASTERISK F
   83  | T • DIV F

    DIV       shift, and go to state 85
    ASTERISK  shift, and go to state 86

    CLOSE_PARENTHESIS  reduce using rule 80 (E)
    COMMA              reduce using rule 80 (E)
    SEMICOLON          reduce using rule 80 (E)
    THEN               reduce using rule 80 (E)
    DO                 reduce using rule 80 (E)
    PLUS               reduce using rule 80 (E)
    MINUS              reduce using rule 80 (E)
    EQUAL              reduce using rule 80 (E)
    DIFFERENT          reduce using rule 80 (E)
    LESS_OR_EQUAL      reduce using rule 80 (E)
    LESS               reduce using rule 80 (E)
    MORE_OR_EQUAL      reduce using rule 80 (E)
    MORE               reduce using rule 80 (E)


State 114

   83 T: T DIV F •

    $default  reduce using rule 83 (T)


State 115

   82 T: T ASTERISK F •

    $default  reduce using rule 82 (T)


State 116

   62 loop: WHILE $@13 boolean_expr $@14 • DO command

    DO  shift, and go to state 129


State 117

   56 read: READ OPEN_PARENTHESIS IDENT $@12 • CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 130


State 118

   57 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS • SEMICOLON

    SEMICOLON  shift, and go to state 131


State 119

   58 write_boolean_expr_list: write_boolean_expr_list COMMA • boolean_expr

    OPEN_PARENTHESIS  shift, and go to state 53
    IDENT             shift, and go to state 54
    NUMBER            shift, and go to state 55

    boolean_expr     go to state 132
    arithmetic_expr  go to state 57
    E                go to state 58
    T                go to state 59
    F                go to state 60


State 120

   67 cond_else: ELSE $@16 command •

    $default  reduce using rule 67 (cond_else)


State 121

   11 declare_var: $@3 id_simple_var_list COLON type $@4 SEMICOLON •

    $default  reduce using rule 11 (declare_var)


State 122

   25 procedure_params: OPEN_PARENTHESIS $@6 declare_params $@7 • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 133


State 123

   27 declare_params: declare_params declare_param •

    $default  reduce using rule 27 (declare_params)


State 124

   31 declare_param: by_reference_or_not $@8 • id_param_list COLON type $@9 optional_semicolon

    IDENT  shift, and go to state 134

    id_param_list  go to state 135


State 125

   49 procedure_call: IDENT $@10 OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS • $@11 SEMICOLON

    $default  reduce using rule 48 ($@11)

    $@11  go to state 136


State 126

   51 args_list: args_list COMMA • ARGUMENT

    OPEN_PARENTHESIS  shift, and go to state 53
    IDENT             shift, and go to state 98
    NUMBER            shift, and go to state 55

    ARGUMENT         go to state 137
    boolean_expr     go to state 102
    arithmetic_expr  go to state 57
    E                go to state 58
    T                go to state 59
    F                go to state 60


State 127

   70 assignment_operation: IDENT $@17 ASSIGNMENT boolean_expr SEMICOLON •

    $default  reduce using rule 70 (assignment_operation)


State 128

   65 if_then: IF boolean_expr $@15 THEN command •

    $default  reduce using rule 65 (if_then)


State 129

   62 loop: WHILE $@13 boolean_expr $@14 DO • command

    IDENT  shift, and go to state 33
    IF     shift, and go to state 34
    WHILE  shift, and go to state 35
    READ   shift, and go to state 36
    WRITE  shift, and go to state 37

    command               go to state 138
    procedure_call        go to state 40
    read                  go to state 41
    write                 go to state 42
    loop                  go to state 43
    conditional           go to state 44
    if_then               go to state 45
    assignment_operation  go to state 46


State 130

   56 read: READ OPEN_PARENTHESIS IDENT $@12 CLOSE_PARENTHESIS • SEMICOLON

    SEMICOLON  shift, and go to state 139


State 131

   57 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS SEMICOLON •

    $default  reduce using rule 57 (write)


State 132

   58 write_boolean_expr_list: write_boolean_expr_list COMMA boolean_expr •
   72 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   73             | boolean_expr • DIFFERENT arithmetic_expr
   74             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   75             | boolean_expr • LESS arithmetic_expr
   76             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   77             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 76
    DIFFERENT      shift, and go to state 77
    LESS_OR_EQUAL  shift, and go to state 78
    LESS           shift, and go to state 79
    MORE_OR_EQUAL  shift, and go to state 80
    MORE           shift, and go to state 81

    CLOSE_PARENTHESIS  reduce using rule 58 (write_boolean_expr_list)
    COMMA              reduce using rule 58 (write_boolean_expr_list)


State 133

   25 procedure_params: OPEN_PARENTHESIS $@6 declare_params $@7 CLOSE_PARENTHESIS •

    $default  reduce using rule 25 (procedure_params)


State 134

   35 id_param_list: IDENT •

    $default  reduce using rule 35 (id_param_list)


State 135

   31 declare_param: by_reference_or_not $@8 id_param_list • COLON type $@9 optional_semicolon
   34 id_param_list: id_param_list • COMMA IDENT

    COMMA  shift, and go to state 140
    COLON  shift, and go to state 141


State 136

   49 procedure_call: IDENT $@10 OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS $@11 • SEMICOLON

    SEMICOLON  shift, and go to state 142


State 137

   51 args_list: args_list COMMA ARGUMENT •

    $default  reduce using rule 51 (args_list)


State 138

   62 loop: WHILE $@13 boolean_expr $@14 DO command •

    $default  reduce using rule 62 (loop)


State 139

   56 read: READ OPEN_PARENTHESIS IDENT $@12 CLOSE_PARENTHESIS SEMICOLON •

    $default  reduce using rule 56 (read)


State 140

   34 id_param_list: id_param_list COMMA • IDENT

    IDENT  shift, and go to state 143


State 141

   31 declare_param: by_reference_or_not $@8 id_param_list COLON • type $@9 optional_semicolon

    IDENT  shift, and go to state 69

    type  go to state 144


State 142

   49 procedure_call: IDENT $@10 OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS $@11 SEMICOLON •

    $default  reduce using rule 49 (procedure_call)


State 143

   34 id_param_list: id_param_list COMMA IDENT •

    $default  reduce using rule 34 (id_param_list)


State 144

   31 declare_param: by_reference_or_not $@8 id_param_list COLON type • $@9 optional_semicolon

    $default  reduce using rule 30 ($@9)

    $@9  go to state 145


State 145

   31 declare_param: by_reference_or_not $@8 id_param_list COLON type $@9 • optional_semicolon

    SEMICOLON  shift, and go to state 146

    CLOSE_PARENTHESIS  reduce using rule 37 (optional_semicolon)
    VAR                reduce using rule 37 (optional_semicolon)
    IDENT              reduce using rule 37 (optional_semicolon)

    optional_semicolon  go to state 147


State 146

   36 optional_semicolon: SEMICOLON •

    $default  reduce using rule 36 (optional_semicolon)


State 147

   31 declare_param: by_reference_or_not $@8 id_param_list COLON type $@9 optional_semicolon •

    $default  reduce using rule 31 (declare_param)
