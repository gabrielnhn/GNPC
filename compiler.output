Terminals unused in grammar

    LABEL
    TYPE
    ARRAY
    OF
    PROCEDURE
    GOTO
    OR
    AND
    NOT


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    3 $@2: %empty

    4 block: declaring_vars_block $@2 compound_command

    5 declaring_vars_block: var

    6 $@3: %empty

    7 var: $@3 VAR declare_vars
    8    | %empty

    9 declare_vars: declare_vars declare_var
   10             | declare_var

   11 $@4: %empty

   12 $@5: %empty

   13 declare_var: $@4 id_var_list COLON type $@5 SEMICOLON

   14 type: IDENT

   15 id_var_list: id_var_list COMMA IDENT
   16            | IDENT

   17 idents_list: idents_list COMMA IDENT
   18            | IDENT

   19 compound_command: T_BEGIN commands T_END

   20 commands: commands command
   21         | command

   22 command: assignment
   23        | compound_command
   24        | loop
   25        | conditional
   26        | read
   27        | write

   28 $@6: %empty

   29 read: READ OPEN_PARENTHESIS IDENT $@6 CLOSE_PARENTHESIS SEMICOLON

   30 write: WRITE OPEN_PARENTHESIS boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

   31 boolean_expr_list: boolean_expr_list COMMA boolean_expr
   32                  | boolean_expr

   33 $@7: %empty

   34 $@8: %empty

   35 loop: WHILE $@7 boolean_expr $@8 DO command

   36 conditional: if_then cond_else

   37 $@9: %empty

   38 if_then: IF boolean_expr $@9 THEN command

   39 cond_else: ELSE command
   40          | %empty

   41 $@10: %empty

   42 assignment: IDENT $@10 ASSIGNMENT boolean_expr SEMICOLON

   43 boolean_expr: arithmetic_expr
   44             | boolean_expr EQUAL arithmetic_expr
   45             | boolean_expr DIFFERENT arithmetic_expr
   46             | boolean_expr LESS_OR_EQUAL arithmetic_expr
   47             | boolean_expr LESS arithmetic_expr
   48             | boolean_expr MORE_OR_EQUAL arithmetic_expr
   49             | boolean_expr MORE arithmetic_expr

   50 arithmetic_expr: E

   51 E: E PLUS T
   52  | E MINUS T
   53  | T

   54 T: T ASTERISK F
   55  | T DIV F
   56  | F

   57 F: NUMBER
   58  | IDENT
   59  | OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 2
    OPEN_PARENTHESIS (259) 2 29 30 59
    CLOSE_PARENTHESIS (260) 2 29 30 59
    COMMA (261) 15 17 31
    SEMICOLON (262) 2 13 29 30 42
    COLON (263) 13
    DOT (264) 2
    T_BEGIN (265) 19
    T_END (266) 19
    VAR (267) 7
    IDENT (268) 2 14 15 16 17 18 29 42 58
    ASSIGNMENT (269) 42
    LABEL (270)
    TYPE (271)
    ARRAY (272)
    OF (273)
    PROCEDURE (274)
    GOTO (275)
    IF (276) 38
    THEN (277) 38
    ELSE (278) 39
    WHILE (279) 35
    DO (280) 35
    OR (281)
    AND (282)
    NOT (283)
    DIV (284) 55
    ASTERISK (285) 54
    PLUS (286) 51
    MINUS (287) 52
    EQUAL (288) 44
    DIFFERENT (289) 45
    LESS_OR_EQUAL (290) 46
    LESS (291) 47
    MORE_OR_EQUAL (292) 48
    MORE (293) 49
    NUMBER (294) 57
    READ (295) 29
    WRITE (296) 30
    LOWER_THAN_ELSE (297)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program (44)
        on left: 2
        on right: 0
    $@1 (45)
        on left: 1
        on right: 2
    block (46)
        on left: 4
        on right: 2
    $@2 (47)
        on left: 3
        on right: 4
    declaring_vars_block (48)
        on left: 5
        on right: 4
    var (49)
        on left: 7 8
        on right: 5
    $@3 (50)
        on left: 6
        on right: 7
    declare_vars (51)
        on left: 9 10
        on right: 7 9
    declare_var (52)
        on left: 13
        on right: 9 10
    $@4 (53)
        on left: 11
        on right: 13
    $@5 (54)
        on left: 12
        on right: 13
    type (55)
        on left: 14
        on right: 13
    id_var_list (56)
        on left: 15 16
        on right: 13 15
    idents_list (57)
        on left: 17 18
        on right: 2 17
    compound_command (58)
        on left: 19
        on right: 4 23
    commands (59)
        on left: 20 21
        on right: 19 20
    command (60)
        on left: 22 23 24 25 26 27
        on right: 20 21 35 38 39
    read (61)
        on left: 29
        on right: 26
    $@6 (62)
        on left: 28
        on right: 29
    write (63)
        on left: 30
        on right: 27
    boolean_expr_list (64)
        on left: 31 32
        on right: 30 31
    loop (65)
        on left: 35
        on right: 24
    $@7 (66)
        on left: 33
        on right: 35
    $@8 (67)
        on left: 34
        on right: 35
    conditional (68)
        on left: 36
        on right: 25
    if_then (69)
        on left: 38
        on right: 36
    $@9 (70)
        on left: 37
        on right: 38
    cond_else (71)
        on left: 39 40
        on right: 36
    assignment (72)
        on left: 42
        on right: 22
    $@10 (73)
        on left: 41
        on right: 42
    boolean_expr (74)
        on left: 43 44 45 46 47 48 49
        on right: 31 32 35 38 42 44 45 46 47 48 49 59
    arithmetic_expr (75)
        on left: 50
        on right: 43 44 45 46 47 48 49
    E (76)
        on left: 51 52 53
        on right: 50 51 52
    T (77)
        on left: 54 55 56
        on right: 51 52 53 54 55
    F (78)
        on left: 57 58 59
        on right: 54 55 56


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 PROGRAM . IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 5


State 5

    2 program: $@1 PROGRAM IDENT . OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    OPEN_PARENTHESIS  shift, and go to state 6


State 6

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS . idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 7

    idents_list  go to state 8


State 7

   18 idents_list: IDENT .

    $default  reduce using rule 18 (idents_list)


State 8

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list . CLOSE_PARENTHESIS SEMICOLON block DOT
   17 idents_list: idents_list . COMMA IDENT

    CLOSE_PARENTHESIS  shift, and go to state 9
    COMMA              shift, and go to state 10


State 9

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS . SEMICOLON block DOT

    SEMICOLON  shift, and go to state 11


State 10

   17 idents_list: idents_list COMMA . IDENT

    IDENT  shift, and go to state 12


State 11

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON . block DOT

    T_BEGIN   reduce using rule 8 (var)
    $default  reduce using rule 6 ($@3)

    block                 go to state 13
    declaring_vars_block  go to state 14
    var                   go to state 15
    $@3                   go to state 16


State 12

   17 idents_list: idents_list COMMA IDENT .

    $default  reduce using rule 17 (idents_list)


State 13

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block . DOT

    DOT  shift, and go to state 17


State 14

    4 block: declaring_vars_block . $@2 compound_command

    $default  reduce using rule 3 ($@2)

    $@2  go to state 18


State 15

    5 declaring_vars_block: var .

    $default  reduce using rule 5 (declaring_vars_block)


State 16

    7 var: $@3 . VAR declare_vars

    VAR  shift, and go to state 19


State 17

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT .

    $default  reduce using rule 2 (program)


State 18

    4 block: declaring_vars_block $@2 . compound_command

    T_BEGIN  shift, and go to state 20

    compound_command  go to state 21


State 19

    7 var: $@3 VAR . declare_vars

    $default  reduce using rule 11 ($@4)

    declare_vars  go to state 22
    declare_var   go to state 23
    $@4           go to state 24


State 20

   19 compound_command: T_BEGIN . commands T_END

    T_BEGIN  shift, and go to state 20
    IDENT    shift, and go to state 25
    IF       shift, and go to state 26
    WHILE    shift, and go to state 27
    READ     shift, and go to state 28
    WRITE    shift, and go to state 29

    compound_command  go to state 30
    commands          go to state 31
    command           go to state 32
    read              go to state 33
    write             go to state 34
    loop              go to state 35
    conditional       go to state 36
    if_then           go to state 37
    assignment        go to state 38


State 21

    4 block: declaring_vars_block $@2 compound_command .

    $default  reduce using rule 4 (block)


State 22

    7 var: $@3 VAR declare_vars .
    9 declare_vars: declare_vars . declare_var

    IDENT     reduce using rule 11 ($@4)
    $default  reduce using rule 7 (var)

    declare_var  go to state 39
    $@4          go to state 24


State 23

   10 declare_vars: declare_var .

    $default  reduce using rule 10 (declare_vars)


State 24

   13 declare_var: $@4 . id_var_list COLON type $@5 SEMICOLON

    IDENT  shift, and go to state 40

    id_var_list  go to state 41


State 25

   42 assignment: IDENT . $@10 ASSIGNMENT boolean_expr SEMICOLON

    $default  reduce using rule 41 ($@10)

    $@10  go to state 42


State 26

   38 if_then: IF . boolean_expr $@9 THEN command

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    boolean_expr     go to state 46
    arithmetic_expr  go to state 47
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 27

   35 loop: WHILE . $@7 boolean_expr $@8 DO command

    $default  reduce using rule 33 ($@7)

    $@7  go to state 51


State 28

   29 read: READ . OPEN_PARENTHESIS IDENT $@6 CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 52


State 29

   30 write: WRITE . OPEN_PARENTHESIS boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 53


State 30

   23 command: compound_command .

    $default  reduce using rule 23 (command)


State 31

   19 compound_command: T_BEGIN commands . T_END
   20 commands: commands . command

    T_BEGIN  shift, and go to state 20
    T_END    shift, and go to state 54
    IDENT    shift, and go to state 25
    IF       shift, and go to state 26
    WHILE    shift, and go to state 27
    READ     shift, and go to state 28
    WRITE    shift, and go to state 29

    compound_command  go to state 30
    command           go to state 55
    read              go to state 33
    write             go to state 34
    loop              go to state 35
    conditional       go to state 36
    if_then           go to state 37
    assignment        go to state 38


State 32

   21 commands: command .

    $default  reduce using rule 21 (commands)


State 33

   26 command: read .

    $default  reduce using rule 26 (command)


State 34

   27 command: write .

    $default  reduce using rule 27 (command)


State 35

   24 command: loop .

    $default  reduce using rule 24 (command)


State 36

   25 command: conditional .

    $default  reduce using rule 25 (command)


State 37

   36 conditional: if_then . cond_else

    ELSE  shift, and go to state 56

    $default  reduce using rule 40 (cond_else)

    cond_else  go to state 57


State 38

   22 command: assignment .

    $default  reduce using rule 22 (command)


State 39

    9 declare_vars: declare_vars declare_var .

    $default  reduce using rule 9 (declare_vars)


State 40

   16 id_var_list: IDENT .

    $default  reduce using rule 16 (id_var_list)


State 41

   13 declare_var: $@4 id_var_list . COLON type $@5 SEMICOLON
   15 id_var_list: id_var_list . COMMA IDENT

    COMMA  shift, and go to state 58
    COLON  shift, and go to state 59


State 42

   42 assignment: IDENT $@10 . ASSIGNMENT boolean_expr SEMICOLON

    ASSIGNMENT  shift, and go to state 60


State 43

   59 F: OPEN_PARENTHESIS . boolean_expr CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    boolean_expr     go to state 61
    arithmetic_expr  go to state 47
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 44

   58 F: IDENT .

    $default  reduce using rule 58 (F)


State 45

   57 F: NUMBER .

    $default  reduce using rule 57 (F)


State 46

   38 if_then: IF boolean_expr . $@9 THEN command
   44 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   45             | boolean_expr . DIFFERENT arithmetic_expr
   46             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   47             | boolean_expr . LESS arithmetic_expr
   48             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   49             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 62
    DIFFERENT      shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    LESS           shift, and go to state 65
    MORE_OR_EQUAL  shift, and go to state 66
    MORE           shift, and go to state 67

    $default  reduce using rule 37 ($@9)

    $@9  go to state 68


State 47

   43 boolean_expr: arithmetic_expr .

    $default  reduce using rule 43 (boolean_expr)


State 48

   50 arithmetic_expr: E .
   51 E: E . PLUS T
   52  | E . MINUS T

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 50 (arithmetic_expr)


State 49

   53 E: T .
   54 T: T . ASTERISK F
   55  | T . DIV F

    DIV       shift, and go to state 71
    ASTERISK  shift, and go to state 72

    $default  reduce using rule 53 (E)


State 50

   56 T: F .

    $default  reduce using rule 56 (T)


State 51

   35 loop: WHILE $@7 . boolean_expr $@8 DO command

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    boolean_expr     go to state 73
    arithmetic_expr  go to state 47
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 52

   29 read: READ OPEN_PARENTHESIS . IDENT $@6 CLOSE_PARENTHESIS SEMICOLON

    IDENT  shift, and go to state 74


State 53

   30 write: WRITE OPEN_PARENTHESIS . boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    boolean_expr_list  go to state 75
    boolean_expr       go to state 76
    arithmetic_expr    go to state 47
    E                  go to state 48
    T                  go to state 49
    F                  go to state 50


State 54

   19 compound_command: T_BEGIN commands T_END .

    $default  reduce using rule 19 (compound_command)


State 55

   20 commands: commands command .

    $default  reduce using rule 20 (commands)


State 56

   39 cond_else: ELSE . command

    T_BEGIN  shift, and go to state 20
    IDENT    shift, and go to state 25
    IF       shift, and go to state 26
    WHILE    shift, and go to state 27
    READ     shift, and go to state 28
    WRITE    shift, and go to state 29

    compound_command  go to state 30
    command           go to state 77
    read              go to state 33
    write             go to state 34
    loop              go to state 35
    conditional       go to state 36
    if_then           go to state 37
    assignment        go to state 38


State 57

   36 conditional: if_then cond_else .

    $default  reduce using rule 36 (conditional)


State 58

   15 id_var_list: id_var_list COMMA . IDENT

    IDENT  shift, and go to state 78


State 59

   13 declare_var: $@4 id_var_list COLON . type $@5 SEMICOLON

    IDENT  shift, and go to state 79

    type  go to state 80


State 60

   42 assignment: IDENT $@10 ASSIGNMENT . boolean_expr SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    boolean_expr     go to state 81
    arithmetic_expr  go to state 47
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 61

   44 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   45             | boolean_expr . DIFFERENT arithmetic_expr
   46             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   47             | boolean_expr . LESS arithmetic_expr
   48             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   49             | boolean_expr . MORE arithmetic_expr
   59 F: OPEN_PARENTHESIS boolean_expr . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 82
    EQUAL              shift, and go to state 62
    DIFFERENT          shift, and go to state 63
    LESS_OR_EQUAL      shift, and go to state 64
    LESS               shift, and go to state 65
    MORE_OR_EQUAL      shift, and go to state 66
    MORE               shift, and go to state 67


State 62

   44 boolean_expr: boolean_expr EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    arithmetic_expr  go to state 83
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 63

   45 boolean_expr: boolean_expr DIFFERENT . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    arithmetic_expr  go to state 84
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 64

   46 boolean_expr: boolean_expr LESS_OR_EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    arithmetic_expr  go to state 85
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 65

   47 boolean_expr: boolean_expr LESS . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    arithmetic_expr  go to state 86
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 66

   48 boolean_expr: boolean_expr MORE_OR_EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    arithmetic_expr  go to state 87
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 67

   49 boolean_expr: boolean_expr MORE . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    arithmetic_expr  go to state 88
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 68

   38 if_then: IF boolean_expr $@9 . THEN command

    THEN  shift, and go to state 89


State 69

   51 E: E PLUS . T

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    T  go to state 90
    F  go to state 50


State 70

   52 E: E MINUS . T

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    T  go to state 91
    F  go to state 50


State 71

   55 T: T DIV . F

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    F  go to state 92


State 72

   54 T: T ASTERISK . F

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    F  go to state 93


State 73

   35 loop: WHILE $@7 boolean_expr . $@8 DO command
   44 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   45             | boolean_expr . DIFFERENT arithmetic_expr
   46             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   47             | boolean_expr . LESS arithmetic_expr
   48             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   49             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 62
    DIFFERENT      shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    LESS           shift, and go to state 65
    MORE_OR_EQUAL  shift, and go to state 66
    MORE           shift, and go to state 67

    $default  reduce using rule 34 ($@8)

    $@8  go to state 94


State 74

   29 read: READ OPEN_PARENTHESIS IDENT . $@6 CLOSE_PARENTHESIS SEMICOLON

    $default  reduce using rule 28 ($@6)

    $@6  go to state 95


State 75

   30 write: WRITE OPEN_PARENTHESIS boolean_expr_list . CLOSE_PARENTHESIS SEMICOLON
   31 boolean_expr_list: boolean_expr_list . COMMA boolean_expr

    CLOSE_PARENTHESIS  shift, and go to state 96
    COMMA              shift, and go to state 97


State 76

   32 boolean_expr_list: boolean_expr .
   44 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   45             | boolean_expr . DIFFERENT arithmetic_expr
   46             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   47             | boolean_expr . LESS arithmetic_expr
   48             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   49             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 62
    DIFFERENT      shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    LESS           shift, and go to state 65
    MORE_OR_EQUAL  shift, and go to state 66
    MORE           shift, and go to state 67

    $default  reduce using rule 32 (boolean_expr_list)


State 77

   39 cond_else: ELSE command .

    $default  reduce using rule 39 (cond_else)


State 78

   15 id_var_list: id_var_list COMMA IDENT .

    $default  reduce using rule 15 (id_var_list)


State 79

   14 type: IDENT .

    $default  reduce using rule 14 (type)


State 80

   13 declare_var: $@4 id_var_list COLON type . $@5 SEMICOLON

    $default  reduce using rule 12 ($@5)

    $@5  go to state 98


State 81

   42 assignment: IDENT $@10 ASSIGNMENT boolean_expr . SEMICOLON
   44 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   45             | boolean_expr . DIFFERENT arithmetic_expr
   46             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   47             | boolean_expr . LESS arithmetic_expr
   48             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   49             | boolean_expr . MORE arithmetic_expr

    SEMICOLON      shift, and go to state 99
    EQUAL          shift, and go to state 62
    DIFFERENT      shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    LESS           shift, and go to state 65
    MORE_OR_EQUAL  shift, and go to state 66
    MORE           shift, and go to state 67


State 82

   59 F: OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS .

    $default  reduce using rule 59 (F)


State 83

   44 boolean_expr: boolean_expr EQUAL arithmetic_expr .

    $default  reduce using rule 44 (boolean_expr)


State 84

   45 boolean_expr: boolean_expr DIFFERENT arithmetic_expr .

    $default  reduce using rule 45 (boolean_expr)


State 85

   46 boolean_expr: boolean_expr LESS_OR_EQUAL arithmetic_expr .

    $default  reduce using rule 46 (boolean_expr)


State 86

   47 boolean_expr: boolean_expr LESS arithmetic_expr .

    $default  reduce using rule 47 (boolean_expr)


State 87

   48 boolean_expr: boolean_expr MORE_OR_EQUAL arithmetic_expr .

    $default  reduce using rule 48 (boolean_expr)


State 88

   49 boolean_expr: boolean_expr MORE arithmetic_expr .

    $default  reduce using rule 49 (boolean_expr)


State 89

   38 if_then: IF boolean_expr $@9 THEN . command

    T_BEGIN  shift, and go to state 20
    IDENT    shift, and go to state 25
    IF       shift, and go to state 26
    WHILE    shift, and go to state 27
    READ     shift, and go to state 28
    WRITE    shift, and go to state 29

    compound_command  go to state 30
    command           go to state 100
    read              go to state 33
    write             go to state 34
    loop              go to state 35
    conditional       go to state 36
    if_then           go to state 37
    assignment        go to state 38


State 90

   51 E: E PLUS T .
   54 T: T . ASTERISK F
   55  | T . DIV F

    DIV       shift, and go to state 71
    ASTERISK  shift, and go to state 72

    $default  reduce using rule 51 (E)


State 91

   52 E: E MINUS T .
   54 T: T . ASTERISK F
   55  | T . DIV F

    DIV       shift, and go to state 71
    ASTERISK  shift, and go to state 72

    $default  reduce using rule 52 (E)


State 92

   55 T: T DIV F .

    $default  reduce using rule 55 (T)


State 93

   54 T: T ASTERISK F .

    $default  reduce using rule 54 (T)


State 94

   35 loop: WHILE $@7 boolean_expr $@8 . DO command

    DO  shift, and go to state 101


State 95

   29 read: READ OPEN_PARENTHESIS IDENT $@6 . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 102


State 96

   30 write: WRITE OPEN_PARENTHESIS boolean_expr_list CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 103


State 97

   31 boolean_expr_list: boolean_expr_list COMMA . boolean_expr

    OPEN_PARENTHESIS  shift, and go to state 43
    IDENT             shift, and go to state 44
    NUMBER            shift, and go to state 45

    boolean_expr     go to state 104
    arithmetic_expr  go to state 47
    E                go to state 48
    T                go to state 49
    F                go to state 50


State 98

   13 declare_var: $@4 id_var_list COLON type $@5 . SEMICOLON

    SEMICOLON  shift, and go to state 105


State 99

   42 assignment: IDENT $@10 ASSIGNMENT boolean_expr SEMICOLON .

    $default  reduce using rule 42 (assignment)


State 100

   38 if_then: IF boolean_expr $@9 THEN command .

    $default  reduce using rule 38 (if_then)


State 101

   35 loop: WHILE $@7 boolean_expr $@8 DO . command

    T_BEGIN  shift, and go to state 20
    IDENT    shift, and go to state 25
    IF       shift, and go to state 26
    WHILE    shift, and go to state 27
    READ     shift, and go to state 28
    WRITE    shift, and go to state 29

    compound_command  go to state 30
    command           go to state 106
    read              go to state 33
    write             go to state 34
    loop              go to state 35
    conditional       go to state 36
    if_then           go to state 37
    assignment        go to state 38


State 102

   29 read: READ OPEN_PARENTHESIS IDENT $@6 CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 107


State 103

   30 write: WRITE OPEN_PARENTHESIS boolean_expr_list CLOSE_PARENTHESIS SEMICOLON .

    $default  reduce using rule 30 (write)


State 104

   31 boolean_expr_list: boolean_expr_list COMMA boolean_expr .
   44 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   45             | boolean_expr . DIFFERENT arithmetic_expr
   46             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   47             | boolean_expr . LESS arithmetic_expr
   48             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   49             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 62
    DIFFERENT      shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    LESS           shift, and go to state 65
    MORE_OR_EQUAL  shift, and go to state 66
    MORE           shift, and go to state 67

    $default  reduce using rule 31 (boolean_expr_list)


State 105

   13 declare_var: $@4 id_var_list COLON type $@5 SEMICOLON .

    $default  reduce using rule 13 (declare_var)


State 106

   35 loop: WHILE $@7 boolean_expr $@8 DO command .

    $default  reduce using rule 35 (loop)


State 107

   29 read: READ OPEN_PARENTHESIS IDENT $@6 CLOSE_PARENTHESIS SEMICOLON .

    $default  reduce using rule 29 (read)
