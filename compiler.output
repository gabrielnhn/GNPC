Terminals unused in grammar

    LABEL
    TYPE
    ARRAY
    OF
    GOTO
    OR
    AND
    NOT
    FORWARD


State 84 conflicts: 17 reduce/reduce
State 139 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 $@1: ε

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    3 $@2: ε

    4 block: declaring_vars_block $@2 declaring_procedures_block compound_command

    5 $@3: ε

    6 declaring_vars_block: VAR $@3 declare_vars
    7                     | ε

    8 declare_vars: declare_vars declare_var
    9             | declare_var

   10 $@4: ε

   11 $@5: ε

   12 declare_var: $@4 id_simple_var_list COLON type $@5 SEMICOLON

   13 type: IDENT

   14 id_simple_var_list: id_simple_var_list COMMA IDENT
   15                   | IDENT

   16 idents_list: idents_list COMMA IDENT
   17            | IDENT

   18 declaring_procedures_block: procedures
   19                           | ε

   20 procedures: procedures procedure_def
   21           | procedure_def

   22 $@6: ε

   23 $@7: ε

   24 procedure_def: PROCEDURE IDENT $@6 procedure_params SEMICOLON block $@7 SEMICOLON

   25 $@8: ε

   26 $@9: ε

   27 $@10: ε

   28 procedure_def: FUNCTION IDENT $@8 procedure_params COLON IDENT $@9 SEMICOLON block $@10 SEMICOLON

   29 $@11: ε

   30 $@12: ε

   31 procedure_params: OPEN_PARENTHESIS $@11 declare_params $@12 CLOSE_PARENTHESIS
   32                 | ε

   33 declare_params: declare_params declare_param
   34               | declare_param

   35 $@13: ε

   36 $@14: ε

   37 declare_param: by_reference_or_not $@13 id_param_list COLON type $@14 optional_semicolon

   38 by_reference_or_not: VAR
   39                    | ε

   40 id_param_list: id_param_list COMMA IDENT
   41              | IDENT

   42 optional_semicolon: SEMICOLON
   43                   | ε

   44 compound_command: T_BEGIN commands optional_semicolon T_END

   45 commands: commands SEMICOLON command
   46         | command

   47 $@15: ε

   48 command: IDENT $@15 starts_with_ident
   49        | loop
   50        | conditional
   51        | read
   52        | write
   53        | compound_command

   54 starts_with_ident: procedure_call
   55                  | assignment_operation

   56 $@16: ε

   57 procedure_call: $@16 procedure_call_continues

   58 procedure_call_continues: OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS
   59                         | ε

   60 procedure_arguments: args_list

   61 args_list: args_list COMMA ARGUMENT
   62          | ARGUMENT

   63 ARGUMENT: IDENT
   64         | boolean_expr

   65 read: READ OPEN_PARENTHESIS read_ident_list CLOSE_PARENTHESIS

   66 read_ident_list: read_ident_list COMMA IDENT
   67                | IDENT

   68 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS

   69 write_boolean_expr_list: write_boolean_expr_list COMMA boolean_expr
   70                        | boolean_expr

   71 $@17: ε

   72 $@18: ε

   73 loop: WHILE $@17 boolean_expr $@18 DO command

   74 conditional: if_then cond_else

   75 $@19: ε

   76 if_then: IF boolean_expr $@19 THEN command

   77 $@20: ε

   78 cond_else: ELSE $@20 command
   79          | ε

   80 $@21: ε

   81 assignment_operation: $@21 ASSIGNMENT boolean_expr

   82 boolean_expr: arithmetic_expr
   83             | boolean_expr EQUAL arithmetic_expr
   84             | boolean_expr DIFFERENT arithmetic_expr
   85             | boolean_expr LESS_OR_EQUAL arithmetic_expr
   86             | boolean_expr LESS arithmetic_expr
   87             | boolean_expr MORE_OR_EQUAL arithmetic_expr
   88             | boolean_expr MORE arithmetic_expr

   89 arithmetic_expr: E

   90 E: E PLUS T
   91  | E MINUS T
   92  | T

   93 T: T ASTERISK F
   94  | T DIV F
   95  | F

   96 F: NUMBER

   97 $@22: ε

   98 F: IDENT $@22 IDENT_CONTINUES
   99  | OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS

  100 IDENT_CONTINUES: ε

  101 $@23: ε

  102 IDENT_CONTINUES: $@23 procedure_call


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 2
    OPEN_PARENTHESIS (259) 2 31 58 65 68 99
    CLOSE_PARENTHESIS (260) 2 31 58 65 68 99
    COMMA (261) 14 16 40 61 66 69
    SEMICOLON (262) 2 12 24 28 42 45
    COLON (263) 12 28 37
    DOT (264) 2
    T_BEGIN (265) 44
    T_END (266) 44
    VAR (267) 6 38
    IDENT (268) 2 13 14 15 16 17 24 28 40 41 48 63 66 67 98
    ASSIGNMENT (269) 81
    LABEL (270)
    TYPE (271)
    ARRAY (272)
    OF (273)
    PROCEDURE (274) 24
    FUNCTION (275) 28
    GOTO (276)
    IF (277) 76
    THEN (278) 76
    ELSE (279) 78
    WHILE (280) 73
    DO (281) 73
    OR (282)
    AND (283)
    NOT (284)
    DIV (285) 94
    ASTERISK (286) 93
    PLUS (287) 90
    MINUS (288) 91
    EQUAL (289) 83
    DIFFERENT (290) 84
    LESS_OR_EQUAL (291) 85
    LESS (292) 86
    MORE_OR_EQUAL (293) 87
    MORE (294) 88
    NUMBER (295) 96
    READ (296) 65
    WRITE (297) 68
    FORWARD (298)
    LOWER_THAN_ELSE (299)


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    program (46)
        on left: 2
        on right: 0
    $@1 (47)
        on left: 1
        on right: 2
    block (48)
        on left: 4
        on right: 2 24 28
    $@2 (49)
        on left: 3
        on right: 4
    declaring_vars_block (50)
        on left: 6 7
        on right: 4
    $@3 (51)
        on left: 5
        on right: 6
    declare_vars (52)
        on left: 8 9
        on right: 6 8
    declare_var (53)
        on left: 12
        on right: 8 9
    $@4 (54)
        on left: 10
        on right: 12
    $@5 (55)
        on left: 11
        on right: 12
    type (56)
        on left: 13
        on right: 12 37
    id_simple_var_list (57)
        on left: 14 15
        on right: 12 14
    idents_list (58)
        on left: 16 17
        on right: 2 16
    declaring_procedures_block (59)
        on left: 18 19
        on right: 4
    procedures (60)
        on left: 20 21
        on right: 18 20
    procedure_def (61)
        on left: 24 28
        on right: 20 21
    $@6 (62)
        on left: 22
        on right: 24
    $@7 (63)
        on left: 23
        on right: 24
    $@8 (64)
        on left: 25
        on right: 28
    $@9 (65)
        on left: 26
        on right: 28
    $@10 (66)
        on left: 27
        on right: 28
    procedure_params (67)
        on left: 31 32
        on right: 24 28
    $@11 (68)
        on left: 29
        on right: 31
    $@12 (69)
        on left: 30
        on right: 31
    declare_params (70)
        on left: 33 34
        on right: 31 33
    declare_param (71)
        on left: 37
        on right: 33 34
    $@13 (72)
        on left: 35
        on right: 37
    $@14 (73)
        on left: 36
        on right: 37
    by_reference_or_not (74)
        on left: 38 39
        on right: 37
    id_param_list (75)
        on left: 40 41
        on right: 37 40
    optional_semicolon (76)
        on left: 42 43
        on right: 37 44
    compound_command (77)
        on left: 44
        on right: 4 53
    commands (78)
        on left: 45 46
        on right: 44 45
    command (79)
        on left: 48 49 50 51 52 53
        on right: 45 46 73 76 78
    $@15 (80)
        on left: 47
        on right: 48
    starts_with_ident (81)
        on left: 54 55
        on right: 48
    procedure_call (82)
        on left: 57
        on right: 54 102
    $@16 (83)
        on left: 56
        on right: 57
    procedure_call_continues (84)
        on left: 58 59
        on right: 57
    procedure_arguments (85)
        on left: 60
        on right: 58
    args_list (86)
        on left: 61 62
        on right: 60 61
    ARGUMENT (87)
        on left: 63 64
        on right: 61 62
    read (88)
        on left: 65
        on right: 51
    read_ident_list (89)
        on left: 66 67
        on right: 65 66
    write (90)
        on left: 68
        on right: 52
    write_boolean_expr_list (91)
        on left: 69 70
        on right: 68 69
    loop (92)
        on left: 73
        on right: 49
    $@17 (93)
        on left: 71
        on right: 73
    $@18 (94)
        on left: 72
        on right: 73
    conditional (95)
        on left: 74
        on right: 50
    if_then (96)
        on left: 76
        on right: 74
    $@19 (97)
        on left: 75
        on right: 76
    cond_else (98)
        on left: 78 79
        on right: 74
    $@20 (99)
        on left: 77
        on right: 78
    assignment_operation (100)
        on left: 81
        on right: 55
    $@21 (101)
        on left: 80
        on right: 81
    boolean_expr (102)
        on left: 82 83 84 85 86 87 88
        on right: 64 69 70 73 76 81 83 84 85 86 87 88 99
    arithmetic_expr (103)
        on left: 89
        on right: 82 83 84 85 86 87 88
    E (104)
        on left: 90 91 92
        on right: 89 90 91
    T (105)
        on left: 93 94 95
        on right: 90 91 92 93 94
    F (106)
        on left: 96 98 99
        on right: 93 94 95
    $@22 (107)
        on left: 97
        on right: 98
    IDENT_CONTINUES (108)
        on left: 100 102
        on right: 98
    $@23 (109)
        on left: 101
        on right: 102


State 0

    0 $accept: • program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 • PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end •

    $default  accept


State 4

    2 program: $@1 PROGRAM • IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 5


State 5

    2 program: $@1 PROGRAM IDENT • OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    OPEN_PARENTHESIS  shift, and go to state 6


State 6

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS • idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 7

    idents_list  go to state 8


State 7

   17 idents_list: IDENT •

    $default  reduce using rule 17 (idents_list)


State 8

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list • CLOSE_PARENTHESIS SEMICOLON block DOT
   16 idents_list: idents_list • COMMA IDENT

    CLOSE_PARENTHESIS  shift, and go to state 9
    COMMA              shift, and go to state 10


State 9

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS • SEMICOLON block DOT

    SEMICOLON  shift, and go to state 11


State 10

   16 idents_list: idents_list COMMA • IDENT

    IDENT  shift, and go to state 12


State 11

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON • block DOT

    VAR  shift, and go to state 13

    T_BEGIN    reduce using rule 7 (declaring_vars_block)
    PROCEDURE  reduce using rule 7 (declaring_vars_block)
    FUNCTION   reduce using rule 7 (declaring_vars_block)

    block                 go to state 14
    declaring_vars_block  go to state 15


State 12

   16 idents_list: idents_list COMMA IDENT •

    $default  reduce using rule 16 (idents_list)


State 13

    6 declaring_vars_block: VAR • $@3 declare_vars

    $default  reduce using rule 5 ($@3)

    $@3  go to state 16


State 14

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block • DOT

    DOT  shift, and go to state 17


State 15

    4 block: declaring_vars_block • $@2 declaring_procedures_block compound_command

    $default  reduce using rule 3 ($@2)

    $@2  go to state 18


State 16

    6 declaring_vars_block: VAR $@3 • declare_vars

    $default  reduce using rule 10 ($@4)

    declare_vars  go to state 19
    declare_var   go to state 20
    $@4           go to state 21


State 17

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT •

    $default  reduce using rule 2 (program)


State 18

    4 block: declaring_vars_block $@2 • declaring_procedures_block compound_command

    PROCEDURE  shift, and go to state 22
    FUNCTION   shift, and go to state 23

    T_BEGIN  reduce using rule 19 (declaring_procedures_block)

    declaring_procedures_block  go to state 24
    procedures                  go to state 25
    procedure_def               go to state 26


State 19

    6 declaring_vars_block: VAR $@3 declare_vars •
    8 declare_vars: declare_vars • declare_var

    T_BEGIN    reduce using rule 6 (declaring_vars_block)
    IDENT      reduce using rule 10 ($@4)
    PROCEDURE  reduce using rule 6 (declaring_vars_block)
    FUNCTION   reduce using rule 6 (declaring_vars_block)

    declare_var  go to state 27
    $@4          go to state 21


State 20

    9 declare_vars: declare_var •

    $default  reduce using rule 9 (declare_vars)


State 21

   12 declare_var: $@4 • id_simple_var_list COLON type $@5 SEMICOLON

    IDENT  shift, and go to state 28

    id_simple_var_list  go to state 29


State 22

   24 procedure_def: PROCEDURE • IDENT $@6 procedure_params SEMICOLON block $@7 SEMICOLON

    IDENT  shift, and go to state 30


State 23

   28 procedure_def: FUNCTION • IDENT $@8 procedure_params COLON IDENT $@9 SEMICOLON block $@10 SEMICOLON

    IDENT  shift, and go to state 31


State 24

    4 block: declaring_vars_block $@2 declaring_procedures_block • compound_command

    T_BEGIN  shift, and go to state 32

    compound_command  go to state 33


State 25

   18 declaring_procedures_block: procedures •
   20 procedures: procedures • procedure_def

    PROCEDURE  shift, and go to state 22
    FUNCTION   shift, and go to state 23

    T_BEGIN  reduce using rule 18 (declaring_procedures_block)

    procedure_def  go to state 34


State 26

   21 procedures: procedure_def •

    $default  reduce using rule 21 (procedures)


State 27

    8 declare_vars: declare_vars declare_var •

    $default  reduce using rule 8 (declare_vars)


State 28

   15 id_simple_var_list: IDENT •

    $default  reduce using rule 15 (id_simple_var_list)


State 29

   12 declare_var: $@4 id_simple_var_list • COLON type $@5 SEMICOLON
   14 id_simple_var_list: id_simple_var_list • COMMA IDENT

    COMMA  shift, and go to state 35
    COLON  shift, and go to state 36


State 30

   24 procedure_def: PROCEDURE IDENT • $@6 procedure_params SEMICOLON block $@7 SEMICOLON

    $default  reduce using rule 22 ($@6)

    $@6  go to state 37


State 31

   28 procedure_def: FUNCTION IDENT • $@8 procedure_params COLON IDENT $@9 SEMICOLON block $@10 SEMICOLON

    $default  reduce using rule 25 ($@8)

    $@8  go to state 38


State 32

   44 compound_command: T_BEGIN • commands optional_semicolon T_END

    T_BEGIN  shift, and go to state 32
    IDENT    shift, and go to state 39
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    READ     shift, and go to state 42
    WRITE    shift, and go to state 43

    compound_command  go to state 44
    commands          go to state 45
    command           go to state 46
    read              go to state 47
    write             go to state 48
    loop              go to state 49
    conditional       go to state 50
    if_then           go to state 51


State 33

    4 block: declaring_vars_block $@2 declaring_procedures_block compound_command •

    $default  reduce using rule 4 (block)


State 34

   20 procedures: procedures procedure_def •

    $default  reduce using rule 20 (procedures)


State 35

   14 id_simple_var_list: id_simple_var_list COMMA • IDENT

    IDENT  shift, and go to state 52


State 36

   12 declare_var: $@4 id_simple_var_list COLON • type $@5 SEMICOLON

    IDENT  shift, and go to state 53

    type  go to state 54


State 37

   24 procedure_def: PROCEDURE IDENT $@6 • procedure_params SEMICOLON block $@7 SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 55

    SEMICOLON  reduce using rule 32 (procedure_params)

    procedure_params  go to state 56


State 38

   28 procedure_def: FUNCTION IDENT $@8 • procedure_params COLON IDENT $@9 SEMICOLON block $@10 SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 55

    COLON  reduce using rule 32 (procedure_params)

    procedure_params  go to state 57


State 39

   48 command: IDENT • $@15 starts_with_ident

    $default  reduce using rule 47 ($@15)

    $@15  go to state 58


State 40

   76 if_then: IF • boolean_expr $@19 THEN command

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    boolean_expr     go to state 62
    arithmetic_expr  go to state 63
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 41

   73 loop: WHILE • $@17 boolean_expr $@18 DO command

    $default  reduce using rule 71 ($@17)

    $@17  go to state 67


State 42

   65 read: READ • OPEN_PARENTHESIS read_ident_list CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 68


State 43

   68 write: WRITE • OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 69


State 44

   53 command: compound_command •

    $default  reduce using rule 53 (command)


State 45

   44 compound_command: T_BEGIN commands • optional_semicolon T_END
   45 commands: commands • SEMICOLON command

    SEMICOLON  shift, and go to state 70

    T_END  reduce using rule 43 (optional_semicolon)

    optional_semicolon  go to state 71


State 46

   46 commands: command •

    $default  reduce using rule 46 (commands)


State 47

   51 command: read •

    $default  reduce using rule 51 (command)


State 48

   52 command: write •

    $default  reduce using rule 52 (command)


State 49

   49 command: loop •

    $default  reduce using rule 49 (command)


State 50

   50 command: conditional •

    $default  reduce using rule 50 (command)


State 51

   74 conditional: if_then • cond_else

    ELSE  shift, and go to state 72

    SEMICOLON  reduce using rule 79 (cond_else)
    T_END      reduce using rule 79 (cond_else)

    cond_else  go to state 73


State 52

   14 id_simple_var_list: id_simple_var_list COMMA IDENT •

    $default  reduce using rule 14 (id_simple_var_list)


State 53

   13 type: IDENT •

    $default  reduce using rule 13 (type)


State 54

   12 declare_var: $@4 id_simple_var_list COLON type • $@5 SEMICOLON

    $default  reduce using rule 11 ($@5)

    $@5  go to state 74


State 55

   31 procedure_params: OPEN_PARENTHESIS • $@11 declare_params $@12 CLOSE_PARENTHESIS

    $default  reduce using rule 29 ($@11)

    $@11  go to state 75


State 56

   24 procedure_def: PROCEDURE IDENT $@6 procedure_params • SEMICOLON block $@7 SEMICOLON

    SEMICOLON  shift, and go to state 76


State 57

   28 procedure_def: FUNCTION IDENT $@8 procedure_params • COLON IDENT $@9 SEMICOLON block $@10 SEMICOLON

    COLON  shift, and go to state 77


State 58

   48 command: IDENT $@15 • starts_with_ident

    OPEN_PARENTHESIS  reduce using rule 56 ($@16)
    SEMICOLON         reduce using rule 56 ($@16)
    T_END             reduce using rule 56 ($@16)
    ASSIGNMENT        reduce using rule 80 ($@21)
    ELSE              reduce using rule 56 ($@16)

    starts_with_ident     go to state 78
    procedure_call        go to state 79
    $@16                  go to state 80
    assignment_operation  go to state 81
    $@21                  go to state 82


State 59

   99 F: OPEN_PARENTHESIS • boolean_expr CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    boolean_expr     go to state 83
    arithmetic_expr  go to state 63
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 60

   98 F: IDENT • $@22 IDENT_CONTINUES

    $default  reduce using rule 97 ($@22)

    $@22  go to state 84


State 61

   96 F: NUMBER •

    $default  reduce using rule 96 (F)


State 62

   76 if_then: IF boolean_expr • $@19 THEN command
   83 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   84             | boolean_expr • DIFFERENT arithmetic_expr
   85             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   86             | boolean_expr • LESS arithmetic_expr
   87             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   88             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 85
    DIFFERENT      shift, and go to state 86
    LESS_OR_EQUAL  shift, and go to state 87
    LESS           shift, and go to state 88
    MORE_OR_EQUAL  shift, and go to state 89
    MORE           shift, and go to state 90

    THEN  reduce using rule 75 ($@19)

    $@19  go to state 91


State 63

   82 boolean_expr: arithmetic_expr •

    $default  reduce using rule 82 (boolean_expr)


State 64

   89 arithmetic_expr: E •
   90 E: E • PLUS T
   91  | E • MINUS T

    PLUS   shift, and go to state 92
    MINUS  shift, and go to state 93

    CLOSE_PARENTHESIS  reduce using rule 89 (arithmetic_expr)
    COMMA              reduce using rule 89 (arithmetic_expr)
    SEMICOLON          reduce using rule 89 (arithmetic_expr)
    T_END              reduce using rule 89 (arithmetic_expr)
    THEN               reduce using rule 89 (arithmetic_expr)
    ELSE               reduce using rule 89 (arithmetic_expr)
    DO                 reduce using rule 89 (arithmetic_expr)
    EQUAL              reduce using rule 89 (arithmetic_expr)
    DIFFERENT          reduce using rule 89 (arithmetic_expr)
    LESS_OR_EQUAL      reduce using rule 89 (arithmetic_expr)
    LESS               reduce using rule 89 (arithmetic_expr)
    MORE_OR_EQUAL      reduce using rule 89 (arithmetic_expr)
    MORE               reduce using rule 89 (arithmetic_expr)


State 65

   92 E: T •
   93 T: T • ASTERISK F
   94  | T • DIV F

    DIV       shift, and go to state 94
    ASTERISK  shift, and go to state 95

    CLOSE_PARENTHESIS  reduce using rule 92 (E)
    COMMA              reduce using rule 92 (E)
    SEMICOLON          reduce using rule 92 (E)
    T_END              reduce using rule 92 (E)
    THEN               reduce using rule 92 (E)
    ELSE               reduce using rule 92 (E)
    DO                 reduce using rule 92 (E)
    PLUS               reduce using rule 92 (E)
    MINUS              reduce using rule 92 (E)
    EQUAL              reduce using rule 92 (E)
    DIFFERENT          reduce using rule 92 (E)
    LESS_OR_EQUAL      reduce using rule 92 (E)
    LESS               reduce using rule 92 (E)
    MORE_OR_EQUAL      reduce using rule 92 (E)
    MORE               reduce using rule 92 (E)


State 66

   95 T: F •

    $default  reduce using rule 95 (T)


State 67

   73 loop: WHILE $@17 • boolean_expr $@18 DO command

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    boolean_expr     go to state 96
    arithmetic_expr  go to state 63
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 68

   65 read: READ OPEN_PARENTHESIS • read_ident_list CLOSE_PARENTHESIS

    IDENT  shift, and go to state 97

    read_ident_list  go to state 98


State 69

   68 write: WRITE OPEN_PARENTHESIS • write_boolean_expr_list CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    write_boolean_expr_list  go to state 99
    boolean_expr             go to state 100
    arithmetic_expr          go to state 63
    E                        go to state 64
    T                        go to state 65
    F                        go to state 66


State 70

   42 optional_semicolon: SEMICOLON •
   45 commands: commands SEMICOLON • command

    T_BEGIN  shift, and go to state 32
    IDENT    shift, and go to state 39
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    READ     shift, and go to state 42
    WRITE    shift, and go to state 43

    T_END  reduce using rule 42 (optional_semicolon)

    compound_command  go to state 44
    command           go to state 101
    read              go to state 47
    write             go to state 48
    loop              go to state 49
    conditional       go to state 50
    if_then           go to state 51


State 71

   44 compound_command: T_BEGIN commands optional_semicolon • T_END

    T_END  shift, and go to state 102


State 72

   78 cond_else: ELSE • $@20 command

    $default  reduce using rule 77 ($@20)

    $@20  go to state 103


State 73

   74 conditional: if_then cond_else •

    $default  reduce using rule 74 (conditional)


State 74

   12 declare_var: $@4 id_simple_var_list COLON type $@5 • SEMICOLON

    SEMICOLON  shift, and go to state 104


State 75

   31 procedure_params: OPEN_PARENTHESIS $@11 • declare_params $@12 CLOSE_PARENTHESIS

    VAR  shift, and go to state 105

    IDENT  reduce using rule 39 (by_reference_or_not)

    declare_params       go to state 106
    declare_param        go to state 107
    by_reference_or_not  go to state 108


State 76

   24 procedure_def: PROCEDURE IDENT $@6 procedure_params SEMICOLON • block $@7 SEMICOLON

    VAR  shift, and go to state 13

    T_BEGIN    reduce using rule 7 (declaring_vars_block)
    PROCEDURE  reduce using rule 7 (declaring_vars_block)
    FUNCTION   reduce using rule 7 (declaring_vars_block)

    block                 go to state 109
    declaring_vars_block  go to state 15


State 77

   28 procedure_def: FUNCTION IDENT $@8 procedure_params COLON • IDENT $@9 SEMICOLON block $@10 SEMICOLON

    IDENT  shift, and go to state 110


State 78

   48 command: IDENT $@15 starts_with_ident •

    $default  reduce using rule 48 (command)


State 79

   54 starts_with_ident: procedure_call •

    $default  reduce using rule 54 (starts_with_ident)


State 80

   57 procedure_call: $@16 • procedure_call_continues

    OPEN_PARENTHESIS  shift, and go to state 111

    CLOSE_PARENTHESIS  reduce using rule 59 (procedure_call_continues)
    COMMA              reduce using rule 59 (procedure_call_continues)
    SEMICOLON          reduce using rule 59 (procedure_call_continues)
    T_END              reduce using rule 59 (procedure_call_continues)
    THEN               reduce using rule 59 (procedure_call_continues)
    ELSE               reduce using rule 59 (procedure_call_continues)
    DO                 reduce using rule 59 (procedure_call_continues)
    DIV                reduce using rule 59 (procedure_call_continues)
    ASTERISK           reduce using rule 59 (procedure_call_continues)
    PLUS               reduce using rule 59 (procedure_call_continues)
    MINUS              reduce using rule 59 (procedure_call_continues)
    EQUAL              reduce using rule 59 (procedure_call_continues)
    DIFFERENT          reduce using rule 59 (procedure_call_continues)
    LESS_OR_EQUAL      reduce using rule 59 (procedure_call_continues)
    LESS               reduce using rule 59 (procedure_call_continues)
    MORE_OR_EQUAL      reduce using rule 59 (procedure_call_continues)
    MORE               reduce using rule 59 (procedure_call_continues)

    procedure_call_continues  go to state 112


State 81

   55 starts_with_ident: assignment_operation •

    $default  reduce using rule 55 (starts_with_ident)


State 82

   81 assignment_operation: $@21 • ASSIGNMENT boolean_expr

    ASSIGNMENT  shift, and go to state 113


State 83

   83 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   84             | boolean_expr • DIFFERENT arithmetic_expr
   85             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   86             | boolean_expr • LESS arithmetic_expr
   87             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   88             | boolean_expr • MORE arithmetic_expr
   99 F: OPEN_PARENTHESIS boolean_expr • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 114
    EQUAL              shift, and go to state 85
    DIFFERENT          shift, and go to state 86
    LESS_OR_EQUAL      shift, and go to state 87
    LESS               shift, and go to state 88
    MORE_OR_EQUAL      shift, and go to state 89
    MORE               shift, and go to state 90


State 84

   98 F: IDENT $@22 • IDENT_CONTINUES

    OPEN_PARENTHESIS   reduce using rule 101 ($@23)
    CLOSE_PARENTHESIS  reduce using rule 100 (IDENT_CONTINUES)
    CLOSE_PARENTHESIS  [reduce using rule 101 ($@23)]
    COMMA              reduce using rule 100 (IDENT_CONTINUES)
    COMMA              [reduce using rule 101 ($@23)]
    SEMICOLON          reduce using rule 100 (IDENT_CONTINUES)
    SEMICOLON          [reduce using rule 101 ($@23)]
    T_END              reduce using rule 100 (IDENT_CONTINUES)
    T_END              [reduce using rule 101 ($@23)]
    THEN               reduce using rule 100 (IDENT_CONTINUES)
    THEN               [reduce using rule 101 ($@23)]
    ELSE               reduce using rule 100 (IDENT_CONTINUES)
    ELSE               [reduce using rule 101 ($@23)]
    DO                 reduce using rule 100 (IDENT_CONTINUES)
    DO                 [reduce using rule 101 ($@23)]
    DIV                reduce using rule 100 (IDENT_CONTINUES)
    DIV                [reduce using rule 101 ($@23)]
    ASTERISK           reduce using rule 100 (IDENT_CONTINUES)
    ASTERISK           [reduce using rule 101 ($@23)]
    PLUS               reduce using rule 100 (IDENT_CONTINUES)
    PLUS               [reduce using rule 101 ($@23)]
    MINUS              reduce using rule 100 (IDENT_CONTINUES)
    MINUS              [reduce using rule 101 ($@23)]
    EQUAL              reduce using rule 100 (IDENT_CONTINUES)
    EQUAL              [reduce using rule 101 ($@23)]
    DIFFERENT          reduce using rule 100 (IDENT_CONTINUES)
    DIFFERENT          [reduce using rule 101 ($@23)]
    LESS_OR_EQUAL      reduce using rule 100 (IDENT_CONTINUES)
    LESS_OR_EQUAL      [reduce using rule 101 ($@23)]
    LESS               reduce using rule 100 (IDENT_CONTINUES)
    LESS               [reduce using rule 101 ($@23)]
    MORE_OR_EQUAL      reduce using rule 100 (IDENT_CONTINUES)
    MORE_OR_EQUAL      [reduce using rule 101 ($@23)]
    MORE               reduce using rule 100 (IDENT_CONTINUES)
    MORE               [reduce using rule 101 ($@23)]

    IDENT_CONTINUES  go to state 115
    $@23             go to state 116

    reduce/reduce conflict on tokens CLOSE_PARENTHESIS, COMMA, SEMICOLON, T_END, THEN, ELSE, DO, DIV, ASTERISK, PLUS, MINUS, EQUAL, DIFFERENT, LESS_OR_EQUAL, LESS, MORE_OR_EQUAL, MORE:
      100 IDENT_CONTINUES: ε •
      101 $@23: ε •
      Example: •
      First reduce derivation
        IDENT_CONTINUES
        ↳ 100: ε •
      Second reduce derivation
        $@23
        ↳ 101: ε •



State 85

   83 boolean_expr: boolean_expr EQUAL • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    arithmetic_expr  go to state 117
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 86

   84 boolean_expr: boolean_expr DIFFERENT • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    arithmetic_expr  go to state 118
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 87

   85 boolean_expr: boolean_expr LESS_OR_EQUAL • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    arithmetic_expr  go to state 119
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 88

   86 boolean_expr: boolean_expr LESS • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    arithmetic_expr  go to state 120
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 89

   87 boolean_expr: boolean_expr MORE_OR_EQUAL • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    arithmetic_expr  go to state 121
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 90

   88 boolean_expr: boolean_expr MORE • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    arithmetic_expr  go to state 122
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 91

   76 if_then: IF boolean_expr $@19 • THEN command

    THEN  shift, and go to state 123


State 92

   90 E: E PLUS • T

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    T  go to state 124
    F  go to state 66


State 93

   91 E: E MINUS • T

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    T  go to state 125
    F  go to state 66


State 94

   94 T: T DIV • F

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    F  go to state 126


State 95

   93 T: T ASTERISK • F

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    F  go to state 127


State 96

   73 loop: WHILE $@17 boolean_expr • $@18 DO command
   83 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   84             | boolean_expr • DIFFERENT arithmetic_expr
   85             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   86             | boolean_expr • LESS arithmetic_expr
   87             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   88             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 85
    DIFFERENT      shift, and go to state 86
    LESS_OR_EQUAL  shift, and go to state 87
    LESS           shift, and go to state 88
    MORE_OR_EQUAL  shift, and go to state 89
    MORE           shift, and go to state 90

    DO  reduce using rule 72 ($@18)

    $@18  go to state 128


State 97

   67 read_ident_list: IDENT •

    $default  reduce using rule 67 (read_ident_list)


State 98

   65 read: READ OPEN_PARENTHESIS read_ident_list • CLOSE_PARENTHESIS
   66 read_ident_list: read_ident_list • COMMA IDENT

    CLOSE_PARENTHESIS  shift, and go to state 129
    COMMA              shift, and go to state 130


State 99

   68 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list • CLOSE_PARENTHESIS
   69 write_boolean_expr_list: write_boolean_expr_list • COMMA boolean_expr

    CLOSE_PARENTHESIS  shift, and go to state 131
    COMMA              shift, and go to state 132


State 100

   70 write_boolean_expr_list: boolean_expr •
   83 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   84             | boolean_expr • DIFFERENT arithmetic_expr
   85             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   86             | boolean_expr • LESS arithmetic_expr
   87             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   88             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 85
    DIFFERENT      shift, and go to state 86
    LESS_OR_EQUAL  shift, and go to state 87
    LESS           shift, and go to state 88
    MORE_OR_EQUAL  shift, and go to state 89
    MORE           shift, and go to state 90

    CLOSE_PARENTHESIS  reduce using rule 70 (write_boolean_expr_list)
    COMMA              reduce using rule 70 (write_boolean_expr_list)


State 101

   45 commands: commands SEMICOLON command •

    $default  reduce using rule 45 (commands)


State 102

   44 compound_command: T_BEGIN commands optional_semicolon T_END •

    $default  reduce using rule 44 (compound_command)


State 103

   78 cond_else: ELSE $@20 • command

    T_BEGIN  shift, and go to state 32
    IDENT    shift, and go to state 39
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    READ     shift, and go to state 42
    WRITE    shift, and go to state 43

    compound_command  go to state 44
    command           go to state 133
    read              go to state 47
    write             go to state 48
    loop              go to state 49
    conditional       go to state 50
    if_then           go to state 51


State 104

   12 declare_var: $@4 id_simple_var_list COLON type $@5 SEMICOLON •

    $default  reduce using rule 12 (declare_var)


State 105

   38 by_reference_or_not: VAR •

    $default  reduce using rule 38 (by_reference_or_not)


State 106

   31 procedure_params: OPEN_PARENTHESIS $@11 declare_params • $@12 CLOSE_PARENTHESIS
   33 declare_params: declare_params • declare_param

    VAR  shift, and go to state 105

    CLOSE_PARENTHESIS  reduce using rule 30 ($@12)
    IDENT              reduce using rule 39 (by_reference_or_not)

    $@12                 go to state 134
    declare_param        go to state 135
    by_reference_or_not  go to state 108


State 107

   34 declare_params: declare_param •

    $default  reduce using rule 34 (declare_params)


State 108

   37 declare_param: by_reference_or_not • $@13 id_param_list COLON type $@14 optional_semicolon

    $default  reduce using rule 35 ($@13)

    $@13  go to state 136


State 109

   24 procedure_def: PROCEDURE IDENT $@6 procedure_params SEMICOLON block • $@7 SEMICOLON

    $default  reduce using rule 23 ($@7)

    $@7  go to state 137


State 110

   28 procedure_def: FUNCTION IDENT $@8 procedure_params COLON IDENT • $@9 SEMICOLON block $@10 SEMICOLON

    $default  reduce using rule 26 ($@9)

    $@9  go to state 138


State 111

   58 procedure_call_continues: OPEN_PARENTHESIS • procedure_arguments CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 139
    NUMBER            shift, and go to state 61

    procedure_arguments  go to state 140
    args_list            go to state 141
    ARGUMENT             go to state 142
    boolean_expr         go to state 143
    arithmetic_expr      go to state 63
    E                    go to state 64
    T                    go to state 65
    F                    go to state 66


State 112

   57 procedure_call: $@16 procedure_call_continues •

    $default  reduce using rule 57 (procedure_call)


State 113

   81 assignment_operation: $@21 ASSIGNMENT • boolean_expr

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    boolean_expr     go to state 144
    arithmetic_expr  go to state 63
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 114

   99 F: OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS •

    $default  reduce using rule 99 (F)


State 115

   98 F: IDENT $@22 IDENT_CONTINUES •

    $default  reduce using rule 98 (F)


State 116

  102 IDENT_CONTINUES: $@23 • procedure_call

    $default  reduce using rule 56 ($@16)

    procedure_call  go to state 145
    $@16            go to state 80


State 117

   83 boolean_expr: boolean_expr EQUAL arithmetic_expr •

    $default  reduce using rule 83 (boolean_expr)


State 118

   84 boolean_expr: boolean_expr DIFFERENT arithmetic_expr •

    $default  reduce using rule 84 (boolean_expr)


State 119

   85 boolean_expr: boolean_expr LESS_OR_EQUAL arithmetic_expr •

    $default  reduce using rule 85 (boolean_expr)


State 120

   86 boolean_expr: boolean_expr LESS arithmetic_expr •

    $default  reduce using rule 86 (boolean_expr)


State 121

   87 boolean_expr: boolean_expr MORE_OR_EQUAL arithmetic_expr •

    $default  reduce using rule 87 (boolean_expr)


State 122

   88 boolean_expr: boolean_expr MORE arithmetic_expr •

    $default  reduce using rule 88 (boolean_expr)


State 123

   76 if_then: IF boolean_expr $@19 THEN • command

    T_BEGIN  shift, and go to state 32
    IDENT    shift, and go to state 39
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    READ     shift, and go to state 42
    WRITE    shift, and go to state 43

    compound_command  go to state 44
    command           go to state 146
    read              go to state 47
    write             go to state 48
    loop              go to state 49
    conditional       go to state 50
    if_then           go to state 51


State 124

   90 E: E PLUS T •
   93 T: T • ASTERISK F
   94  | T • DIV F

    DIV       shift, and go to state 94
    ASTERISK  shift, and go to state 95

    CLOSE_PARENTHESIS  reduce using rule 90 (E)
    COMMA              reduce using rule 90 (E)
    SEMICOLON          reduce using rule 90 (E)
    T_END              reduce using rule 90 (E)
    THEN               reduce using rule 90 (E)
    ELSE               reduce using rule 90 (E)
    DO                 reduce using rule 90 (E)
    PLUS               reduce using rule 90 (E)
    MINUS              reduce using rule 90 (E)
    EQUAL              reduce using rule 90 (E)
    DIFFERENT          reduce using rule 90 (E)
    LESS_OR_EQUAL      reduce using rule 90 (E)
    LESS               reduce using rule 90 (E)
    MORE_OR_EQUAL      reduce using rule 90 (E)
    MORE               reduce using rule 90 (E)


State 125

   91 E: E MINUS T •
   93 T: T • ASTERISK F
   94  | T • DIV F

    DIV       shift, and go to state 94
    ASTERISK  shift, and go to state 95

    CLOSE_PARENTHESIS  reduce using rule 91 (E)
    COMMA              reduce using rule 91 (E)
    SEMICOLON          reduce using rule 91 (E)
    T_END              reduce using rule 91 (E)
    THEN               reduce using rule 91 (E)
    ELSE               reduce using rule 91 (E)
    DO                 reduce using rule 91 (E)
    PLUS               reduce using rule 91 (E)
    MINUS              reduce using rule 91 (E)
    EQUAL              reduce using rule 91 (E)
    DIFFERENT          reduce using rule 91 (E)
    LESS_OR_EQUAL      reduce using rule 91 (E)
    LESS               reduce using rule 91 (E)
    MORE_OR_EQUAL      reduce using rule 91 (E)
    MORE               reduce using rule 91 (E)


State 126

   94 T: T DIV F •

    $default  reduce using rule 94 (T)


State 127

   93 T: T ASTERISK F •

    $default  reduce using rule 93 (T)


State 128

   73 loop: WHILE $@17 boolean_expr $@18 • DO command

    DO  shift, and go to state 147


State 129

   65 read: READ OPEN_PARENTHESIS read_ident_list CLOSE_PARENTHESIS •

    $default  reduce using rule 65 (read)


State 130

   66 read_ident_list: read_ident_list COMMA • IDENT

    IDENT  shift, and go to state 148


State 131

   68 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS •

    $default  reduce using rule 68 (write)


State 132

   69 write_boolean_expr_list: write_boolean_expr_list COMMA • boolean_expr

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 60
    NUMBER            shift, and go to state 61

    boolean_expr     go to state 149
    arithmetic_expr  go to state 63
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 133

   78 cond_else: ELSE $@20 command •

    $default  reduce using rule 78 (cond_else)


State 134

   31 procedure_params: OPEN_PARENTHESIS $@11 declare_params $@12 • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 150


State 135

   33 declare_params: declare_params declare_param •

    $default  reduce using rule 33 (declare_params)


State 136

   37 declare_param: by_reference_or_not $@13 • id_param_list COLON type $@14 optional_semicolon

    IDENT  shift, and go to state 151

    id_param_list  go to state 152


State 137

   24 procedure_def: PROCEDURE IDENT $@6 procedure_params SEMICOLON block $@7 • SEMICOLON

    SEMICOLON  shift, and go to state 153


State 138

   28 procedure_def: FUNCTION IDENT $@8 procedure_params COLON IDENT $@9 • SEMICOLON block $@10 SEMICOLON

    SEMICOLON  shift, and go to state 154


State 139

   63 ARGUMENT: IDENT •
   98 F: IDENT • $@22 IDENT_CONTINUES

    OPEN_PARENTHESIS   reduce using rule 97 ($@22)
    CLOSE_PARENTHESIS  reduce using rule 63 (ARGUMENT)
    CLOSE_PARENTHESIS  [reduce using rule 97 ($@22)]
    COMMA              reduce using rule 63 (ARGUMENT)
    COMMA              [reduce using rule 97 ($@22)]
    DIV                reduce using rule 97 ($@22)
    ASTERISK           reduce using rule 97 ($@22)
    PLUS               reduce using rule 97 ($@22)
    MINUS              reduce using rule 97 ($@22)
    EQUAL              reduce using rule 97 ($@22)
    DIFFERENT          reduce using rule 97 ($@22)
    LESS_OR_EQUAL      reduce using rule 97 ($@22)
    LESS               reduce using rule 97 ($@22)
    MORE_OR_EQUAL      reduce using rule 97 ($@22)
    MORE               reduce using rule 97 ($@22)

    $@22  go to state 84

    reduce/reduce conflict on tokens CLOSE_PARENTHESIS, COMMA:
       63 ARGUMENT: IDENT •
       97 $@22: ε •
      Example: IDENT •
      First reduce derivation
        ARGUMENT
        ↳ 63: IDENT •
      Second reduce derivation
        ARGUMENT
        ↳ 64: boolean_expr
              ↳ 82: arithmetic_expr
                    ↳ 89: E
                          ↳ 92: T
                                ↳ 95: F
                                      ↳ 98: IDENT $@22      IDENT_CONTINUES
                                                  ↳ 97: ε • ↳ 98: ε



State 140

   58 procedure_call_continues: OPEN_PARENTHESIS procedure_arguments • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 155


State 141

   60 procedure_arguments: args_list •
   61 args_list: args_list • COMMA ARGUMENT

    COMMA  shift, and go to state 156

    CLOSE_PARENTHESIS  reduce using rule 60 (procedure_arguments)


State 142

   62 args_list: ARGUMENT •

    $default  reduce using rule 62 (args_list)


State 143

   64 ARGUMENT: boolean_expr •
   83 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   84             | boolean_expr • DIFFERENT arithmetic_expr
   85             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   86             | boolean_expr • LESS arithmetic_expr
   87             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   88             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 85
    DIFFERENT      shift, and go to state 86
    LESS_OR_EQUAL  shift, and go to state 87
    LESS           shift, and go to state 88
    MORE_OR_EQUAL  shift, and go to state 89
    MORE           shift, and go to state 90

    CLOSE_PARENTHESIS  reduce using rule 64 (ARGUMENT)
    COMMA              reduce using rule 64 (ARGUMENT)


State 144

   81 assignment_operation: $@21 ASSIGNMENT boolean_expr •
   83 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   84             | boolean_expr • DIFFERENT arithmetic_expr
   85             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   86             | boolean_expr • LESS arithmetic_expr
   87             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   88             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 85
    DIFFERENT      shift, and go to state 86
    LESS_OR_EQUAL  shift, and go to state 87
    LESS           shift, and go to state 88
    MORE_OR_EQUAL  shift, and go to state 89
    MORE           shift, and go to state 90

    SEMICOLON  reduce using rule 81 (assignment_operation)
    T_END      reduce using rule 81 (assignment_operation)
    ELSE       reduce using rule 81 (assignment_operation)


State 145

  102 IDENT_CONTINUES: $@23 procedure_call •

    $default  reduce using rule 102 (IDENT_CONTINUES)


State 146

   76 if_then: IF boolean_expr $@19 THEN command •

    $default  reduce using rule 76 (if_then)


State 147

   73 loop: WHILE $@17 boolean_expr $@18 DO • command

    T_BEGIN  shift, and go to state 32
    IDENT    shift, and go to state 39
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    READ     shift, and go to state 42
    WRITE    shift, and go to state 43

    compound_command  go to state 44
    command           go to state 157
    read              go to state 47
    write             go to state 48
    loop              go to state 49
    conditional       go to state 50
    if_then           go to state 51


State 148

   66 read_ident_list: read_ident_list COMMA IDENT •

    $default  reduce using rule 66 (read_ident_list)


State 149

   69 write_boolean_expr_list: write_boolean_expr_list COMMA boolean_expr •
   83 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   84             | boolean_expr • DIFFERENT arithmetic_expr
   85             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   86             | boolean_expr • LESS arithmetic_expr
   87             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   88             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 85
    DIFFERENT      shift, and go to state 86
    LESS_OR_EQUAL  shift, and go to state 87
    LESS           shift, and go to state 88
    MORE_OR_EQUAL  shift, and go to state 89
    MORE           shift, and go to state 90

    CLOSE_PARENTHESIS  reduce using rule 69 (write_boolean_expr_list)
    COMMA              reduce using rule 69 (write_boolean_expr_list)


State 150

   31 procedure_params: OPEN_PARENTHESIS $@11 declare_params $@12 CLOSE_PARENTHESIS •

    $default  reduce using rule 31 (procedure_params)


State 151

   41 id_param_list: IDENT •

    $default  reduce using rule 41 (id_param_list)


State 152

   37 declare_param: by_reference_or_not $@13 id_param_list • COLON type $@14 optional_semicolon
   40 id_param_list: id_param_list • COMMA IDENT

    COMMA  shift, and go to state 158
    COLON  shift, and go to state 159


State 153

   24 procedure_def: PROCEDURE IDENT $@6 procedure_params SEMICOLON block $@7 SEMICOLON •

    $default  reduce using rule 24 (procedure_def)


State 154

   28 procedure_def: FUNCTION IDENT $@8 procedure_params COLON IDENT $@9 SEMICOLON • block $@10 SEMICOLON

    VAR  shift, and go to state 13

    T_BEGIN    reduce using rule 7 (declaring_vars_block)
    PROCEDURE  reduce using rule 7 (declaring_vars_block)
    FUNCTION   reduce using rule 7 (declaring_vars_block)

    block                 go to state 160
    declaring_vars_block  go to state 15


State 155

   58 procedure_call_continues: OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS •

    $default  reduce using rule 58 (procedure_call_continues)


State 156

   61 args_list: args_list COMMA • ARGUMENT

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENT             shift, and go to state 139
    NUMBER            shift, and go to state 61

    ARGUMENT         go to state 161
    boolean_expr     go to state 143
    arithmetic_expr  go to state 63
    E                go to state 64
    T                go to state 65
    F                go to state 66


State 157

   73 loop: WHILE $@17 boolean_expr $@18 DO command •

    $default  reduce using rule 73 (loop)


State 158

   40 id_param_list: id_param_list COMMA • IDENT

    IDENT  shift, and go to state 162


State 159

   37 declare_param: by_reference_or_not $@13 id_param_list COLON • type $@14 optional_semicolon

    IDENT  shift, and go to state 53

    type  go to state 163


State 160

   28 procedure_def: FUNCTION IDENT $@8 procedure_params COLON IDENT $@9 SEMICOLON block • $@10 SEMICOLON

    $default  reduce using rule 27 ($@10)

    $@10  go to state 164


State 161

   61 args_list: args_list COMMA ARGUMENT •

    $default  reduce using rule 61 (args_list)


State 162

   40 id_param_list: id_param_list COMMA IDENT •

    $default  reduce using rule 40 (id_param_list)


State 163

   37 declare_param: by_reference_or_not $@13 id_param_list COLON type • $@14 optional_semicolon

    $default  reduce using rule 36 ($@14)

    $@14  go to state 165


State 164

   28 procedure_def: FUNCTION IDENT $@8 procedure_params COLON IDENT $@9 SEMICOLON block $@10 • SEMICOLON

    SEMICOLON  shift, and go to state 166


State 165

   37 declare_param: by_reference_or_not $@13 id_param_list COLON type $@14 • optional_semicolon

    SEMICOLON  shift, and go to state 167

    CLOSE_PARENTHESIS  reduce using rule 43 (optional_semicolon)
    VAR                reduce using rule 43 (optional_semicolon)
    IDENT              reduce using rule 43 (optional_semicolon)

    optional_semicolon  go to state 168


State 166

   28 procedure_def: FUNCTION IDENT $@8 procedure_params COLON IDENT $@9 SEMICOLON block $@10 SEMICOLON •

    $default  reduce using rule 28 (procedure_def)


State 167

   42 optional_semicolon: SEMICOLON •

    $default  reduce using rule 42 (optional_semicolon)


State 168

   37 declare_param: by_reference_or_not $@13 id_param_list COLON type $@14 optional_semicolon •

    $default  reduce using rule 37 (declare_param)
