Terminals unused in grammar

    LABEL
    TYPE
    ARRAY
    OF
    PROCEDURE
    GOTO
    IF
    THEN
    ELSE
    OR
    AND
    NOT


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    3 $@2: %empty

    4 block: declaring_vars_block $@2 compound_command

    5 declaring_vars_block: var

    6 $@3: %empty

    7 var: $@3 VAR declare_vars
    8    | %empty

    9 declare_vars: declare_vars declare_var
   10             | declare_var

   11 $@4: %empty

   12 $@5: %empty

   13 declare_var: $@4 id_var_list COLON type $@5 SEMICOLON

   14 type: IDENT

   15 id_var_list: id_var_list COMMA IDENT
   16            | IDENT

   17 idents_list: idents_list COMMA IDENT
   18            | IDENT

   19 compound_command: T_BEGIN commands T_END

   20 commands: commands command
   21         | command

   22 command: assignment
   23        | compound_command
   24        | loop

   25 $@6: %empty

   26 $@7: %empty

   27 loop: WHILE $@6 boolean_expr $@7 DO command

   28 $@8: %empty

   29 assignment: IDENT $@8 ASSIGNMENT boolean_expr SEMICOLON

   30 boolean_expr: arithmetic_expr
   31             | boolean_expr EQUAL arithmetic_expr
   32             | boolean_expr DIFFERENT arithmetic_expr
   33             | boolean_expr LESS_OR_EQUAL arithmetic_expr
   34             | boolean_expr LESS arithmetic_expr
   35             | boolean_expr MORE_OR_EQUAL arithmetic_expr
   36             | boolean_expr MORE arithmetic_expr

   37 arithmetic_expr: E

   38 E: E PLUS T
   39  | E MINUS T
   40  | T

   41 T: T ASTERISK F
   42  | T DIV F
   43  | F

   44 F: NUMBER
   45  | IDENT
   46  | OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 2
    OPEN_PARENTHESIS (259) 2 46
    CLOSE_PARENTHESIS (260) 2 46
    COMMA (261) 15 17
    SEMICOLON (262) 2 13 29
    COLON (263) 13
    DOT (264) 2
    T_BEGIN (265) 19
    T_END (266) 19
    VAR (267) 7
    IDENT (268) 2 14 15 16 17 18 29 45
    ASSIGNMENT (269) 29
    LABEL (270)
    TYPE (271)
    ARRAY (272)
    OF (273)
    PROCEDURE (274)
    GOTO (275)
    IF (276)
    THEN (277)
    ELSE (278)
    WHILE (279) 27
    DO (280) 27
    OR (281)
    AND (282)
    NOT (283)
    DIV (284) 42
    ASTERISK (285) 41
    PLUS (286) 38
    MINUS (287) 39
    EQUAL (288) 31
    DIFFERENT (289) 32
    LESS_OR_EQUAL (290) 33
    LESS (291) 34
    MORE_OR_EQUAL (292) 35
    MORE (293) 36
    NUMBER (294) 44


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    program (41)
        on left: 2
        on right: 0
    $@1 (42)
        on left: 1
        on right: 2
    block (43)
        on left: 4
        on right: 2
    $@2 (44)
        on left: 3
        on right: 4
    declaring_vars_block (45)
        on left: 5
        on right: 4
    var (46)
        on left: 7 8
        on right: 5
    $@3 (47)
        on left: 6
        on right: 7
    declare_vars (48)
        on left: 9 10
        on right: 7 9
    declare_var (49)
        on left: 13
        on right: 9 10
    $@4 (50)
        on left: 11
        on right: 13
    $@5 (51)
        on left: 12
        on right: 13
    type (52)
        on left: 14
        on right: 13
    id_var_list (53)
        on left: 15 16
        on right: 13 15
    idents_list (54)
        on left: 17 18
        on right: 2 17
    compound_command (55)
        on left: 19
        on right: 4 23
    commands (56)
        on left: 20 21
        on right: 19 20
    command (57)
        on left: 22 23 24
        on right: 20 21 27
    loop (58)
        on left: 27
        on right: 24
    $@6 (59)
        on left: 25
        on right: 27
    $@7 (60)
        on left: 26
        on right: 27
    assignment (61)
        on left: 29
        on right: 22
    $@8 (62)
        on left: 28
        on right: 29
    boolean_expr (63)
        on left: 30 31 32 33 34 35 36
        on right: 27 29 31 32 33 34 35 36 46
    arithmetic_expr (64)
        on left: 37
        on right: 30 31 32 33 34 35 36
    E (65)
        on left: 38 39 40
        on right: 37 38 39
    T (66)
        on left: 41 42 43
        on right: 38 39 40 41 42
    F (67)
        on left: 44 45 46
        on right: 41 42 43


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 PROGRAM . IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 5


State 5

    2 program: $@1 PROGRAM IDENT . OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    OPEN_PARENTHESIS  shift, and go to state 6


State 6

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS . idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 7

    idents_list  go to state 8


State 7

   18 idents_list: IDENT .

    $default  reduce using rule 18 (idents_list)


State 8

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list . CLOSE_PARENTHESIS SEMICOLON block DOT
   17 idents_list: idents_list . COMMA IDENT

    CLOSE_PARENTHESIS  shift, and go to state 9
    COMMA              shift, and go to state 10


State 9

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS . SEMICOLON block DOT

    SEMICOLON  shift, and go to state 11


State 10

   17 idents_list: idents_list COMMA . IDENT

    IDENT  shift, and go to state 12


State 11

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON . block DOT

    T_BEGIN   reduce using rule 8 (var)
    $default  reduce using rule 6 ($@3)

    block                 go to state 13
    declaring_vars_block  go to state 14
    var                   go to state 15
    $@3                   go to state 16


State 12

   17 idents_list: idents_list COMMA IDENT .

    $default  reduce using rule 17 (idents_list)


State 13

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block . DOT

    DOT  shift, and go to state 17


State 14

    4 block: declaring_vars_block . $@2 compound_command

    $default  reduce using rule 3 ($@2)

    $@2  go to state 18


State 15

    5 declaring_vars_block: var .

    $default  reduce using rule 5 (declaring_vars_block)


State 16

    7 var: $@3 . VAR declare_vars

    VAR  shift, and go to state 19


State 17

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT .

    $default  reduce using rule 2 (program)


State 18

    4 block: declaring_vars_block $@2 . compound_command

    T_BEGIN  shift, and go to state 20

    compound_command  go to state 21


State 19

    7 var: $@3 VAR . declare_vars

    $default  reduce using rule 11 ($@4)

    declare_vars  go to state 22
    declare_var   go to state 23
    $@4           go to state 24


State 20

   19 compound_command: T_BEGIN . commands T_END

    T_BEGIN  shift, and go to state 20
    IDENT    shift, and go to state 25
    WHILE    shift, and go to state 26

    compound_command  go to state 27
    commands          go to state 28
    command           go to state 29
    loop              go to state 30
    assignment        go to state 31


State 21

    4 block: declaring_vars_block $@2 compound_command .

    $default  reduce using rule 4 (block)


State 22

    7 var: $@3 VAR declare_vars .
    9 declare_vars: declare_vars . declare_var

    IDENT     reduce using rule 11 ($@4)
    $default  reduce using rule 7 (var)

    declare_var  go to state 32
    $@4          go to state 24


State 23

   10 declare_vars: declare_var .

    $default  reduce using rule 10 (declare_vars)


State 24

   13 declare_var: $@4 . id_var_list COLON type $@5 SEMICOLON

    IDENT  shift, and go to state 33

    id_var_list  go to state 34


State 25

   29 assignment: IDENT . $@8 ASSIGNMENT boolean_expr SEMICOLON

    $default  reduce using rule 28 ($@8)

    $@8  go to state 35


State 26

   27 loop: WHILE . $@6 boolean_expr $@7 DO command

    $default  reduce using rule 25 ($@6)

    $@6  go to state 36


State 27

   23 command: compound_command .

    $default  reduce using rule 23 (command)


State 28

   19 compound_command: T_BEGIN commands . T_END
   20 commands: commands . command

    T_BEGIN  shift, and go to state 20
    T_END    shift, and go to state 37
    IDENT    shift, and go to state 25
    WHILE    shift, and go to state 26

    compound_command  go to state 27
    command           go to state 38
    loop              go to state 30
    assignment        go to state 31


State 29

   21 commands: command .

    $default  reduce using rule 21 (commands)


State 30

   24 command: loop .

    $default  reduce using rule 24 (command)


State 31

   22 command: assignment .

    $default  reduce using rule 22 (command)


State 32

    9 declare_vars: declare_vars declare_var .

    $default  reduce using rule 9 (declare_vars)


State 33

   16 id_var_list: IDENT .

    $default  reduce using rule 16 (id_var_list)


State 34

   13 declare_var: $@4 id_var_list . COLON type $@5 SEMICOLON
   15 id_var_list: id_var_list . COMMA IDENT

    COMMA  shift, and go to state 39
    COLON  shift, and go to state 40


State 35

   29 assignment: IDENT $@8 . ASSIGNMENT boolean_expr SEMICOLON

    ASSIGNMENT  shift, and go to state 41


State 36

   27 loop: WHILE $@6 . boolean_expr $@7 DO command

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    boolean_expr     go to state 45
    arithmetic_expr  go to state 46
    E                go to state 47
    T                go to state 48
    F                go to state 49


State 37

   19 compound_command: T_BEGIN commands T_END .

    $default  reduce using rule 19 (compound_command)


State 38

   20 commands: commands command .

    $default  reduce using rule 20 (commands)


State 39

   15 id_var_list: id_var_list COMMA . IDENT

    IDENT  shift, and go to state 50


State 40

   13 declare_var: $@4 id_var_list COLON . type $@5 SEMICOLON

    IDENT  shift, and go to state 51

    type  go to state 52


State 41

   29 assignment: IDENT $@8 ASSIGNMENT . boolean_expr SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    boolean_expr     go to state 53
    arithmetic_expr  go to state 46
    E                go to state 47
    T                go to state 48
    F                go to state 49


State 42

   46 F: OPEN_PARENTHESIS . boolean_expr CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    boolean_expr     go to state 54
    arithmetic_expr  go to state 46
    E                go to state 47
    T                go to state 48
    F                go to state 49


State 43

   45 F: IDENT .

    $default  reduce using rule 45 (F)


State 44

   44 F: NUMBER .

    $default  reduce using rule 44 (F)


State 45

   27 loop: WHILE $@6 boolean_expr . $@7 DO command
   31 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   32             | boolean_expr . DIFFERENT arithmetic_expr
   33             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   34             | boolean_expr . LESS arithmetic_expr
   35             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   36             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 55
    DIFFERENT      shift, and go to state 56
    LESS_OR_EQUAL  shift, and go to state 57
    LESS           shift, and go to state 58
    MORE_OR_EQUAL  shift, and go to state 59
    MORE           shift, and go to state 60

    $default  reduce using rule 26 ($@7)

    $@7  go to state 61


State 46

   30 boolean_expr: arithmetic_expr .

    $default  reduce using rule 30 (boolean_expr)


State 47

   37 arithmetic_expr: E .
   38 E: E . PLUS T
   39  | E . MINUS T

    PLUS   shift, and go to state 62
    MINUS  shift, and go to state 63

    $default  reduce using rule 37 (arithmetic_expr)


State 48

   40 E: T .
   41 T: T . ASTERISK F
   42  | T . DIV F

    DIV       shift, and go to state 64
    ASTERISK  shift, and go to state 65

    $default  reduce using rule 40 (E)


State 49

   43 T: F .

    $default  reduce using rule 43 (T)


State 50

   15 id_var_list: id_var_list COMMA IDENT .

    $default  reduce using rule 15 (id_var_list)


State 51

   14 type: IDENT .

    $default  reduce using rule 14 (type)


State 52

   13 declare_var: $@4 id_var_list COLON type . $@5 SEMICOLON

    $default  reduce using rule 12 ($@5)

    $@5  go to state 66


State 53

   29 assignment: IDENT $@8 ASSIGNMENT boolean_expr . SEMICOLON
   31 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   32             | boolean_expr . DIFFERENT arithmetic_expr
   33             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   34             | boolean_expr . LESS arithmetic_expr
   35             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   36             | boolean_expr . MORE arithmetic_expr

    SEMICOLON      shift, and go to state 67
    EQUAL          shift, and go to state 55
    DIFFERENT      shift, and go to state 56
    LESS_OR_EQUAL  shift, and go to state 57
    LESS           shift, and go to state 58
    MORE_OR_EQUAL  shift, and go to state 59
    MORE           shift, and go to state 60


State 54

   31 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   32             | boolean_expr . DIFFERENT arithmetic_expr
   33             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   34             | boolean_expr . LESS arithmetic_expr
   35             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   36             | boolean_expr . MORE arithmetic_expr
   46 F: OPEN_PARENTHESIS boolean_expr . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 68
    EQUAL              shift, and go to state 55
    DIFFERENT          shift, and go to state 56
    LESS_OR_EQUAL      shift, and go to state 57
    LESS               shift, and go to state 58
    MORE_OR_EQUAL      shift, and go to state 59
    MORE               shift, and go to state 60


State 55

   31 boolean_expr: boolean_expr EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    arithmetic_expr  go to state 69
    E                go to state 47
    T                go to state 48
    F                go to state 49


State 56

   32 boolean_expr: boolean_expr DIFFERENT . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    arithmetic_expr  go to state 70
    E                go to state 47
    T                go to state 48
    F                go to state 49


State 57

   33 boolean_expr: boolean_expr LESS_OR_EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    arithmetic_expr  go to state 71
    E                go to state 47
    T                go to state 48
    F                go to state 49


State 58

   34 boolean_expr: boolean_expr LESS . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    arithmetic_expr  go to state 72
    E                go to state 47
    T                go to state 48
    F                go to state 49


State 59

   35 boolean_expr: boolean_expr MORE_OR_EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    arithmetic_expr  go to state 73
    E                go to state 47
    T                go to state 48
    F                go to state 49


State 60

   36 boolean_expr: boolean_expr MORE . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    arithmetic_expr  go to state 74
    E                go to state 47
    T                go to state 48
    F                go to state 49


State 61

   27 loop: WHILE $@6 boolean_expr $@7 . DO command

    DO  shift, and go to state 75


State 62

   38 E: E PLUS . T

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    T  go to state 76
    F  go to state 49


State 63

   39 E: E MINUS . T

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    T  go to state 77
    F  go to state 49


State 64

   42 T: T DIV . F

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    F  go to state 78


State 65

   41 T: T ASTERISK . F

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    F  go to state 79


State 66

   13 declare_var: $@4 id_var_list COLON type $@5 . SEMICOLON

    SEMICOLON  shift, and go to state 80


State 67

   29 assignment: IDENT $@8 ASSIGNMENT boolean_expr SEMICOLON .

    $default  reduce using rule 29 (assignment)


State 68

   46 F: OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS .

    $default  reduce using rule 46 (F)


State 69

   31 boolean_expr: boolean_expr EQUAL arithmetic_expr .

    $default  reduce using rule 31 (boolean_expr)


State 70

   32 boolean_expr: boolean_expr DIFFERENT arithmetic_expr .

    $default  reduce using rule 32 (boolean_expr)


State 71

   33 boolean_expr: boolean_expr LESS_OR_EQUAL arithmetic_expr .

    $default  reduce using rule 33 (boolean_expr)


State 72

   34 boolean_expr: boolean_expr LESS arithmetic_expr .

    $default  reduce using rule 34 (boolean_expr)


State 73

   35 boolean_expr: boolean_expr MORE_OR_EQUAL arithmetic_expr .

    $default  reduce using rule 35 (boolean_expr)


State 74

   36 boolean_expr: boolean_expr MORE arithmetic_expr .

    $default  reduce using rule 36 (boolean_expr)


State 75

   27 loop: WHILE $@6 boolean_expr $@7 DO . command

    T_BEGIN  shift, and go to state 20
    IDENT    shift, and go to state 25
    WHILE    shift, and go to state 26

    compound_command  go to state 27
    command           go to state 81
    loop              go to state 30
    assignment        go to state 31


State 76

   38 E: E PLUS T .
   41 T: T . ASTERISK F
   42  | T . DIV F

    DIV       shift, and go to state 64
    ASTERISK  shift, and go to state 65

    $default  reduce using rule 38 (E)


State 77

   39 E: E MINUS T .
   41 T: T . ASTERISK F
   42  | T . DIV F

    DIV       shift, and go to state 64
    ASTERISK  shift, and go to state 65

    $default  reduce using rule 39 (E)


State 78

   42 T: T DIV F .

    $default  reduce using rule 42 (T)


State 79

   41 T: T ASTERISK F .

    $default  reduce using rule 41 (T)


State 80

   13 declare_var: $@4 id_var_list COLON type $@5 SEMICOLON .

    $default  reduce using rule 13 (declare_var)


State 81

   27 loop: WHILE $@6 boolean_expr $@7 DO command .

    $default  reduce using rule 27 (loop)
