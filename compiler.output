Terminals unused in grammar

    LABEL
    TYPE
    ARRAY
    OF
    GOTO
    OR
    AND
    NOT


State 136 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 $@1: ε

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    3 block: declaring_vars_block declaring_procedures_block compound_command

    4 $@2: ε

    5 declaring_vars_block: VAR $@2 declare_vars
    6                     | ε

    7 declare_vars: declare_vars declare_var
    8             | declare_var

    9 $@3: ε

   10 $@4: ε

   11 declare_var: $@3 id_simple_var_list COLON type $@4 SEMICOLON

   12 type: IDENT

   13 id_simple_var_list: id_simple_var_list COMMA IDENT
   14                   | IDENT

   15 idents_list: idents_list COMMA IDENT
   16            | IDENT

   17 declaring_procedures_block: procedures
   18                           | ε

   19 procedures: procedures procedure_def
   20           | procedure_def

   21 $@5: ε

   22 $@6: ε

   23 procedure_def: PROCEDURE IDENT $@5 procedure_params SEMICOLON block $@6 SEMICOLON

   24 $@7: ε

   25 $@8: ε

   26 $@9: ε

   27 procedure_def: FUNCTION IDENT $@7 procedure_params COLON IDENT $@8 SEMICOLON block $@9 SEMICOLON

   28 $@10: ε

   29 $@11: ε

   30 procedure_params: OPEN_PARENTHESIS $@10 declare_params $@11 CLOSE_PARENTHESIS
   31                 | ε

   32 declare_params: declare_params declare_param
   33               | declare_param

   34 $@12: ε

   35 $@13: ε

   36 declare_param: by_reference_or_not $@12 id_param_list COLON type $@13 optional_semicolon

   37 by_reference_or_not: VAR
   38                    | ε

   39 id_param_list: id_param_list COMMA IDENT
   40              | IDENT

   41 optional_semicolon: SEMICOLON
   42                   | ε

   43 compound_command: T_BEGIN commands T_END

   44 commands: commands SEMICOLON command
   45         | command

   46 $@14: ε

   47 command: IDENT $@14 starts_with_ident
   48        | loop
   49        | conditional
   50        | read
   51        | write
   52        | compound_command

   53 starts_with_ident: procedure_call
   54                  | assignment_operation

   55 $@15: ε

   56 procedure_call: $@15 OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS

   57 procedure_arguments: args_list

   58 args_list: args_list COMMA ARGUMENT
   59          | ARGUMENT

   60 ARGUMENT: IDENT
   61         | boolean_expr

   62 read: READ OPEN_PARENTHESIS read_ident_list CLOSE_PARENTHESIS

   63 read_ident_list: read_ident_list COMMA IDENT
   64                | IDENT

   65 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS

   66 write_boolean_expr_list: write_boolean_expr_list COMMA boolean_expr
   67                        | boolean_expr

   68 $@16: ε

   69 $@17: ε

   70 loop: WHILE $@16 boolean_expr $@17 DO command

   71 conditional: if_then cond_else

   72 $@18: ε

   73 if_then: IF boolean_expr $@18 THEN command

   74 $@19: ε

   75 cond_else: ELSE $@19 command
   76          | ε

   77 $@20: ε

   78 assignment_operation: $@20 ASSIGNMENT boolean_expr

   79 boolean_expr: arithmetic_expr
   80             | boolean_expr EQUAL arithmetic_expr
   81             | boolean_expr DIFFERENT arithmetic_expr
   82             | boolean_expr LESS_OR_EQUAL arithmetic_expr
   83             | boolean_expr LESS arithmetic_expr
   84             | boolean_expr MORE_OR_EQUAL arithmetic_expr
   85             | boolean_expr MORE arithmetic_expr

   86 arithmetic_expr: E

   87 E: E PLUS T
   88  | E MINUS T
   89  | T

   90 T: T ASTERISK F
   91  | T DIV F
   92  | F

   93 F: NUMBER

   94 $@21: ε

   95 F: IDENT $@21 IDENT_CONTINUES
   96  | OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS

   97 IDENT_CONTINUES: ε

   98 $@22: ε

   99 IDENT_CONTINUES: $@22 procedure_call


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 2
    OPEN_PARENTHESIS (259) 2 30 56 62 65 96
    CLOSE_PARENTHESIS (260) 2 30 56 62 65 96
    COMMA (261) 13 15 39 58 63 66
    SEMICOLON (262) 2 11 23 27 41 44
    COLON (263) 11 27 36
    DOT (264) 2
    T_BEGIN (265) 43
    T_END (266) 43
    VAR (267) 5 37
    IDENT (268) 2 12 13 14 15 16 23 27 39 40 47 60 63 64 95
    ASSIGNMENT (269) 78
    LABEL (270)
    TYPE (271)
    ARRAY (272)
    OF (273)
    PROCEDURE (274) 23
    FUNCTION (275) 27
    GOTO (276)
    IF (277) 73
    THEN (278) 73
    ELSE (279) 75
    WHILE (280) 70
    DO (281) 70
    OR (282)
    AND (283)
    NOT (284)
    DIV (285) 91
    ASTERISK (286) 90
    PLUS (287) 87
    MINUS (288) 88
    EQUAL (289) 80
    DIFFERENT (290) 81
    LESS_OR_EQUAL (291) 82
    LESS (292) 83
    MORE_OR_EQUAL (293) 84
    MORE (294) 85
    NUMBER (295) 93
    READ (296) 62
    WRITE (297) 65
    LOWER_THAN_ELSE (298)


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    program (45)
        on left: 2
        on right: 0
    $@1 (46)
        on left: 1
        on right: 2
    block (47)
        on left: 3
        on right: 2 23 27
    declaring_vars_block (48)
        on left: 5 6
        on right: 3
    $@2 (49)
        on left: 4
        on right: 5
    declare_vars (50)
        on left: 7 8
        on right: 5 7
    declare_var (51)
        on left: 11
        on right: 7 8
    $@3 (52)
        on left: 9
        on right: 11
    $@4 (53)
        on left: 10
        on right: 11
    type (54)
        on left: 12
        on right: 11 36
    id_simple_var_list (55)
        on left: 13 14
        on right: 11 13
    idents_list (56)
        on left: 15 16
        on right: 2 15
    declaring_procedures_block (57)
        on left: 17 18
        on right: 3
    procedures (58)
        on left: 19 20
        on right: 17 19
    procedure_def (59)
        on left: 23 27
        on right: 19 20
    $@5 (60)
        on left: 21
        on right: 23
    $@6 (61)
        on left: 22
        on right: 23
    $@7 (62)
        on left: 24
        on right: 27
    $@8 (63)
        on left: 25
        on right: 27
    $@9 (64)
        on left: 26
        on right: 27
    procedure_params (65)
        on left: 30 31
        on right: 23 27
    $@10 (66)
        on left: 28
        on right: 30
    $@11 (67)
        on left: 29
        on right: 30
    declare_params (68)
        on left: 32 33
        on right: 30 32
    declare_param (69)
        on left: 36
        on right: 32 33
    $@12 (70)
        on left: 34
        on right: 36
    $@13 (71)
        on left: 35
        on right: 36
    by_reference_or_not (72)
        on left: 37 38
        on right: 36
    id_param_list (73)
        on left: 39 40
        on right: 36 39
    optional_semicolon (74)
        on left: 41 42
        on right: 36
    compound_command (75)
        on left: 43
        on right: 3 52
    commands (76)
        on left: 44 45
        on right: 43 44
    command (77)
        on left: 47 48 49 50 51 52
        on right: 44 45 70 73 75
    $@14 (78)
        on left: 46
        on right: 47
    starts_with_ident (79)
        on left: 53 54
        on right: 47
    procedure_call (80)
        on left: 56
        on right: 53 99
    $@15 (81)
        on left: 55
        on right: 56
    procedure_arguments (82)
        on left: 57
        on right: 56
    args_list (83)
        on left: 58 59
        on right: 57 58
    ARGUMENT (84)
        on left: 60 61
        on right: 58 59
    read (85)
        on left: 62
        on right: 50
    read_ident_list (86)
        on left: 63 64
        on right: 62 63
    write (87)
        on left: 65
        on right: 51
    write_boolean_expr_list (88)
        on left: 66 67
        on right: 65 66
    loop (89)
        on left: 70
        on right: 48
    $@16 (90)
        on left: 68
        on right: 70
    $@17 (91)
        on left: 69
        on right: 70
    conditional (92)
        on left: 71
        on right: 49
    if_then (93)
        on left: 73
        on right: 71
    $@18 (94)
        on left: 72
        on right: 73
    cond_else (95)
        on left: 75 76
        on right: 71
    $@19 (96)
        on left: 74
        on right: 75
    assignment_operation (97)
        on left: 78
        on right: 54
    $@20 (98)
        on left: 77
        on right: 78
    boolean_expr (99)
        on left: 79 80 81 82 83 84 85
        on right: 61 66 67 70 73 78 80 81 82 83 84 85 96
    arithmetic_expr (100)
        on left: 86
        on right: 79 80 81 82 83 84 85
    E (101)
        on left: 87 88 89
        on right: 86 87 88
    T (102)
        on left: 90 91 92
        on right: 87 88 89 90 91
    F (103)
        on left: 93 95 96
        on right: 90 91 92
    $@21 (104)
        on left: 94
        on right: 95
    IDENT_CONTINUES (105)
        on left: 97 99
        on right: 95
    $@22 (106)
        on left: 98
        on right: 99


State 0

    0 $accept: • program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 • PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end •

    $default  accept


State 4

    2 program: $@1 PROGRAM • IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 5


State 5

    2 program: $@1 PROGRAM IDENT • OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    OPEN_PARENTHESIS  shift, and go to state 6


State 6

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS • idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 7

    idents_list  go to state 8


State 7

   16 idents_list: IDENT •

    $default  reduce using rule 16 (idents_list)


State 8

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list • CLOSE_PARENTHESIS SEMICOLON block DOT
   15 idents_list: idents_list • COMMA IDENT

    CLOSE_PARENTHESIS  shift, and go to state 9
    COMMA              shift, and go to state 10


State 9

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS • SEMICOLON block DOT

    SEMICOLON  shift, and go to state 11


State 10

   15 idents_list: idents_list COMMA • IDENT

    IDENT  shift, and go to state 12


State 11

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON • block DOT

    VAR  shift, and go to state 13

    T_BEGIN    reduce using rule 6 (declaring_vars_block)
    PROCEDURE  reduce using rule 6 (declaring_vars_block)
    FUNCTION   reduce using rule 6 (declaring_vars_block)

    block                 go to state 14
    declaring_vars_block  go to state 15


State 12

   15 idents_list: idents_list COMMA IDENT •

    $default  reduce using rule 15 (idents_list)


State 13

    5 declaring_vars_block: VAR • $@2 declare_vars

    $default  reduce using rule 4 ($@2)

    $@2  go to state 16


State 14

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block • DOT

    DOT  shift, and go to state 17


State 15

    3 block: declaring_vars_block • declaring_procedures_block compound_command

    PROCEDURE  shift, and go to state 18
    FUNCTION   shift, and go to state 19

    T_BEGIN  reduce using rule 18 (declaring_procedures_block)

    declaring_procedures_block  go to state 20
    procedures                  go to state 21
    procedure_def               go to state 22


State 16

    5 declaring_vars_block: VAR $@2 • declare_vars

    $default  reduce using rule 9 ($@3)

    declare_vars  go to state 23
    declare_var   go to state 24
    $@3           go to state 25


State 17

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT •

    $default  reduce using rule 2 (program)


State 18

   23 procedure_def: PROCEDURE • IDENT $@5 procedure_params SEMICOLON block $@6 SEMICOLON

    IDENT  shift, and go to state 26


State 19

   27 procedure_def: FUNCTION • IDENT $@7 procedure_params COLON IDENT $@8 SEMICOLON block $@9 SEMICOLON

    IDENT  shift, and go to state 27


State 20

    3 block: declaring_vars_block declaring_procedures_block • compound_command

    T_BEGIN  shift, and go to state 28

    compound_command  go to state 29


State 21

   17 declaring_procedures_block: procedures •
   19 procedures: procedures • procedure_def

    PROCEDURE  shift, and go to state 18
    FUNCTION   shift, and go to state 19

    T_BEGIN  reduce using rule 17 (declaring_procedures_block)

    procedure_def  go to state 30


State 22

   20 procedures: procedure_def •

    $default  reduce using rule 20 (procedures)


State 23

    5 declaring_vars_block: VAR $@2 declare_vars •
    7 declare_vars: declare_vars • declare_var

    T_BEGIN    reduce using rule 5 (declaring_vars_block)
    IDENT      reduce using rule 9 ($@3)
    PROCEDURE  reduce using rule 5 (declaring_vars_block)
    FUNCTION   reduce using rule 5 (declaring_vars_block)

    declare_var  go to state 31
    $@3          go to state 25


State 24

    8 declare_vars: declare_var •

    $default  reduce using rule 8 (declare_vars)


State 25

   11 declare_var: $@3 • id_simple_var_list COLON type $@4 SEMICOLON

    IDENT  shift, and go to state 32

    id_simple_var_list  go to state 33


State 26

   23 procedure_def: PROCEDURE IDENT • $@5 procedure_params SEMICOLON block $@6 SEMICOLON

    $default  reduce using rule 21 ($@5)

    $@5  go to state 34


State 27

   27 procedure_def: FUNCTION IDENT • $@7 procedure_params COLON IDENT $@8 SEMICOLON block $@9 SEMICOLON

    $default  reduce using rule 24 ($@7)

    $@7  go to state 35


State 28

   43 compound_command: T_BEGIN • commands T_END

    T_BEGIN  shift, and go to state 28
    IDENT    shift, and go to state 36
    IF       shift, and go to state 37
    WHILE    shift, and go to state 38
    READ     shift, and go to state 39
    WRITE    shift, and go to state 40

    compound_command  go to state 41
    commands          go to state 42
    command           go to state 43
    read              go to state 44
    write             go to state 45
    loop              go to state 46
    conditional       go to state 47
    if_then           go to state 48


State 29

    3 block: declaring_vars_block declaring_procedures_block compound_command •

    $default  reduce using rule 3 (block)


State 30

   19 procedures: procedures procedure_def •

    $default  reduce using rule 19 (procedures)


State 31

    7 declare_vars: declare_vars declare_var •

    $default  reduce using rule 7 (declare_vars)


State 32

   14 id_simple_var_list: IDENT •

    $default  reduce using rule 14 (id_simple_var_list)


State 33

   11 declare_var: $@3 id_simple_var_list • COLON type $@4 SEMICOLON
   13 id_simple_var_list: id_simple_var_list • COMMA IDENT

    COMMA  shift, and go to state 49
    COLON  shift, and go to state 50


State 34

   23 procedure_def: PROCEDURE IDENT $@5 • procedure_params SEMICOLON block $@6 SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 51

    SEMICOLON  reduce using rule 31 (procedure_params)

    procedure_params  go to state 52


State 35

   27 procedure_def: FUNCTION IDENT $@7 • procedure_params COLON IDENT $@8 SEMICOLON block $@9 SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 51

    COLON  reduce using rule 31 (procedure_params)

    procedure_params  go to state 53


State 36

   47 command: IDENT • $@14 starts_with_ident

    $default  reduce using rule 46 ($@14)

    $@14  go to state 54


State 37

   73 if_then: IF • boolean_expr $@18 THEN command

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr     go to state 58
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 38

   70 loop: WHILE • $@16 boolean_expr $@17 DO command

    $default  reduce using rule 68 ($@16)

    $@16  go to state 63


State 39

   62 read: READ • OPEN_PARENTHESIS read_ident_list CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 64


State 40

   65 write: WRITE • OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 65


State 41

   52 command: compound_command •

    $default  reduce using rule 52 (command)


State 42

   43 compound_command: T_BEGIN commands • T_END
   44 commands: commands • SEMICOLON command

    SEMICOLON  shift, and go to state 66
    T_END      shift, and go to state 67


State 43

   45 commands: command •

    $default  reduce using rule 45 (commands)


State 44

   50 command: read •

    $default  reduce using rule 50 (command)


State 45

   51 command: write •

    $default  reduce using rule 51 (command)


State 46

   48 command: loop •

    $default  reduce using rule 48 (command)


State 47

   49 command: conditional •

    $default  reduce using rule 49 (command)


State 48

   71 conditional: if_then • cond_else

    ELSE  shift, and go to state 68

    SEMICOLON  reduce using rule 76 (cond_else)
    T_END      reduce using rule 76 (cond_else)

    cond_else  go to state 69


State 49

   13 id_simple_var_list: id_simple_var_list COMMA • IDENT

    IDENT  shift, and go to state 70


State 50

   11 declare_var: $@3 id_simple_var_list COLON • type $@4 SEMICOLON

    IDENT  shift, and go to state 71

    type  go to state 72


State 51

   30 procedure_params: OPEN_PARENTHESIS • $@10 declare_params $@11 CLOSE_PARENTHESIS

    $default  reduce using rule 28 ($@10)

    $@10  go to state 73


State 52

   23 procedure_def: PROCEDURE IDENT $@5 procedure_params • SEMICOLON block $@6 SEMICOLON

    SEMICOLON  shift, and go to state 74


State 53

   27 procedure_def: FUNCTION IDENT $@7 procedure_params • COLON IDENT $@8 SEMICOLON block $@9 SEMICOLON

    COLON  shift, and go to state 75


State 54

   47 command: IDENT $@14 • starts_with_ident

    OPEN_PARENTHESIS  reduce using rule 55 ($@15)
    ASSIGNMENT        reduce using rule 77 ($@20)

    starts_with_ident     go to state 76
    procedure_call        go to state 77
    $@15                  go to state 78
    assignment_operation  go to state 79
    $@20                  go to state 80


State 55

   96 F: OPEN_PARENTHESIS • boolean_expr CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr     go to state 81
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 56

   95 F: IDENT • $@21 IDENT_CONTINUES

    $default  reduce using rule 94 ($@21)

    $@21  go to state 82


State 57

   93 F: NUMBER •

    $default  reduce using rule 93 (F)


State 58

   73 if_then: IF boolean_expr • $@18 THEN command
   80 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   81             | boolean_expr • DIFFERENT arithmetic_expr
   82             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   83             | boolean_expr • LESS arithmetic_expr
   84             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   85             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    LESS_OR_EQUAL  shift, and go to state 85
    LESS           shift, and go to state 86
    MORE_OR_EQUAL  shift, and go to state 87
    MORE           shift, and go to state 88

    THEN  reduce using rule 72 ($@18)

    $@18  go to state 89


State 59

   79 boolean_expr: arithmetic_expr •

    $default  reduce using rule 79 (boolean_expr)


State 60

   86 arithmetic_expr: E •
   87 E: E • PLUS T
   88  | E • MINUS T

    PLUS   shift, and go to state 90
    MINUS  shift, and go to state 91

    CLOSE_PARENTHESIS  reduce using rule 86 (arithmetic_expr)
    COMMA              reduce using rule 86 (arithmetic_expr)
    SEMICOLON          reduce using rule 86 (arithmetic_expr)
    T_END              reduce using rule 86 (arithmetic_expr)
    THEN               reduce using rule 86 (arithmetic_expr)
    ELSE               reduce using rule 86 (arithmetic_expr)
    DO                 reduce using rule 86 (arithmetic_expr)
    EQUAL              reduce using rule 86 (arithmetic_expr)
    DIFFERENT          reduce using rule 86 (arithmetic_expr)
    LESS_OR_EQUAL      reduce using rule 86 (arithmetic_expr)
    LESS               reduce using rule 86 (arithmetic_expr)
    MORE_OR_EQUAL      reduce using rule 86 (arithmetic_expr)
    MORE               reduce using rule 86 (arithmetic_expr)


State 61

   89 E: T •
   90 T: T • ASTERISK F
   91  | T • DIV F

    DIV       shift, and go to state 92
    ASTERISK  shift, and go to state 93

    CLOSE_PARENTHESIS  reduce using rule 89 (E)
    COMMA              reduce using rule 89 (E)
    SEMICOLON          reduce using rule 89 (E)
    T_END              reduce using rule 89 (E)
    THEN               reduce using rule 89 (E)
    ELSE               reduce using rule 89 (E)
    DO                 reduce using rule 89 (E)
    PLUS               reduce using rule 89 (E)
    MINUS              reduce using rule 89 (E)
    EQUAL              reduce using rule 89 (E)
    DIFFERENT          reduce using rule 89 (E)
    LESS_OR_EQUAL      reduce using rule 89 (E)
    LESS               reduce using rule 89 (E)
    MORE_OR_EQUAL      reduce using rule 89 (E)
    MORE               reduce using rule 89 (E)


State 62

   92 T: F •

    $default  reduce using rule 92 (T)


State 63

   70 loop: WHILE $@16 • boolean_expr $@17 DO command

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr     go to state 94
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 64

   62 read: READ OPEN_PARENTHESIS • read_ident_list CLOSE_PARENTHESIS

    IDENT  shift, and go to state 95

    read_ident_list  go to state 96


State 65

   65 write: WRITE OPEN_PARENTHESIS • write_boolean_expr_list CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    write_boolean_expr_list  go to state 97
    boolean_expr             go to state 98
    arithmetic_expr          go to state 59
    E                        go to state 60
    T                        go to state 61
    F                        go to state 62


State 66

   44 commands: commands SEMICOLON • command

    T_BEGIN  shift, and go to state 28
    IDENT    shift, and go to state 36
    IF       shift, and go to state 37
    WHILE    shift, and go to state 38
    READ     shift, and go to state 39
    WRITE    shift, and go to state 40

    compound_command  go to state 41
    command           go to state 99
    read              go to state 44
    write             go to state 45
    loop              go to state 46
    conditional       go to state 47
    if_then           go to state 48


State 67

   43 compound_command: T_BEGIN commands T_END •

    $default  reduce using rule 43 (compound_command)


State 68

   75 cond_else: ELSE • $@19 command

    $default  reduce using rule 74 ($@19)

    $@19  go to state 100


State 69

   71 conditional: if_then cond_else •

    $default  reduce using rule 71 (conditional)


State 70

   13 id_simple_var_list: id_simple_var_list COMMA IDENT •

    $default  reduce using rule 13 (id_simple_var_list)


State 71

   12 type: IDENT •

    $default  reduce using rule 12 (type)


State 72

   11 declare_var: $@3 id_simple_var_list COLON type • $@4 SEMICOLON

    $default  reduce using rule 10 ($@4)

    $@4  go to state 101


State 73

   30 procedure_params: OPEN_PARENTHESIS $@10 • declare_params $@11 CLOSE_PARENTHESIS

    VAR  shift, and go to state 102

    IDENT  reduce using rule 38 (by_reference_or_not)

    declare_params       go to state 103
    declare_param        go to state 104
    by_reference_or_not  go to state 105


State 74

   23 procedure_def: PROCEDURE IDENT $@5 procedure_params SEMICOLON • block $@6 SEMICOLON

    VAR  shift, and go to state 13

    T_BEGIN    reduce using rule 6 (declaring_vars_block)
    PROCEDURE  reduce using rule 6 (declaring_vars_block)
    FUNCTION   reduce using rule 6 (declaring_vars_block)

    block                 go to state 106
    declaring_vars_block  go to state 15


State 75

   27 procedure_def: FUNCTION IDENT $@7 procedure_params COLON • IDENT $@8 SEMICOLON block $@9 SEMICOLON

    IDENT  shift, and go to state 107


State 76

   47 command: IDENT $@14 starts_with_ident •

    $default  reduce using rule 47 (command)


State 77

   53 starts_with_ident: procedure_call •

    $default  reduce using rule 53 (starts_with_ident)


State 78

   56 procedure_call: $@15 • OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 108


State 79

   54 starts_with_ident: assignment_operation •

    $default  reduce using rule 54 (starts_with_ident)


State 80

   78 assignment_operation: $@20 • ASSIGNMENT boolean_expr

    ASSIGNMENT  shift, and go to state 109


State 81

   80 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   81             | boolean_expr • DIFFERENT arithmetic_expr
   82             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   83             | boolean_expr • LESS arithmetic_expr
   84             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   85             | boolean_expr • MORE arithmetic_expr
   96 F: OPEN_PARENTHESIS boolean_expr • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 110
    EQUAL              shift, and go to state 83
    DIFFERENT          shift, and go to state 84
    LESS_OR_EQUAL      shift, and go to state 85
    LESS               shift, and go to state 86
    MORE_OR_EQUAL      shift, and go to state 87
    MORE               shift, and go to state 88


State 82

   95 F: IDENT $@21 • IDENT_CONTINUES

    OPEN_PARENTHESIS   reduce using rule 98 ($@22)
    CLOSE_PARENTHESIS  reduce using rule 97 (IDENT_CONTINUES)
    COMMA              reduce using rule 97 (IDENT_CONTINUES)
    SEMICOLON          reduce using rule 97 (IDENT_CONTINUES)
    T_END              reduce using rule 97 (IDENT_CONTINUES)
    THEN               reduce using rule 97 (IDENT_CONTINUES)
    ELSE               reduce using rule 97 (IDENT_CONTINUES)
    DO                 reduce using rule 97 (IDENT_CONTINUES)
    DIV                reduce using rule 97 (IDENT_CONTINUES)
    ASTERISK           reduce using rule 97 (IDENT_CONTINUES)
    PLUS               reduce using rule 97 (IDENT_CONTINUES)
    MINUS              reduce using rule 97 (IDENT_CONTINUES)
    EQUAL              reduce using rule 97 (IDENT_CONTINUES)
    DIFFERENT          reduce using rule 97 (IDENT_CONTINUES)
    LESS_OR_EQUAL      reduce using rule 97 (IDENT_CONTINUES)
    LESS               reduce using rule 97 (IDENT_CONTINUES)
    MORE_OR_EQUAL      reduce using rule 97 (IDENT_CONTINUES)
    MORE               reduce using rule 97 (IDENT_CONTINUES)

    IDENT_CONTINUES  go to state 111
    $@22             go to state 112


State 83

   80 boolean_expr: boolean_expr EQUAL • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 113
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 84

   81 boolean_expr: boolean_expr DIFFERENT • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 114
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 85

   82 boolean_expr: boolean_expr LESS_OR_EQUAL • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 115
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 86

   83 boolean_expr: boolean_expr LESS • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 116
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 87

   84 boolean_expr: boolean_expr MORE_OR_EQUAL • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 117
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 88

   85 boolean_expr: boolean_expr MORE • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 118
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 89

   73 if_then: IF boolean_expr $@18 • THEN command

    THEN  shift, and go to state 119


State 90

   87 E: E PLUS • T

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    T  go to state 120
    F  go to state 62


State 91

   88 E: E MINUS • T

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    T  go to state 121
    F  go to state 62


State 92

   91 T: T DIV • F

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    F  go to state 122


State 93

   90 T: T ASTERISK • F

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    F  go to state 123


State 94

   70 loop: WHILE $@16 boolean_expr • $@17 DO command
   80 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   81             | boolean_expr • DIFFERENT arithmetic_expr
   82             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   83             | boolean_expr • LESS arithmetic_expr
   84             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   85             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    LESS_OR_EQUAL  shift, and go to state 85
    LESS           shift, and go to state 86
    MORE_OR_EQUAL  shift, and go to state 87
    MORE           shift, and go to state 88

    DO  reduce using rule 69 ($@17)

    $@17  go to state 124


State 95

   64 read_ident_list: IDENT •

    $default  reduce using rule 64 (read_ident_list)


State 96

   62 read: READ OPEN_PARENTHESIS read_ident_list • CLOSE_PARENTHESIS
   63 read_ident_list: read_ident_list • COMMA IDENT

    CLOSE_PARENTHESIS  shift, and go to state 125
    COMMA              shift, and go to state 126


State 97

   65 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list • CLOSE_PARENTHESIS
   66 write_boolean_expr_list: write_boolean_expr_list • COMMA boolean_expr

    CLOSE_PARENTHESIS  shift, and go to state 127
    COMMA              shift, and go to state 128


State 98

   67 write_boolean_expr_list: boolean_expr •
   80 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   81             | boolean_expr • DIFFERENT arithmetic_expr
   82             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   83             | boolean_expr • LESS arithmetic_expr
   84             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   85             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    LESS_OR_EQUAL  shift, and go to state 85
    LESS           shift, and go to state 86
    MORE_OR_EQUAL  shift, and go to state 87
    MORE           shift, and go to state 88

    CLOSE_PARENTHESIS  reduce using rule 67 (write_boolean_expr_list)
    COMMA              reduce using rule 67 (write_boolean_expr_list)


State 99

   44 commands: commands SEMICOLON command •

    $default  reduce using rule 44 (commands)


State 100

   75 cond_else: ELSE $@19 • command

    T_BEGIN  shift, and go to state 28
    IDENT    shift, and go to state 36
    IF       shift, and go to state 37
    WHILE    shift, and go to state 38
    READ     shift, and go to state 39
    WRITE    shift, and go to state 40

    compound_command  go to state 41
    command           go to state 129
    read              go to state 44
    write             go to state 45
    loop              go to state 46
    conditional       go to state 47
    if_then           go to state 48


State 101

   11 declare_var: $@3 id_simple_var_list COLON type $@4 • SEMICOLON

    SEMICOLON  shift, and go to state 130


State 102

   37 by_reference_or_not: VAR •

    $default  reduce using rule 37 (by_reference_or_not)


State 103

   30 procedure_params: OPEN_PARENTHESIS $@10 declare_params • $@11 CLOSE_PARENTHESIS
   32 declare_params: declare_params • declare_param

    VAR  shift, and go to state 102

    CLOSE_PARENTHESIS  reduce using rule 29 ($@11)
    IDENT              reduce using rule 38 (by_reference_or_not)

    $@11                 go to state 131
    declare_param        go to state 132
    by_reference_or_not  go to state 105


State 104

   33 declare_params: declare_param •

    $default  reduce using rule 33 (declare_params)


State 105

   36 declare_param: by_reference_or_not • $@12 id_param_list COLON type $@13 optional_semicolon

    $default  reduce using rule 34 ($@12)

    $@12  go to state 133


State 106

   23 procedure_def: PROCEDURE IDENT $@5 procedure_params SEMICOLON block • $@6 SEMICOLON

    $default  reduce using rule 22 ($@6)

    $@6  go to state 134


State 107

   27 procedure_def: FUNCTION IDENT $@7 procedure_params COLON IDENT • $@8 SEMICOLON block $@9 SEMICOLON

    $default  reduce using rule 25 ($@8)

    $@8  go to state 135


State 108

   56 procedure_call: $@15 OPEN_PARENTHESIS • procedure_arguments CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 136
    NUMBER            shift, and go to state 57

    procedure_arguments  go to state 137
    args_list            go to state 138
    ARGUMENT             go to state 139
    boolean_expr         go to state 140
    arithmetic_expr      go to state 59
    E                    go to state 60
    T                    go to state 61
    F                    go to state 62


State 109

   78 assignment_operation: $@20 ASSIGNMENT • boolean_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr     go to state 141
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 110

   96 F: OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS •

    $default  reduce using rule 96 (F)


State 111

   95 F: IDENT $@21 IDENT_CONTINUES •

    $default  reduce using rule 95 (F)


State 112

   99 IDENT_CONTINUES: $@22 • procedure_call

    $default  reduce using rule 55 ($@15)

    procedure_call  go to state 142
    $@15            go to state 78


State 113

   80 boolean_expr: boolean_expr EQUAL arithmetic_expr •

    $default  reduce using rule 80 (boolean_expr)


State 114

   81 boolean_expr: boolean_expr DIFFERENT arithmetic_expr •

    $default  reduce using rule 81 (boolean_expr)


State 115

   82 boolean_expr: boolean_expr LESS_OR_EQUAL arithmetic_expr •

    $default  reduce using rule 82 (boolean_expr)


State 116

   83 boolean_expr: boolean_expr LESS arithmetic_expr •

    $default  reduce using rule 83 (boolean_expr)


State 117

   84 boolean_expr: boolean_expr MORE_OR_EQUAL arithmetic_expr •

    $default  reduce using rule 84 (boolean_expr)


State 118

   85 boolean_expr: boolean_expr MORE arithmetic_expr •

    $default  reduce using rule 85 (boolean_expr)


State 119

   73 if_then: IF boolean_expr $@18 THEN • command

    T_BEGIN  shift, and go to state 28
    IDENT    shift, and go to state 36
    IF       shift, and go to state 37
    WHILE    shift, and go to state 38
    READ     shift, and go to state 39
    WRITE    shift, and go to state 40

    compound_command  go to state 41
    command           go to state 143
    read              go to state 44
    write             go to state 45
    loop              go to state 46
    conditional       go to state 47
    if_then           go to state 48


State 120

   87 E: E PLUS T •
   90 T: T • ASTERISK F
   91  | T • DIV F

    DIV       shift, and go to state 92
    ASTERISK  shift, and go to state 93

    CLOSE_PARENTHESIS  reduce using rule 87 (E)
    COMMA              reduce using rule 87 (E)
    SEMICOLON          reduce using rule 87 (E)
    T_END              reduce using rule 87 (E)
    THEN               reduce using rule 87 (E)
    ELSE               reduce using rule 87 (E)
    DO                 reduce using rule 87 (E)
    PLUS               reduce using rule 87 (E)
    MINUS              reduce using rule 87 (E)
    EQUAL              reduce using rule 87 (E)
    DIFFERENT          reduce using rule 87 (E)
    LESS_OR_EQUAL      reduce using rule 87 (E)
    LESS               reduce using rule 87 (E)
    MORE_OR_EQUAL      reduce using rule 87 (E)
    MORE               reduce using rule 87 (E)


State 121

   88 E: E MINUS T •
   90 T: T • ASTERISK F
   91  | T • DIV F

    DIV       shift, and go to state 92
    ASTERISK  shift, and go to state 93

    CLOSE_PARENTHESIS  reduce using rule 88 (E)
    COMMA              reduce using rule 88 (E)
    SEMICOLON          reduce using rule 88 (E)
    T_END              reduce using rule 88 (E)
    THEN               reduce using rule 88 (E)
    ELSE               reduce using rule 88 (E)
    DO                 reduce using rule 88 (E)
    PLUS               reduce using rule 88 (E)
    MINUS              reduce using rule 88 (E)
    EQUAL              reduce using rule 88 (E)
    DIFFERENT          reduce using rule 88 (E)
    LESS_OR_EQUAL      reduce using rule 88 (E)
    LESS               reduce using rule 88 (E)
    MORE_OR_EQUAL      reduce using rule 88 (E)
    MORE               reduce using rule 88 (E)


State 122

   91 T: T DIV F •

    $default  reduce using rule 91 (T)


State 123

   90 T: T ASTERISK F •

    $default  reduce using rule 90 (T)


State 124

   70 loop: WHILE $@16 boolean_expr $@17 • DO command

    DO  shift, and go to state 144


State 125

   62 read: READ OPEN_PARENTHESIS read_ident_list CLOSE_PARENTHESIS •

    $default  reduce using rule 62 (read)


State 126

   63 read_ident_list: read_ident_list COMMA • IDENT

    IDENT  shift, and go to state 145


State 127

   65 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS •

    $default  reduce using rule 65 (write)


State 128

   66 write_boolean_expr_list: write_boolean_expr_list COMMA • boolean_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr     go to state 146
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 129

   75 cond_else: ELSE $@19 command •

    $default  reduce using rule 75 (cond_else)


State 130

   11 declare_var: $@3 id_simple_var_list COLON type $@4 SEMICOLON •

    $default  reduce using rule 11 (declare_var)


State 131

   30 procedure_params: OPEN_PARENTHESIS $@10 declare_params $@11 • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 147


State 132

   32 declare_params: declare_params declare_param •

    $default  reduce using rule 32 (declare_params)


State 133

   36 declare_param: by_reference_or_not $@12 • id_param_list COLON type $@13 optional_semicolon

    IDENT  shift, and go to state 148

    id_param_list  go to state 149


State 134

   23 procedure_def: PROCEDURE IDENT $@5 procedure_params SEMICOLON block $@6 • SEMICOLON

    SEMICOLON  shift, and go to state 150


State 135

   27 procedure_def: FUNCTION IDENT $@7 procedure_params COLON IDENT $@8 • SEMICOLON block $@9 SEMICOLON

    SEMICOLON  shift, and go to state 151


State 136

   60 ARGUMENT: IDENT •
   95 F: IDENT • $@21 IDENT_CONTINUES

    OPEN_PARENTHESIS   reduce using rule 94 ($@21)
    CLOSE_PARENTHESIS  reduce using rule 60 (ARGUMENT)
    CLOSE_PARENTHESIS  [reduce using rule 94 ($@21)]
    COMMA              reduce using rule 60 (ARGUMENT)
    COMMA              [reduce using rule 94 ($@21)]
    DIV                reduce using rule 94 ($@21)
    ASTERISK           reduce using rule 94 ($@21)
    PLUS               reduce using rule 94 ($@21)
    MINUS              reduce using rule 94 ($@21)
    EQUAL              reduce using rule 94 ($@21)
    DIFFERENT          reduce using rule 94 ($@21)
    LESS_OR_EQUAL      reduce using rule 94 ($@21)
    LESS               reduce using rule 94 ($@21)
    MORE_OR_EQUAL      reduce using rule 94 ($@21)
    MORE               reduce using rule 94 ($@21)

    $@21  go to state 82

    reduce/reduce conflict on tokens CLOSE_PARENTHESIS, COMMA:
       60 ARGUMENT: IDENT •
       94 $@21: ε •
      Example: IDENT •
      First reduce derivation
        ARGUMENT
        ↳ 60: IDENT •
      Second reduce derivation
        ARGUMENT
        ↳ 61: boolean_expr
              ↳ 79: arithmetic_expr
                    ↳ 86: E
                          ↳ 89: T
                                ↳ 92: F
                                      ↳ 95: IDENT $@21      IDENT_CONTINUES
                                                  ↳ 94: ε • ↳ 95: ε



State 137

   56 procedure_call: $@15 OPEN_PARENTHESIS procedure_arguments • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 152


State 138

   57 procedure_arguments: args_list •
   58 args_list: args_list • COMMA ARGUMENT

    COMMA  shift, and go to state 153

    CLOSE_PARENTHESIS  reduce using rule 57 (procedure_arguments)


State 139

   59 args_list: ARGUMENT •

    $default  reduce using rule 59 (args_list)


State 140

   61 ARGUMENT: boolean_expr •
   80 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   81             | boolean_expr • DIFFERENT arithmetic_expr
   82             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   83             | boolean_expr • LESS arithmetic_expr
   84             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   85             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    LESS_OR_EQUAL  shift, and go to state 85
    LESS           shift, and go to state 86
    MORE_OR_EQUAL  shift, and go to state 87
    MORE           shift, and go to state 88

    CLOSE_PARENTHESIS  reduce using rule 61 (ARGUMENT)
    COMMA              reduce using rule 61 (ARGUMENT)


State 141

   78 assignment_operation: $@20 ASSIGNMENT boolean_expr •
   80 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   81             | boolean_expr • DIFFERENT arithmetic_expr
   82             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   83             | boolean_expr • LESS arithmetic_expr
   84             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   85             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    LESS_OR_EQUAL  shift, and go to state 85
    LESS           shift, and go to state 86
    MORE_OR_EQUAL  shift, and go to state 87
    MORE           shift, and go to state 88

    SEMICOLON  reduce using rule 78 (assignment_operation)
    T_END      reduce using rule 78 (assignment_operation)
    ELSE       reduce using rule 78 (assignment_operation)


State 142

   99 IDENT_CONTINUES: $@22 procedure_call •

    $default  reduce using rule 99 (IDENT_CONTINUES)


State 143

   73 if_then: IF boolean_expr $@18 THEN command •

    $default  reduce using rule 73 (if_then)


State 144

   70 loop: WHILE $@16 boolean_expr $@17 DO • command

    T_BEGIN  shift, and go to state 28
    IDENT    shift, and go to state 36
    IF       shift, and go to state 37
    WHILE    shift, and go to state 38
    READ     shift, and go to state 39
    WRITE    shift, and go to state 40

    compound_command  go to state 41
    command           go to state 154
    read              go to state 44
    write             go to state 45
    loop              go to state 46
    conditional       go to state 47
    if_then           go to state 48


State 145

   63 read_ident_list: read_ident_list COMMA IDENT •

    $default  reduce using rule 63 (read_ident_list)


State 146

   66 write_boolean_expr_list: write_boolean_expr_list COMMA boolean_expr •
   80 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   81             | boolean_expr • DIFFERENT arithmetic_expr
   82             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   83             | boolean_expr • LESS arithmetic_expr
   84             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   85             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    LESS_OR_EQUAL  shift, and go to state 85
    LESS           shift, and go to state 86
    MORE_OR_EQUAL  shift, and go to state 87
    MORE           shift, and go to state 88

    CLOSE_PARENTHESIS  reduce using rule 66 (write_boolean_expr_list)
    COMMA              reduce using rule 66 (write_boolean_expr_list)


State 147

   30 procedure_params: OPEN_PARENTHESIS $@10 declare_params $@11 CLOSE_PARENTHESIS •

    $default  reduce using rule 30 (procedure_params)


State 148

   40 id_param_list: IDENT •

    $default  reduce using rule 40 (id_param_list)


State 149

   36 declare_param: by_reference_or_not $@12 id_param_list • COLON type $@13 optional_semicolon
   39 id_param_list: id_param_list • COMMA IDENT

    COMMA  shift, and go to state 155
    COLON  shift, and go to state 156


State 150

   23 procedure_def: PROCEDURE IDENT $@5 procedure_params SEMICOLON block $@6 SEMICOLON •

    $default  reduce using rule 23 (procedure_def)


State 151

   27 procedure_def: FUNCTION IDENT $@7 procedure_params COLON IDENT $@8 SEMICOLON • block $@9 SEMICOLON

    VAR  shift, and go to state 13

    T_BEGIN    reduce using rule 6 (declaring_vars_block)
    PROCEDURE  reduce using rule 6 (declaring_vars_block)
    FUNCTION   reduce using rule 6 (declaring_vars_block)

    block                 go to state 157
    declaring_vars_block  go to state 15


State 152

   56 procedure_call: $@15 OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS •

    $default  reduce using rule 56 (procedure_call)


State 153

   58 args_list: args_list COMMA • ARGUMENT

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 136
    NUMBER            shift, and go to state 57

    ARGUMENT         go to state 158
    boolean_expr     go to state 140
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 154

   70 loop: WHILE $@16 boolean_expr $@17 DO command •

    $default  reduce using rule 70 (loop)


State 155

   39 id_param_list: id_param_list COMMA • IDENT

    IDENT  shift, and go to state 159


State 156

   36 declare_param: by_reference_or_not $@12 id_param_list COLON • type $@13 optional_semicolon

    IDENT  shift, and go to state 71

    type  go to state 160


State 157

   27 procedure_def: FUNCTION IDENT $@7 procedure_params COLON IDENT $@8 SEMICOLON block • $@9 SEMICOLON

    $default  reduce using rule 26 ($@9)

    $@9  go to state 161


State 158

   58 args_list: args_list COMMA ARGUMENT •

    $default  reduce using rule 58 (args_list)


State 159

   39 id_param_list: id_param_list COMMA IDENT •

    $default  reduce using rule 39 (id_param_list)


State 160

   36 declare_param: by_reference_or_not $@12 id_param_list COLON type • $@13 optional_semicolon

    $default  reduce using rule 35 ($@13)

    $@13  go to state 162


State 161

   27 procedure_def: FUNCTION IDENT $@7 procedure_params COLON IDENT $@8 SEMICOLON block $@9 • SEMICOLON

    SEMICOLON  shift, and go to state 163


State 162

   36 declare_param: by_reference_or_not $@12 id_param_list COLON type $@13 • optional_semicolon

    SEMICOLON  shift, and go to state 164

    CLOSE_PARENTHESIS  reduce using rule 42 (optional_semicolon)
    VAR                reduce using rule 42 (optional_semicolon)
    IDENT              reduce using rule 42 (optional_semicolon)

    optional_semicolon  go to state 165


State 163

   27 procedure_def: FUNCTION IDENT $@7 procedure_params COLON IDENT $@8 SEMICOLON block $@9 SEMICOLON •

    $default  reduce using rule 27 (procedure_def)


State 164

   41 optional_semicolon: SEMICOLON •

    $default  reduce using rule 41 (optional_semicolon)


State 165

   36 declare_param: by_reference_or_not $@12 id_param_list COLON type $@13 optional_semicolon •

    $default  reduce using rule 36 (declare_param)
