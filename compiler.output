Terminals unused in grammar

    LABEL
    TYPE
    ARRAY
    OF
    PROCEDURE
    GOTO
    OR
    AND
    NOT


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    3 block: declaring_vars_block compound_command

    4 declaring_vars_block: VAR declare_vars
    5                     | %empty

    6 declare_vars: declare_vars declare_var
    7             | declare_var

    8 $@2: %empty

    9 $@3: %empty

   10 declare_var: $@2 id_var_list COLON type $@3 SEMICOLON

   11 type: IDENT

   12 id_var_list: id_var_list COMMA IDENT
   13            | IDENT

   14 idents_list: idents_list COMMA IDENT
   15            | IDENT

   16 compound_command: T_BEGIN commands T_END

   17 commands: commands command
   18         | command

   19 command: assignment
   20        | compound_command
   21        | loop
   22        | conditional
   23        | read
   24        | write

   25 $@4: %empty

   26 read: READ OPEN_PARENTHESIS IDENT $@4 CLOSE_PARENTHESIS SEMICOLON

   27 write: WRITE OPEN_PARENTHESIS boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

   28 boolean_expr_list: boolean_expr_list COMMA boolean_expr
   29                  | boolean_expr

   30 $@5: %empty

   31 $@6: %empty

   32 loop: WHILE $@5 boolean_expr $@6 DO command

   33 conditional: if_then cond_else

   34 $@7: %empty

   35 if_then: IF boolean_expr $@7 THEN command

   36 $@8: %empty

   37 cond_else: ELSE $@8 command
   38          | %empty

   39 $@9: %empty

   40 assignment: IDENT $@9 ASSIGNMENT boolean_expr SEMICOLON

   41 boolean_expr: arithmetic_expr
   42             | boolean_expr EQUAL arithmetic_expr
   43             | boolean_expr DIFFERENT arithmetic_expr
   44             | boolean_expr LESS_OR_EQUAL arithmetic_expr
   45             | boolean_expr LESS arithmetic_expr
   46             | boolean_expr MORE_OR_EQUAL arithmetic_expr
   47             | boolean_expr MORE arithmetic_expr

   48 arithmetic_expr: E

   49 E: E PLUS T
   50  | E MINUS T
   51  | T

   52 T: T ASTERISK F
   53  | T DIV F
   54  | F

   55 F: NUMBER
   56  | IDENT
   57  | OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 2
    OPEN_PARENTHESIS (259) 2 26 27 57
    CLOSE_PARENTHESIS (260) 2 26 27 57
    COMMA (261) 12 14 28
    SEMICOLON (262) 2 10 26 27 40
    COLON (263) 10
    DOT (264) 2
    T_BEGIN (265) 16
    T_END (266) 16
    VAR (267) 4
    IDENT (268) 2 11 12 13 14 15 26 40 56
    ASSIGNMENT (269) 40
    LABEL (270)
    TYPE (271)
    ARRAY (272)
    OF (273)
    PROCEDURE (274)
    GOTO (275)
    IF (276) 35
    THEN (277) 35
    ELSE (278) 37
    WHILE (279) 32
    DO (280) 32
    OR (281)
    AND (282)
    NOT (283)
    DIV (284) 53
    ASTERISK (285) 52
    PLUS (286) 49
    MINUS (287) 50
    EQUAL (288) 42
    DIFFERENT (289) 43
    LESS_OR_EQUAL (290) 44
    LESS (291) 45
    MORE_OR_EQUAL (292) 46
    MORE (293) 47
    NUMBER (294) 55
    READ (295) 26
    WRITE (296) 27
    LOWER_THAN_ELSE (297)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program (44)
        on left: 2
        on right: 0
    $@1 (45)
        on left: 1
        on right: 2
    block (46)
        on left: 3
        on right: 2
    declaring_vars_block (47)
        on left: 4 5
        on right: 3
    declare_vars (48)
        on left: 6 7
        on right: 4 6
    declare_var (49)
        on left: 10
        on right: 6 7
    $@2 (50)
        on left: 8
        on right: 10
    $@3 (51)
        on left: 9
        on right: 10
    type (52)
        on left: 11
        on right: 10
    id_var_list (53)
        on left: 12 13
        on right: 10 12
    idents_list (54)
        on left: 14 15
        on right: 2 14
    compound_command (55)
        on left: 16
        on right: 3 20
    commands (56)
        on left: 17 18
        on right: 16 17
    command (57)
        on left: 19 20 21 22 23 24
        on right: 17 18 32 35 37
    read (58)
        on left: 26
        on right: 23
    $@4 (59)
        on left: 25
        on right: 26
    write (60)
        on left: 27
        on right: 24
    boolean_expr_list (61)
        on left: 28 29
        on right: 27 28
    loop (62)
        on left: 32
        on right: 21
    $@5 (63)
        on left: 30
        on right: 32
    $@6 (64)
        on left: 31
        on right: 32
    conditional (65)
        on left: 33
        on right: 22
    if_then (66)
        on left: 35
        on right: 33
    $@7 (67)
        on left: 34
        on right: 35
    cond_else (68)
        on left: 37 38
        on right: 33
    $@8 (69)
        on left: 36
        on right: 37
    assignment (70)
        on left: 40
        on right: 19
    $@9 (71)
        on left: 39
        on right: 40
    boolean_expr (72)
        on left: 41 42 43 44 45 46 47
        on right: 28 29 32 35 40 42 43 44 45 46 47 57
    arithmetic_expr (73)
        on left: 48
        on right: 41 42 43 44 45 46 47
    E (74)
        on left: 49 50 51
        on right: 48 49 50
    T (75)
        on left: 52 53 54
        on right: 49 50 51 52 53
    F (76)
        on left: 55 56 57
        on right: 52 53 54


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 PROGRAM . IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 5


State 5

    2 program: $@1 PROGRAM IDENT . OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    OPEN_PARENTHESIS  shift, and go to state 6


State 6

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS . idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 7

    idents_list  go to state 8


State 7

   15 idents_list: IDENT .

    $default  reduce using rule 15 (idents_list)


State 8

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list . CLOSE_PARENTHESIS SEMICOLON block DOT
   14 idents_list: idents_list . COMMA IDENT

    CLOSE_PARENTHESIS  shift, and go to state 9
    COMMA              shift, and go to state 10


State 9

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS . SEMICOLON block DOT

    SEMICOLON  shift, and go to state 11


State 10

   14 idents_list: idents_list COMMA . IDENT

    IDENT  shift, and go to state 12


State 11

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON . block DOT

    VAR  shift, and go to state 13

    $default  reduce using rule 5 (declaring_vars_block)

    block                 go to state 14
    declaring_vars_block  go to state 15


State 12

   14 idents_list: idents_list COMMA IDENT .

    $default  reduce using rule 14 (idents_list)


State 13

    4 declaring_vars_block: VAR . declare_vars

    $default  reduce using rule 8 ($@2)

    declare_vars  go to state 16
    declare_var   go to state 17
    $@2           go to state 18


State 14

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block . DOT

    DOT  shift, and go to state 19


State 15

    3 block: declaring_vars_block . compound_command

    T_BEGIN  shift, and go to state 20

    compound_command  go to state 21


State 16

    4 declaring_vars_block: VAR declare_vars .
    6 declare_vars: declare_vars . declare_var

    IDENT     reduce using rule 8 ($@2)
    $default  reduce using rule 4 (declaring_vars_block)

    declare_var  go to state 22
    $@2          go to state 18


State 17

    7 declare_vars: declare_var .

    $default  reduce using rule 7 (declare_vars)


State 18

   10 declare_var: $@2 . id_var_list COLON type $@3 SEMICOLON

    IDENT  shift, and go to state 23

    id_var_list  go to state 24


State 19

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT .

    $default  reduce using rule 2 (program)


State 20

   16 compound_command: T_BEGIN . commands T_END

    T_BEGIN  shift, and go to state 20
    IDENT    shift, and go to state 25
    IF       shift, and go to state 26
    WHILE    shift, and go to state 27
    READ     shift, and go to state 28
    WRITE    shift, and go to state 29

    compound_command  go to state 30
    commands          go to state 31
    command           go to state 32
    read              go to state 33
    write             go to state 34
    loop              go to state 35
    conditional       go to state 36
    if_then           go to state 37
    assignment        go to state 38


State 21

    3 block: declaring_vars_block compound_command .

    $default  reduce using rule 3 (block)


State 22

    6 declare_vars: declare_vars declare_var .

    $default  reduce using rule 6 (declare_vars)


State 23

   13 id_var_list: IDENT .

    $default  reduce using rule 13 (id_var_list)


State 24

   10 declare_var: $@2 id_var_list . COLON type $@3 SEMICOLON
   12 id_var_list: id_var_list . COMMA IDENT

    COMMA  shift, and go to state 39
    COLON  shift, and go to state 40


State 25

   40 assignment: IDENT . $@9 ASSIGNMENT boolean_expr SEMICOLON

    $default  reduce using rule 39 ($@9)

    $@9  go to state 41


State 26

   35 if_then: IF . boolean_expr $@7 THEN command

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    boolean_expr     go to state 45
    arithmetic_expr  go to state 46
    E                go to state 47
    T                go to state 48
    F                go to state 49


State 27

   32 loop: WHILE . $@5 boolean_expr $@6 DO command

    $default  reduce using rule 30 ($@5)

    $@5  go to state 50


State 28

   26 read: READ . OPEN_PARENTHESIS IDENT $@4 CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 51


State 29

   27 write: WRITE . OPEN_PARENTHESIS boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 52


State 30

   20 command: compound_command .

    $default  reduce using rule 20 (command)


State 31

   16 compound_command: T_BEGIN commands . T_END
   17 commands: commands . command

    T_BEGIN  shift, and go to state 20
    T_END    shift, and go to state 53
    IDENT    shift, and go to state 25
    IF       shift, and go to state 26
    WHILE    shift, and go to state 27
    READ     shift, and go to state 28
    WRITE    shift, and go to state 29

    compound_command  go to state 30
    command           go to state 54
    read              go to state 33
    write             go to state 34
    loop              go to state 35
    conditional       go to state 36
    if_then           go to state 37
    assignment        go to state 38


State 32

   18 commands: command .

    $default  reduce using rule 18 (commands)


State 33

   23 command: read .

    $default  reduce using rule 23 (command)


State 34

   24 command: write .

    $default  reduce using rule 24 (command)


State 35

   21 command: loop .

    $default  reduce using rule 21 (command)


State 36

   22 command: conditional .

    $default  reduce using rule 22 (command)


State 37

   33 conditional: if_then . cond_else

    ELSE  shift, and go to state 55

    $default  reduce using rule 38 (cond_else)

    cond_else  go to state 56


State 38

   19 command: assignment .

    $default  reduce using rule 19 (command)


State 39

   12 id_var_list: id_var_list COMMA . IDENT

    IDENT  shift, and go to state 57


State 40

   10 declare_var: $@2 id_var_list COLON . type $@3 SEMICOLON

    IDENT  shift, and go to state 58

    type  go to state 59


State 41

   40 assignment: IDENT $@9 . ASSIGNMENT boolean_expr SEMICOLON

    ASSIGNMENT  shift, and go to state 60


State 42

   57 F: OPEN_PARENTHESIS . boolean_expr CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    boolean_expr     go to state 61
    arithmetic_expr  go to state 46
    E                go to state 47
    T                go to state 48
    F                go to state 49


State 43

   56 F: IDENT .

    $default  reduce using rule 56 (F)


State 44

   55 F: NUMBER .

    $default  reduce using rule 55 (F)


State 45

   35 if_then: IF boolean_expr . $@7 THEN command
   42 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   43             | boolean_expr . DIFFERENT arithmetic_expr
   44             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   45             | boolean_expr . LESS arithmetic_expr
   46             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   47             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 62
    DIFFERENT      shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    LESS           shift, and go to state 65
    MORE_OR_EQUAL  shift, and go to state 66
    MORE           shift, and go to state 67

    $default  reduce using rule 34 ($@7)

    $@7  go to state 68


State 46

   41 boolean_expr: arithmetic_expr .

    $default  reduce using rule 41 (boolean_expr)


State 47

   48 arithmetic_expr: E .
   49 E: E . PLUS T
   50  | E . MINUS T

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 48 (arithmetic_expr)


State 48

   51 E: T .
   52 T: T . ASTERISK F
   53  | T . DIV F

    DIV       shift, and go to state 71
    ASTERISK  shift, and go to state 72

    $default  reduce using rule 51 (E)


State 49

   54 T: F .

    $default  reduce using rule 54 (T)


State 50

   32 loop: WHILE $@5 . boolean_expr $@6 DO command

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    boolean_expr     go to state 73
    arithmetic_expr  go to state 46
    E                go to state 47
    T                go to state 48
    F                go to state 49


State 51

   26 read: READ OPEN_PARENTHESIS . IDENT $@4 CLOSE_PARENTHESIS SEMICOLON

    IDENT  shift, and go to state 74


State 52

   27 write: WRITE OPEN_PARENTHESIS . boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    boolean_expr_list  go to state 75
    boolean_expr       go to state 76
    arithmetic_expr    go to state 46
    E                  go to state 47
    T                  go to state 48
    F                  go to state 49


State 53

   16 compound_command: T_BEGIN commands T_END .

    $default  reduce using rule 16 (compound_command)


State 54

   17 commands: commands command .

    $default  reduce using rule 17 (commands)


State 55

   37 cond_else: ELSE . $@8 command

    $default  reduce using rule 36 ($@8)

    $@8  go to state 77


State 56

   33 conditional: if_then cond_else .

    $default  reduce using rule 33 (conditional)


State 57

   12 id_var_list: id_var_list COMMA IDENT .

    $default  reduce using rule 12 (id_var_list)


State 58

   11 type: IDENT .

    $default  reduce using rule 11 (type)


State 59

   10 declare_var: $@2 id_var_list COLON type . $@3 SEMICOLON

    $default  reduce using rule 9 ($@3)

    $@3  go to state 78


State 60

   40 assignment: IDENT $@9 ASSIGNMENT . boolean_expr SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    boolean_expr     go to state 79
    arithmetic_expr  go to state 46
    E                go to state 47
    T                go to state 48
    F                go to state 49


State 61

   42 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   43             | boolean_expr . DIFFERENT arithmetic_expr
   44             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   45             | boolean_expr . LESS arithmetic_expr
   46             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   47             | boolean_expr . MORE arithmetic_expr
   57 F: OPEN_PARENTHESIS boolean_expr . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 80
    EQUAL              shift, and go to state 62
    DIFFERENT          shift, and go to state 63
    LESS_OR_EQUAL      shift, and go to state 64
    LESS               shift, and go to state 65
    MORE_OR_EQUAL      shift, and go to state 66
    MORE               shift, and go to state 67


State 62

   42 boolean_expr: boolean_expr EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    arithmetic_expr  go to state 81
    E                go to state 47
    T                go to state 48
    F                go to state 49


State 63

   43 boolean_expr: boolean_expr DIFFERENT . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    arithmetic_expr  go to state 82
    E                go to state 47
    T                go to state 48
    F                go to state 49


State 64

   44 boolean_expr: boolean_expr LESS_OR_EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    arithmetic_expr  go to state 83
    E                go to state 47
    T                go to state 48
    F                go to state 49


State 65

   45 boolean_expr: boolean_expr LESS . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    arithmetic_expr  go to state 84
    E                go to state 47
    T                go to state 48
    F                go to state 49


State 66

   46 boolean_expr: boolean_expr MORE_OR_EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    arithmetic_expr  go to state 85
    E                go to state 47
    T                go to state 48
    F                go to state 49


State 67

   47 boolean_expr: boolean_expr MORE . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    arithmetic_expr  go to state 86
    E                go to state 47
    T                go to state 48
    F                go to state 49


State 68

   35 if_then: IF boolean_expr $@7 . THEN command

    THEN  shift, and go to state 87


State 69

   49 E: E PLUS . T

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    T  go to state 88
    F  go to state 49


State 70

   50 E: E MINUS . T

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    T  go to state 89
    F  go to state 49


State 71

   53 T: T DIV . F

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    F  go to state 90


State 72

   52 T: T ASTERISK . F

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    F  go to state 91


State 73

   32 loop: WHILE $@5 boolean_expr . $@6 DO command
   42 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   43             | boolean_expr . DIFFERENT arithmetic_expr
   44             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   45             | boolean_expr . LESS arithmetic_expr
   46             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   47             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 62
    DIFFERENT      shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    LESS           shift, and go to state 65
    MORE_OR_EQUAL  shift, and go to state 66
    MORE           shift, and go to state 67

    $default  reduce using rule 31 ($@6)

    $@6  go to state 92


State 74

   26 read: READ OPEN_PARENTHESIS IDENT . $@4 CLOSE_PARENTHESIS SEMICOLON

    $default  reduce using rule 25 ($@4)

    $@4  go to state 93


State 75

   27 write: WRITE OPEN_PARENTHESIS boolean_expr_list . CLOSE_PARENTHESIS SEMICOLON
   28 boolean_expr_list: boolean_expr_list . COMMA boolean_expr

    CLOSE_PARENTHESIS  shift, and go to state 94
    COMMA              shift, and go to state 95


State 76

   29 boolean_expr_list: boolean_expr .
   42 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   43             | boolean_expr . DIFFERENT arithmetic_expr
   44             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   45             | boolean_expr . LESS arithmetic_expr
   46             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   47             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 62
    DIFFERENT      shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    LESS           shift, and go to state 65
    MORE_OR_EQUAL  shift, and go to state 66
    MORE           shift, and go to state 67

    $default  reduce using rule 29 (boolean_expr_list)


State 77

   37 cond_else: ELSE $@8 . command

    T_BEGIN  shift, and go to state 20
    IDENT    shift, and go to state 25
    IF       shift, and go to state 26
    WHILE    shift, and go to state 27
    READ     shift, and go to state 28
    WRITE    shift, and go to state 29

    compound_command  go to state 30
    command           go to state 96
    read              go to state 33
    write             go to state 34
    loop              go to state 35
    conditional       go to state 36
    if_then           go to state 37
    assignment        go to state 38


State 78

   10 declare_var: $@2 id_var_list COLON type $@3 . SEMICOLON

    SEMICOLON  shift, and go to state 97


State 79

   40 assignment: IDENT $@9 ASSIGNMENT boolean_expr . SEMICOLON
   42 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   43             | boolean_expr . DIFFERENT arithmetic_expr
   44             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   45             | boolean_expr . LESS arithmetic_expr
   46             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   47             | boolean_expr . MORE arithmetic_expr

    SEMICOLON      shift, and go to state 98
    EQUAL          shift, and go to state 62
    DIFFERENT      shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    LESS           shift, and go to state 65
    MORE_OR_EQUAL  shift, and go to state 66
    MORE           shift, and go to state 67


State 80

   57 F: OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS .

    $default  reduce using rule 57 (F)


State 81

   42 boolean_expr: boolean_expr EQUAL arithmetic_expr .

    $default  reduce using rule 42 (boolean_expr)


State 82

   43 boolean_expr: boolean_expr DIFFERENT arithmetic_expr .

    $default  reduce using rule 43 (boolean_expr)


State 83

   44 boolean_expr: boolean_expr LESS_OR_EQUAL arithmetic_expr .

    $default  reduce using rule 44 (boolean_expr)


State 84

   45 boolean_expr: boolean_expr LESS arithmetic_expr .

    $default  reduce using rule 45 (boolean_expr)


State 85

   46 boolean_expr: boolean_expr MORE_OR_EQUAL arithmetic_expr .

    $default  reduce using rule 46 (boolean_expr)


State 86

   47 boolean_expr: boolean_expr MORE arithmetic_expr .

    $default  reduce using rule 47 (boolean_expr)


State 87

   35 if_then: IF boolean_expr $@7 THEN . command

    T_BEGIN  shift, and go to state 20
    IDENT    shift, and go to state 25
    IF       shift, and go to state 26
    WHILE    shift, and go to state 27
    READ     shift, and go to state 28
    WRITE    shift, and go to state 29

    compound_command  go to state 30
    command           go to state 99
    read              go to state 33
    write             go to state 34
    loop              go to state 35
    conditional       go to state 36
    if_then           go to state 37
    assignment        go to state 38


State 88

   49 E: E PLUS T .
   52 T: T . ASTERISK F
   53  | T . DIV F

    DIV       shift, and go to state 71
    ASTERISK  shift, and go to state 72

    $default  reduce using rule 49 (E)


State 89

   50 E: E MINUS T .
   52 T: T . ASTERISK F
   53  | T . DIV F

    DIV       shift, and go to state 71
    ASTERISK  shift, and go to state 72

    $default  reduce using rule 50 (E)


State 90

   53 T: T DIV F .

    $default  reduce using rule 53 (T)


State 91

   52 T: T ASTERISK F .

    $default  reduce using rule 52 (T)


State 92

   32 loop: WHILE $@5 boolean_expr $@6 . DO command

    DO  shift, and go to state 100


State 93

   26 read: READ OPEN_PARENTHESIS IDENT $@4 . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 101


State 94

   27 write: WRITE OPEN_PARENTHESIS boolean_expr_list CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 102


State 95

   28 boolean_expr_list: boolean_expr_list COMMA . boolean_expr

    OPEN_PARENTHESIS  shift, and go to state 42
    IDENT             shift, and go to state 43
    NUMBER            shift, and go to state 44

    boolean_expr     go to state 103
    arithmetic_expr  go to state 46
    E                go to state 47
    T                go to state 48
    F                go to state 49


State 96

   37 cond_else: ELSE $@8 command .

    $default  reduce using rule 37 (cond_else)


State 97

   10 declare_var: $@2 id_var_list COLON type $@3 SEMICOLON .

    $default  reduce using rule 10 (declare_var)


State 98

   40 assignment: IDENT $@9 ASSIGNMENT boolean_expr SEMICOLON .

    $default  reduce using rule 40 (assignment)


State 99

   35 if_then: IF boolean_expr $@7 THEN command .

    $default  reduce using rule 35 (if_then)


State 100

   32 loop: WHILE $@5 boolean_expr $@6 DO . command

    T_BEGIN  shift, and go to state 20
    IDENT    shift, and go to state 25
    IF       shift, and go to state 26
    WHILE    shift, and go to state 27
    READ     shift, and go to state 28
    WRITE    shift, and go to state 29

    compound_command  go to state 30
    command           go to state 104
    read              go to state 33
    write             go to state 34
    loop              go to state 35
    conditional       go to state 36
    if_then           go to state 37
    assignment        go to state 38


State 101

   26 read: READ OPEN_PARENTHESIS IDENT $@4 CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 105


State 102

   27 write: WRITE OPEN_PARENTHESIS boolean_expr_list CLOSE_PARENTHESIS SEMICOLON .

    $default  reduce using rule 27 (write)


State 103

   28 boolean_expr_list: boolean_expr_list COMMA boolean_expr .
   42 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   43             | boolean_expr . DIFFERENT arithmetic_expr
   44             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   45             | boolean_expr . LESS arithmetic_expr
   46             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   47             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 62
    DIFFERENT      shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    LESS           shift, and go to state 65
    MORE_OR_EQUAL  shift, and go to state 66
    MORE           shift, and go to state 67

    $default  reduce using rule 28 (boolean_expr_list)


State 104

   32 loop: WHILE $@5 boolean_expr $@6 DO command .

    $default  reduce using rule 32 (loop)


State 105

   26 read: READ OPEN_PARENTHESIS IDENT $@4 CLOSE_PARENTHESIS SEMICOLON .

    $default  reduce using rule 26 (read)
