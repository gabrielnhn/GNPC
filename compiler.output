Terminals unused in grammar

    LABEL
    TYPE
    ARRAY
    OF
    GOTO
    OR
    AND
    NOT


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    3 block: declaring_vars_block declaring_procedures_block compound_command

    4 declaring_vars_block: VAR declare_vars
    5                     | %empty

    6 declare_vars: declare_vars declare_var
    7             | declare_var

    8 $@2: %empty

    9 $@3: %empty

   10 declare_var: $@2 id_simple_var_list COLON type $@3 SEMICOLON

   11 type: IDENT

   12 id_simple_var_list: id_simple_var_list COMMA IDENT
   13                   | IDENT

   14 idents_list: idents_list COMMA IDENT
   15            | IDENT

   16 declaring_procedures_block: procedures
   17                           | %empty

   18 procedures: procedures procedure_def
   19           | procedure_def

   20 procedure_def: PROCEDURE IDENT SEMICOLON block

   21 $@4: %empty

   22 $@5: %empty

   23 procedure_def: PROCEDURE IDENT OPEN_PARENTHESIS $@4 declare_params $@5 CLOSE_PARENTHESIS SEMICOLON block

   24 declare_params: declare_params declare_param
   25               | declare_param

   26 $@6: %empty

   27 $@7: %empty

   28 declare_param: $@6 id_param_list COLON type $@7 optional_semicolon

   29 id_param_list: id_simple_var_list COMMA IDENT
   30              | IDENT

   31 optional_semicolon: SEMICOLON
   32                   | %empty

   33 compound_command: T_BEGIN commands T_END

   34 commands: commands command
   35         | command

   36 command: assignment
   37        | compound_command
   38        | loop
   39        | conditional
   40        | read
   41        | write

   42 $@8: %empty

   43 read: READ OPEN_PARENTHESIS IDENT $@8 CLOSE_PARENTHESIS SEMICOLON

   44 write: WRITE OPEN_PARENTHESIS boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

   45 boolean_expr_list: boolean_expr_list COMMA boolean_expr
   46                  | boolean_expr

   47 $@9: %empty

   48 $@10: %empty

   49 loop: WHILE $@9 boolean_expr $@10 DO command

   50 conditional: if_then cond_else

   51 $@11: %empty

   52 if_then: IF boolean_expr $@11 THEN command

   53 $@12: %empty

   54 cond_else: ELSE $@12 command
   55          | %empty

   56 $@13: %empty

   57 assignment: IDENT $@13 ASSIGNMENT boolean_expr SEMICOLON

   58 boolean_expr: arithmetic_expr
   59             | boolean_expr EQUAL arithmetic_expr
   60             | boolean_expr DIFFERENT arithmetic_expr
   61             | boolean_expr LESS_OR_EQUAL arithmetic_expr
   62             | boolean_expr LESS arithmetic_expr
   63             | boolean_expr MORE_OR_EQUAL arithmetic_expr
   64             | boolean_expr MORE arithmetic_expr

   65 arithmetic_expr: E

   66 E: E PLUS T
   67  | E MINUS T
   68  | T

   69 T: T ASTERISK F
   70  | T DIV F
   71  | F

   72 F: NUMBER
   73  | IDENT
   74  | OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 2
    OPEN_PARENTHESIS (259) 2 23 43 44 74
    CLOSE_PARENTHESIS (260) 2 23 43 44 74
    COMMA (261) 12 14 29 45
    SEMICOLON (262) 2 10 20 23 31 43 44 57
    COLON (263) 10 28
    DOT (264) 2
    T_BEGIN (265) 33
    T_END (266) 33
    VAR (267) 4
    IDENT (268) 2 11 12 13 14 15 20 23 29 30 43 57 73
    ASSIGNMENT (269) 57
    LABEL (270)
    TYPE (271)
    ARRAY (272)
    OF (273)
    PROCEDURE (274) 20 23
    GOTO (275)
    IF (276) 52
    THEN (277) 52
    ELSE (278) 54
    WHILE (279) 49
    DO (280) 49
    OR (281)
    AND (282)
    NOT (283)
    DIV (284) 70
    ASTERISK (285) 69
    PLUS (286) 66
    MINUS (287) 67
    EQUAL (288) 59
    DIFFERENT (289) 60
    LESS_OR_EQUAL (290) 61
    LESS (291) 62
    MORE_OR_EQUAL (292) 63
    MORE (293) 64
    NUMBER (294) 72
    READ (295) 43
    WRITE (296) 44
    LOWER_THAN_ELSE (297)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program (44)
        on left: 2
        on right: 0
    $@1 (45)
        on left: 1
        on right: 2
    block (46)
        on left: 3
        on right: 2 20 23
    declaring_vars_block (47)
        on left: 4 5
        on right: 3
    declare_vars (48)
        on left: 6 7
        on right: 4 6
    declare_var (49)
        on left: 10
        on right: 6 7
    $@2 (50)
        on left: 8
        on right: 10
    $@3 (51)
        on left: 9
        on right: 10
    type (52)
        on left: 11
        on right: 10 28
    id_simple_var_list (53)
        on left: 12 13
        on right: 10 12 29
    idents_list (54)
        on left: 14 15
        on right: 2 14
    declaring_procedures_block (55)
        on left: 16 17
        on right: 3
    procedures (56)
        on left: 18 19
        on right: 16 18
    procedure_def (57)
        on left: 20 23
        on right: 18 19
    $@4 (58)
        on left: 21
        on right: 23
    $@5 (59)
        on left: 22
        on right: 23
    declare_params (60)
        on left: 24 25
        on right: 23 24
    declare_param (61)
        on left: 28
        on right: 24 25
    $@6 (62)
        on left: 26
        on right: 28
    $@7 (63)
        on left: 27
        on right: 28
    id_param_list (64)
        on left: 29 30
        on right: 28
    optional_semicolon (65)
        on left: 31 32
        on right: 28
    compound_command (66)
        on left: 33
        on right: 3 37
    commands (67)
        on left: 34 35
        on right: 33 34
    command (68)
        on left: 36 37 38 39 40 41
        on right: 34 35 49 52 54
    read (69)
        on left: 43
        on right: 40
    $@8 (70)
        on left: 42
        on right: 43
    write (71)
        on left: 44
        on right: 41
    boolean_expr_list (72)
        on left: 45 46
        on right: 44 45
    loop (73)
        on left: 49
        on right: 38
    $@9 (74)
        on left: 47
        on right: 49
    $@10 (75)
        on left: 48
        on right: 49
    conditional (76)
        on left: 50
        on right: 39
    if_then (77)
        on left: 52
        on right: 50
    $@11 (78)
        on left: 51
        on right: 52
    cond_else (79)
        on left: 54 55
        on right: 50
    $@12 (80)
        on left: 53
        on right: 54
    assignment (81)
        on left: 57
        on right: 36
    $@13 (82)
        on left: 56
        on right: 57
    boolean_expr (83)
        on left: 58 59 60 61 62 63 64
        on right: 45 46 49 52 57 59 60 61 62 63 64 74
    arithmetic_expr (84)
        on left: 65
        on right: 58 59 60 61 62 63 64
    E (85)
        on left: 66 67 68
        on right: 65 66 67
    T (86)
        on left: 69 70 71
        on right: 66 67 68 69 70
    F (87)
        on left: 72 73 74
        on right: 69 70 71


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 PROGRAM . IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 5


State 5

    2 program: $@1 PROGRAM IDENT . OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    OPEN_PARENTHESIS  shift, and go to state 6


State 6

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS . idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 7

    idents_list  go to state 8


State 7

   15 idents_list: IDENT .

    $default  reduce using rule 15 (idents_list)


State 8

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list . CLOSE_PARENTHESIS SEMICOLON block DOT
   14 idents_list: idents_list . COMMA IDENT

    CLOSE_PARENTHESIS  shift, and go to state 9
    COMMA              shift, and go to state 10


State 9

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS . SEMICOLON block DOT

    SEMICOLON  shift, and go to state 11


State 10

   14 idents_list: idents_list COMMA . IDENT

    IDENT  shift, and go to state 12


State 11

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON . block DOT

    VAR  shift, and go to state 13

    $default  reduce using rule 5 (declaring_vars_block)

    block                 go to state 14
    declaring_vars_block  go to state 15


State 12

   14 idents_list: idents_list COMMA IDENT .

    $default  reduce using rule 14 (idents_list)


State 13

    4 declaring_vars_block: VAR . declare_vars

    $default  reduce using rule 8 ($@2)

    declare_vars  go to state 16
    declare_var   go to state 17
    $@2           go to state 18


State 14

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block . DOT

    DOT  shift, and go to state 19


State 15

    3 block: declaring_vars_block . declaring_procedures_block compound_command

    PROCEDURE  shift, and go to state 20

    $default  reduce using rule 17 (declaring_procedures_block)

    declaring_procedures_block  go to state 21
    procedures                  go to state 22
    procedure_def               go to state 23


State 16

    4 declaring_vars_block: VAR declare_vars .
    6 declare_vars: declare_vars . declare_var

    IDENT     reduce using rule 8 ($@2)
    $default  reduce using rule 4 (declaring_vars_block)

    declare_var  go to state 24
    $@2          go to state 18


State 17

    7 declare_vars: declare_var .

    $default  reduce using rule 7 (declare_vars)


State 18

   10 declare_var: $@2 . id_simple_var_list COLON type $@3 SEMICOLON

    IDENT  shift, and go to state 25

    id_simple_var_list  go to state 26


State 19

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT .

    $default  reduce using rule 2 (program)


State 20

   20 procedure_def: PROCEDURE . IDENT SEMICOLON block
   23              | PROCEDURE . IDENT OPEN_PARENTHESIS $@4 declare_params $@5 CLOSE_PARENTHESIS SEMICOLON block

    IDENT  shift, and go to state 27


State 21

    3 block: declaring_vars_block declaring_procedures_block . compound_command

    T_BEGIN  shift, and go to state 28

    compound_command  go to state 29


State 22

   16 declaring_procedures_block: procedures .
   18 procedures: procedures . procedure_def

    PROCEDURE  shift, and go to state 20

    $default  reduce using rule 16 (declaring_procedures_block)

    procedure_def  go to state 30


State 23

   19 procedures: procedure_def .

    $default  reduce using rule 19 (procedures)


State 24

    6 declare_vars: declare_vars declare_var .

    $default  reduce using rule 6 (declare_vars)


State 25

   13 id_simple_var_list: IDENT .

    $default  reduce using rule 13 (id_simple_var_list)


State 26

   10 declare_var: $@2 id_simple_var_list . COLON type $@3 SEMICOLON
   12 id_simple_var_list: id_simple_var_list . COMMA IDENT

    COMMA  shift, and go to state 31
    COLON  shift, and go to state 32


State 27

   20 procedure_def: PROCEDURE IDENT . SEMICOLON block
   23              | PROCEDURE IDENT . OPEN_PARENTHESIS $@4 declare_params $@5 CLOSE_PARENTHESIS SEMICOLON block

    OPEN_PARENTHESIS  shift, and go to state 33
    SEMICOLON         shift, and go to state 34


State 28

   33 compound_command: T_BEGIN . commands T_END

    T_BEGIN  shift, and go to state 28
    IDENT    shift, and go to state 35
    IF       shift, and go to state 36
    WHILE    shift, and go to state 37
    READ     shift, and go to state 38
    WRITE    shift, and go to state 39

    compound_command  go to state 40
    commands          go to state 41
    command           go to state 42
    read              go to state 43
    write             go to state 44
    loop              go to state 45
    conditional       go to state 46
    if_then           go to state 47
    assignment        go to state 48


State 29

    3 block: declaring_vars_block declaring_procedures_block compound_command .

    $default  reduce using rule 3 (block)


State 30

   18 procedures: procedures procedure_def .

    $default  reduce using rule 18 (procedures)


State 31

   12 id_simple_var_list: id_simple_var_list COMMA . IDENT

    IDENT  shift, and go to state 49


State 32

   10 declare_var: $@2 id_simple_var_list COLON . type $@3 SEMICOLON

    IDENT  shift, and go to state 50

    type  go to state 51


State 33

   23 procedure_def: PROCEDURE IDENT OPEN_PARENTHESIS . $@4 declare_params $@5 CLOSE_PARENTHESIS SEMICOLON block

    $default  reduce using rule 21 ($@4)

    $@4  go to state 52


State 34

   20 procedure_def: PROCEDURE IDENT SEMICOLON . block

    VAR  shift, and go to state 13

    $default  reduce using rule 5 (declaring_vars_block)

    block                 go to state 53
    declaring_vars_block  go to state 15


State 35

   57 assignment: IDENT . $@13 ASSIGNMENT boolean_expr SEMICOLON

    $default  reduce using rule 56 ($@13)

    $@13  go to state 54


State 36

   52 if_then: IF . boolean_expr $@11 THEN command

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr     go to state 58
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 37

   49 loop: WHILE . $@9 boolean_expr $@10 DO command

    $default  reduce using rule 47 ($@9)

    $@9  go to state 63


State 38

   43 read: READ . OPEN_PARENTHESIS IDENT $@8 CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 64


State 39

   44 write: WRITE . OPEN_PARENTHESIS boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 65


State 40

   37 command: compound_command .

    $default  reduce using rule 37 (command)


State 41

   33 compound_command: T_BEGIN commands . T_END
   34 commands: commands . command

    T_BEGIN  shift, and go to state 28
    T_END    shift, and go to state 66
    IDENT    shift, and go to state 35
    IF       shift, and go to state 36
    WHILE    shift, and go to state 37
    READ     shift, and go to state 38
    WRITE    shift, and go to state 39

    compound_command  go to state 40
    command           go to state 67
    read              go to state 43
    write             go to state 44
    loop              go to state 45
    conditional       go to state 46
    if_then           go to state 47
    assignment        go to state 48


State 42

   35 commands: command .

    $default  reduce using rule 35 (commands)


State 43

   40 command: read .

    $default  reduce using rule 40 (command)


State 44

   41 command: write .

    $default  reduce using rule 41 (command)


State 45

   38 command: loop .

    $default  reduce using rule 38 (command)


State 46

   39 command: conditional .

    $default  reduce using rule 39 (command)


State 47

   50 conditional: if_then . cond_else

    ELSE  shift, and go to state 68

    $default  reduce using rule 55 (cond_else)

    cond_else  go to state 69


State 48

   36 command: assignment .

    $default  reduce using rule 36 (command)


State 49

   12 id_simple_var_list: id_simple_var_list COMMA IDENT .

    $default  reduce using rule 12 (id_simple_var_list)


State 50

   11 type: IDENT .

    $default  reduce using rule 11 (type)


State 51

   10 declare_var: $@2 id_simple_var_list COLON type . $@3 SEMICOLON

    $default  reduce using rule 9 ($@3)

    $@3  go to state 70


State 52

   23 procedure_def: PROCEDURE IDENT OPEN_PARENTHESIS $@4 . declare_params $@5 CLOSE_PARENTHESIS SEMICOLON block

    $default  reduce using rule 26 ($@6)

    declare_params  go to state 71
    declare_param   go to state 72
    $@6             go to state 73


State 53

   20 procedure_def: PROCEDURE IDENT SEMICOLON block .

    $default  reduce using rule 20 (procedure_def)


State 54

   57 assignment: IDENT $@13 . ASSIGNMENT boolean_expr SEMICOLON

    ASSIGNMENT  shift, and go to state 74


State 55

   74 F: OPEN_PARENTHESIS . boolean_expr CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr     go to state 75
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 56

   73 F: IDENT .

    $default  reduce using rule 73 (F)


State 57

   72 F: NUMBER .

    $default  reduce using rule 72 (F)


State 58

   52 if_then: IF boolean_expr . $@11 THEN command
   59 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   60             | boolean_expr . DIFFERENT arithmetic_expr
   61             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   62             | boolean_expr . LESS arithmetic_expr
   63             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   64             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 76
    DIFFERENT      shift, and go to state 77
    LESS_OR_EQUAL  shift, and go to state 78
    LESS           shift, and go to state 79
    MORE_OR_EQUAL  shift, and go to state 80
    MORE           shift, and go to state 81

    $default  reduce using rule 51 ($@11)

    $@11  go to state 82


State 59

   58 boolean_expr: arithmetic_expr .

    $default  reduce using rule 58 (boolean_expr)


State 60

   65 arithmetic_expr: E .
   66 E: E . PLUS T
   67  | E . MINUS T

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 65 (arithmetic_expr)


State 61

   68 E: T .
   69 T: T . ASTERISK F
   70  | T . DIV F

    DIV       shift, and go to state 85
    ASTERISK  shift, and go to state 86

    $default  reduce using rule 68 (E)


State 62

   71 T: F .

    $default  reduce using rule 71 (T)


State 63

   49 loop: WHILE $@9 . boolean_expr $@10 DO command

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr     go to state 87
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 64

   43 read: READ OPEN_PARENTHESIS . IDENT $@8 CLOSE_PARENTHESIS SEMICOLON

    IDENT  shift, and go to state 88


State 65

   44 write: WRITE OPEN_PARENTHESIS . boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr_list  go to state 89
    boolean_expr       go to state 90
    arithmetic_expr    go to state 59
    E                  go to state 60
    T                  go to state 61
    F                  go to state 62


State 66

   33 compound_command: T_BEGIN commands T_END .

    $default  reduce using rule 33 (compound_command)


State 67

   34 commands: commands command .

    $default  reduce using rule 34 (commands)


State 68

   54 cond_else: ELSE . $@12 command

    $default  reduce using rule 53 ($@12)

    $@12  go to state 91


State 69

   50 conditional: if_then cond_else .

    $default  reduce using rule 50 (conditional)


State 70

   10 declare_var: $@2 id_simple_var_list COLON type $@3 . SEMICOLON

    SEMICOLON  shift, and go to state 92


State 71

   23 procedure_def: PROCEDURE IDENT OPEN_PARENTHESIS $@4 declare_params . $@5 CLOSE_PARENTHESIS SEMICOLON block
   24 declare_params: declare_params . declare_param

    IDENT     reduce using rule 26 ($@6)
    $default  reduce using rule 22 ($@5)

    $@5            go to state 93
    declare_param  go to state 94
    $@6            go to state 73


State 72

   25 declare_params: declare_param .

    $default  reduce using rule 25 (declare_params)


State 73

   28 declare_param: $@6 . id_param_list COLON type $@7 optional_semicolon

    IDENT  shift, and go to state 95

    id_simple_var_list  go to state 96
    id_param_list       go to state 97


State 74

   57 assignment: IDENT $@13 ASSIGNMENT . boolean_expr SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr     go to state 98
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 75

   59 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   60             | boolean_expr . DIFFERENT arithmetic_expr
   61             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   62             | boolean_expr . LESS arithmetic_expr
   63             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   64             | boolean_expr . MORE arithmetic_expr
   74 F: OPEN_PARENTHESIS boolean_expr . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 99
    EQUAL              shift, and go to state 76
    DIFFERENT          shift, and go to state 77
    LESS_OR_EQUAL      shift, and go to state 78
    LESS               shift, and go to state 79
    MORE_OR_EQUAL      shift, and go to state 80
    MORE               shift, and go to state 81


State 76

   59 boolean_expr: boolean_expr EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 100
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 77

   60 boolean_expr: boolean_expr DIFFERENT . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 101
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 78

   61 boolean_expr: boolean_expr LESS_OR_EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 102
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 79

   62 boolean_expr: boolean_expr LESS . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 103
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 80

   63 boolean_expr: boolean_expr MORE_OR_EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 104
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 81

   64 boolean_expr: boolean_expr MORE . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    arithmetic_expr  go to state 105
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 82

   52 if_then: IF boolean_expr $@11 . THEN command

    THEN  shift, and go to state 106


State 83

   66 E: E PLUS . T

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    T  go to state 107
    F  go to state 62


State 84

   67 E: E MINUS . T

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    T  go to state 108
    F  go to state 62


State 85

   70 T: T DIV . F

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    F  go to state 109


State 86

   69 T: T ASTERISK . F

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    F  go to state 110


State 87

   49 loop: WHILE $@9 boolean_expr . $@10 DO command
   59 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   60             | boolean_expr . DIFFERENT arithmetic_expr
   61             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   62             | boolean_expr . LESS arithmetic_expr
   63             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   64             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 76
    DIFFERENT      shift, and go to state 77
    LESS_OR_EQUAL  shift, and go to state 78
    LESS           shift, and go to state 79
    MORE_OR_EQUAL  shift, and go to state 80
    MORE           shift, and go to state 81

    $default  reduce using rule 48 ($@10)

    $@10  go to state 111


State 88

   43 read: READ OPEN_PARENTHESIS IDENT . $@8 CLOSE_PARENTHESIS SEMICOLON

    $default  reduce using rule 42 ($@8)

    $@8  go to state 112


State 89

   44 write: WRITE OPEN_PARENTHESIS boolean_expr_list . CLOSE_PARENTHESIS SEMICOLON
   45 boolean_expr_list: boolean_expr_list . COMMA boolean_expr

    CLOSE_PARENTHESIS  shift, and go to state 113
    COMMA              shift, and go to state 114


State 90

   46 boolean_expr_list: boolean_expr .
   59 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   60             | boolean_expr . DIFFERENT arithmetic_expr
   61             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   62             | boolean_expr . LESS arithmetic_expr
   63             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   64             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 76
    DIFFERENT      shift, and go to state 77
    LESS_OR_EQUAL  shift, and go to state 78
    LESS           shift, and go to state 79
    MORE_OR_EQUAL  shift, and go to state 80
    MORE           shift, and go to state 81

    $default  reduce using rule 46 (boolean_expr_list)


State 91

   54 cond_else: ELSE $@12 . command

    T_BEGIN  shift, and go to state 28
    IDENT    shift, and go to state 35
    IF       shift, and go to state 36
    WHILE    shift, and go to state 37
    READ     shift, and go to state 38
    WRITE    shift, and go to state 39

    compound_command  go to state 40
    command           go to state 115
    read              go to state 43
    write             go to state 44
    loop              go to state 45
    conditional       go to state 46
    if_then           go to state 47
    assignment        go to state 48


State 92

   10 declare_var: $@2 id_simple_var_list COLON type $@3 SEMICOLON .

    $default  reduce using rule 10 (declare_var)


State 93

   23 procedure_def: PROCEDURE IDENT OPEN_PARENTHESIS $@4 declare_params $@5 . CLOSE_PARENTHESIS SEMICOLON block

    CLOSE_PARENTHESIS  shift, and go to state 116


State 94

   24 declare_params: declare_params declare_param .

    $default  reduce using rule 24 (declare_params)


State 95

   13 id_simple_var_list: IDENT .
   30 id_param_list: IDENT .

    COLON     reduce using rule 30 (id_param_list)
    $default  reduce using rule 13 (id_simple_var_list)


State 96

   12 id_simple_var_list: id_simple_var_list . COMMA IDENT
   29 id_param_list: id_simple_var_list . COMMA IDENT

    COMMA  shift, and go to state 117


State 97

   28 declare_param: $@6 id_param_list . COLON type $@7 optional_semicolon

    COLON  shift, and go to state 118


State 98

   57 assignment: IDENT $@13 ASSIGNMENT boolean_expr . SEMICOLON
   59 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   60             | boolean_expr . DIFFERENT arithmetic_expr
   61             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   62             | boolean_expr . LESS arithmetic_expr
   63             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   64             | boolean_expr . MORE arithmetic_expr

    SEMICOLON      shift, and go to state 119
    EQUAL          shift, and go to state 76
    DIFFERENT      shift, and go to state 77
    LESS_OR_EQUAL  shift, and go to state 78
    LESS           shift, and go to state 79
    MORE_OR_EQUAL  shift, and go to state 80
    MORE           shift, and go to state 81


State 99

   74 F: OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS .

    $default  reduce using rule 74 (F)


State 100

   59 boolean_expr: boolean_expr EQUAL arithmetic_expr .

    $default  reduce using rule 59 (boolean_expr)


State 101

   60 boolean_expr: boolean_expr DIFFERENT arithmetic_expr .

    $default  reduce using rule 60 (boolean_expr)


State 102

   61 boolean_expr: boolean_expr LESS_OR_EQUAL arithmetic_expr .

    $default  reduce using rule 61 (boolean_expr)


State 103

   62 boolean_expr: boolean_expr LESS arithmetic_expr .

    $default  reduce using rule 62 (boolean_expr)


State 104

   63 boolean_expr: boolean_expr MORE_OR_EQUAL arithmetic_expr .

    $default  reduce using rule 63 (boolean_expr)


State 105

   64 boolean_expr: boolean_expr MORE arithmetic_expr .

    $default  reduce using rule 64 (boolean_expr)


State 106

   52 if_then: IF boolean_expr $@11 THEN . command

    T_BEGIN  shift, and go to state 28
    IDENT    shift, and go to state 35
    IF       shift, and go to state 36
    WHILE    shift, and go to state 37
    READ     shift, and go to state 38
    WRITE    shift, and go to state 39

    compound_command  go to state 40
    command           go to state 120
    read              go to state 43
    write             go to state 44
    loop              go to state 45
    conditional       go to state 46
    if_then           go to state 47
    assignment        go to state 48


State 107

   66 E: E PLUS T .
   69 T: T . ASTERISK F
   70  | T . DIV F

    DIV       shift, and go to state 85
    ASTERISK  shift, and go to state 86

    $default  reduce using rule 66 (E)


State 108

   67 E: E MINUS T .
   69 T: T . ASTERISK F
   70  | T . DIV F

    DIV       shift, and go to state 85
    ASTERISK  shift, and go to state 86

    $default  reduce using rule 67 (E)


State 109

   70 T: T DIV F .

    $default  reduce using rule 70 (T)


State 110

   69 T: T ASTERISK F .

    $default  reduce using rule 69 (T)


State 111

   49 loop: WHILE $@9 boolean_expr $@10 . DO command

    DO  shift, and go to state 121


State 112

   43 read: READ OPEN_PARENTHESIS IDENT $@8 . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 122


State 113

   44 write: WRITE OPEN_PARENTHESIS boolean_expr_list CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 123


State 114

   45 boolean_expr_list: boolean_expr_list COMMA . boolean_expr

    OPEN_PARENTHESIS  shift, and go to state 55
    IDENT             shift, and go to state 56
    NUMBER            shift, and go to state 57

    boolean_expr     go to state 124
    arithmetic_expr  go to state 59
    E                go to state 60
    T                go to state 61
    F                go to state 62


State 115

   54 cond_else: ELSE $@12 command .

    $default  reduce using rule 54 (cond_else)


State 116

   23 procedure_def: PROCEDURE IDENT OPEN_PARENTHESIS $@4 declare_params $@5 CLOSE_PARENTHESIS . SEMICOLON block

    SEMICOLON  shift, and go to state 125


State 117

   12 id_simple_var_list: id_simple_var_list COMMA . IDENT
   29 id_param_list: id_simple_var_list COMMA . IDENT

    IDENT  shift, and go to state 126


State 118

   28 declare_param: $@6 id_param_list COLON . type $@7 optional_semicolon

    IDENT  shift, and go to state 50

    type  go to state 127


State 119

   57 assignment: IDENT $@13 ASSIGNMENT boolean_expr SEMICOLON .

    $default  reduce using rule 57 (assignment)


State 120

   52 if_then: IF boolean_expr $@11 THEN command .

    $default  reduce using rule 52 (if_then)


State 121

   49 loop: WHILE $@9 boolean_expr $@10 DO . command

    T_BEGIN  shift, and go to state 28
    IDENT    shift, and go to state 35
    IF       shift, and go to state 36
    WHILE    shift, and go to state 37
    READ     shift, and go to state 38
    WRITE    shift, and go to state 39

    compound_command  go to state 40
    command           go to state 128
    read              go to state 43
    write             go to state 44
    loop              go to state 45
    conditional       go to state 46
    if_then           go to state 47
    assignment        go to state 48


State 122

   43 read: READ OPEN_PARENTHESIS IDENT $@8 CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 129


State 123

   44 write: WRITE OPEN_PARENTHESIS boolean_expr_list CLOSE_PARENTHESIS SEMICOLON .

    $default  reduce using rule 44 (write)


State 124

   45 boolean_expr_list: boolean_expr_list COMMA boolean_expr .
   59 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   60             | boolean_expr . DIFFERENT arithmetic_expr
   61             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   62             | boolean_expr . LESS arithmetic_expr
   63             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   64             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 76
    DIFFERENT      shift, and go to state 77
    LESS_OR_EQUAL  shift, and go to state 78
    LESS           shift, and go to state 79
    MORE_OR_EQUAL  shift, and go to state 80
    MORE           shift, and go to state 81

    $default  reduce using rule 45 (boolean_expr_list)


State 125

   23 procedure_def: PROCEDURE IDENT OPEN_PARENTHESIS $@4 declare_params $@5 CLOSE_PARENTHESIS SEMICOLON . block

    VAR  shift, and go to state 13

    $default  reduce using rule 5 (declaring_vars_block)

    block                 go to state 130
    declaring_vars_block  go to state 15


State 126

   12 id_simple_var_list: id_simple_var_list COMMA IDENT .
   29 id_param_list: id_simple_var_list COMMA IDENT .

    COLON     reduce using rule 29 (id_param_list)
    $default  reduce using rule 12 (id_simple_var_list)


State 127

   28 declare_param: $@6 id_param_list COLON type . $@7 optional_semicolon

    $default  reduce using rule 27 ($@7)

    $@7  go to state 131


State 128

   49 loop: WHILE $@9 boolean_expr $@10 DO command .

    $default  reduce using rule 49 (loop)


State 129

   43 read: READ OPEN_PARENTHESIS IDENT $@8 CLOSE_PARENTHESIS SEMICOLON .

    $default  reduce using rule 43 (read)


State 130

   23 procedure_def: PROCEDURE IDENT OPEN_PARENTHESIS $@4 declare_params $@5 CLOSE_PARENTHESIS SEMICOLON block .

    $default  reduce using rule 23 (procedure_def)


State 131

   28 declare_param: $@6 id_param_list COLON type $@7 . optional_semicolon

    SEMICOLON  shift, and go to state 132

    $default  reduce using rule 32 (optional_semicolon)

    optional_semicolon  go to state 133


State 132

   31 optional_semicolon: SEMICOLON .

    $default  reduce using rule 31 (optional_semicolon)


State 133

   28 declare_param: $@6 id_param_list COLON type $@7 optional_semicolon .

    $default  reduce using rule 28 (declare_param)
