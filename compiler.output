Terminals unused in grammar

    LABEL
    TYPE
    ARRAY
    OF
    GOTO
    OR
    AND
    NOT


State 108 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 $@1: ε

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    3 block: declaring_vars_block declaring_procedures_block compound_command

    4 $@2: ε

    5 declaring_vars_block: VAR $@2 declare_vars
    6                     | ε

    7 declare_vars: declare_vars declare_var
    8             | declare_var

    9 $@3: ε

   10 $@4: ε

   11 declare_var: $@3 id_simple_var_list COLON type $@4 SEMICOLON

   12 type: IDENT

   13 id_simple_var_list: id_simple_var_list COMMA IDENT
   14                   | IDENT

   15 idents_list: idents_list COMMA IDENT
   16            | IDENT

   17 declaring_procedures_block: procedures
   18                           | ε

   19 procedures: procedures procedure_def
   20           | procedure_def

   21 $@5: ε

   22 procedure_def: PROCEDURE IDENT $@5 procedure_params SEMICOLON block

   23 $@6: ε

   24 $@7: ε

   25 procedure_def: FUNCTION IDENT $@6 procedure_params COLON IDENT $@7 SEMICOLON block

   26 $@8: ε

   27 $@9: ε

   28 procedure_params: OPEN_PARENTHESIS $@8 declare_params $@9 CLOSE_PARENTHESIS
   29                 | ε

   30 declare_params: declare_params declare_param
   31               | declare_param

   32 $@10: ε

   33 $@11: ε

   34 declare_param: by_reference_or_not $@10 id_param_list COLON type $@11 optional_semicolon

   35 by_reference_or_not: VAR
   36                    | ε

   37 id_param_list: id_param_list COMMA IDENT
   38              | IDENT

   39 optional_semicolon: SEMICOLON
   40                   | ε

   41 compound_command: T_BEGIN commands T_END

   42 commands: commands command
   43         | command

   44 command: IDENT starts_with_ident
   45        | loop
   46        | conditional
   47        | read
   48        | write

   49 starts_with_ident: procedure_call SEMICOLON
   50                  | assignment_operation

   51 $@12: ε

   52 procedure_call: $@12 OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS

   53 procedure_arguments: args_list

   54 args_list: args_list COMMA ARGUMENT
   55          | ARGUMENT

   56 ARGUMENT: IDENT
   57         | boolean_expr

   58 $@13: ε

   59 read: READ OPEN_PARENTHESIS IDENT $@13 CLOSE_PARENTHESIS SEMICOLON

   60 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

   61 write_boolean_expr_list: write_boolean_expr_list COMMA boolean_expr
   62                        | boolean_expr

   63 $@14: ε

   64 $@15: ε

   65 loop: WHILE $@14 boolean_expr $@15 DO command

   66 conditional: if_then cond_else

   67 $@16: ε

   68 if_then: IF boolean_expr $@16 THEN command

   69 $@17: ε

   70 cond_else: ELSE $@17 command
   71          | ε

   72 $@18: ε

   73 assignment_operation: $@18 ASSIGNMENT boolean_expr SEMICOLON

   74 boolean_expr: arithmetic_expr
   75             | boolean_expr EQUAL arithmetic_expr
   76             | boolean_expr DIFFERENT arithmetic_expr
   77             | boolean_expr LESS_OR_EQUAL arithmetic_expr
   78             | boolean_expr LESS arithmetic_expr
   79             | boolean_expr MORE_OR_EQUAL arithmetic_expr
   80             | boolean_expr MORE arithmetic_expr

   81 arithmetic_expr: E

   82 E: E PLUS T
   83  | E MINUS T
   84  | T

   85 T: T ASTERISK F
   86  | T DIV F
   87  | F

   88 F: NUMBER
   89  | IDENT CONTINUA_IDENT
   90  | OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS

   91 CONTINUA_IDENT: ε

   92 $@19: ε

   93 CONTINUA_IDENT: $@19 procedure_call


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 2
    OPEN_PARENTHESIS (259) 2 28 52 59 60 90
    CLOSE_PARENTHESIS (260) 2 28 52 59 60 90
    COMMA (261) 13 15 37 54 61
    SEMICOLON (262) 2 11 22 25 39 49 59 60 73
    COLON (263) 11 25 34
    DOT (264) 2
    T_BEGIN (265) 41
    T_END (266) 41
    VAR (267) 5 35
    IDENT (268) 2 12 13 14 15 16 22 25 37 38 44 56 59 89
    ASSIGNMENT (269) 73
    LABEL (270)
    TYPE (271)
    ARRAY (272)
    OF (273)
    PROCEDURE (274) 22
    FUNCTION (275) 25
    GOTO (276)
    IF (277) 68
    THEN (278) 68
    ELSE (279) 70
    WHILE (280) 65
    DO (281) 65
    OR (282)
    AND (283)
    NOT (284)
    DIV (285) 86
    ASTERISK (286) 85
    PLUS (287) 82
    MINUS (288) 83
    EQUAL (289) 75
    DIFFERENT (290) 76
    LESS_OR_EQUAL (291) 77
    LESS (292) 78
    MORE_OR_EQUAL (293) 79
    MORE (294) 80
    NUMBER (295) 88
    READ (296) 59
    WRITE (297) 60
    LOWER_THAN_ELSE (298)


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    program (45)
        on left: 2
        on right: 0
    $@1 (46)
        on left: 1
        on right: 2
    block (47)
        on left: 3
        on right: 2 22 25
    declaring_vars_block (48)
        on left: 5 6
        on right: 3
    $@2 (49)
        on left: 4
        on right: 5
    declare_vars (50)
        on left: 7 8
        on right: 5 7
    declare_var (51)
        on left: 11
        on right: 7 8
    $@3 (52)
        on left: 9
        on right: 11
    $@4 (53)
        on left: 10
        on right: 11
    type (54)
        on left: 12
        on right: 11 34
    id_simple_var_list (55)
        on left: 13 14
        on right: 11 13
    idents_list (56)
        on left: 15 16
        on right: 2 15
    declaring_procedures_block (57)
        on left: 17 18
        on right: 3
    procedures (58)
        on left: 19 20
        on right: 17 19
    procedure_def (59)
        on left: 22 25
        on right: 19 20
    $@5 (60)
        on left: 21
        on right: 22
    $@6 (61)
        on left: 23
        on right: 25
    $@7 (62)
        on left: 24
        on right: 25
    procedure_params (63)
        on left: 28 29
        on right: 22 25
    $@8 (64)
        on left: 26
        on right: 28
    $@9 (65)
        on left: 27
        on right: 28
    declare_params (66)
        on left: 30 31
        on right: 28 30
    declare_param (67)
        on left: 34
        on right: 30 31
    $@10 (68)
        on left: 32
        on right: 34
    $@11 (69)
        on left: 33
        on right: 34
    by_reference_or_not (70)
        on left: 35 36
        on right: 34
    id_param_list (71)
        on left: 37 38
        on right: 34 37
    optional_semicolon (72)
        on left: 39 40
        on right: 34
    compound_command (73)
        on left: 41
        on right: 3
    commands (74)
        on left: 42 43
        on right: 41 42
    command (75)
        on left: 44 45 46 47 48
        on right: 42 43 65 68 70
    starts_with_ident (76)
        on left: 49 50
        on right: 44
    procedure_call (77)
        on left: 52
        on right: 49 93
    $@12 (78)
        on left: 51
        on right: 52
    procedure_arguments (79)
        on left: 53
        on right: 52
    args_list (80)
        on left: 54 55
        on right: 53 54
    ARGUMENT (81)
        on left: 56 57
        on right: 54 55
    read (82)
        on left: 59
        on right: 47
    $@13 (83)
        on left: 58
        on right: 59
    write (84)
        on left: 60
        on right: 48
    write_boolean_expr_list (85)
        on left: 61 62
        on right: 60 61
    loop (86)
        on left: 65
        on right: 45
    $@14 (87)
        on left: 63
        on right: 65
    $@15 (88)
        on left: 64
        on right: 65
    conditional (89)
        on left: 66
        on right: 46
    if_then (90)
        on left: 68
        on right: 66
    $@16 (91)
        on left: 67
        on right: 68
    cond_else (92)
        on left: 70 71
        on right: 66
    $@17 (93)
        on left: 69
        on right: 70
    assignment_operation (94)
        on left: 73
        on right: 50
    $@18 (95)
        on left: 72
        on right: 73
    boolean_expr (96)
        on left: 74 75 76 77 78 79 80
        on right: 57 61 62 65 68 73 75 76 77 78 79 80 90
    arithmetic_expr (97)
        on left: 81
        on right: 74 75 76 77 78 79 80
    E (98)
        on left: 82 83 84
        on right: 81 82 83
    T (99)
        on left: 85 86 87
        on right: 82 83 84 85 86
    F (100)
        on left: 88 89 90
        on right: 85 86 87
    CONTINUA_IDENT (101)
        on left: 91 93
        on right: 89
    $@19 (102)
        on left: 92
        on right: 93


State 0

    0 $accept: • program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 • PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end •

    $default  accept


State 4

    2 program: $@1 PROGRAM • IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 5


State 5

    2 program: $@1 PROGRAM IDENT • OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    OPEN_PARENTHESIS  shift, and go to state 6


State 6

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS • idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 7

    idents_list  go to state 8


State 7

   16 idents_list: IDENT •

    $default  reduce using rule 16 (idents_list)


State 8

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list • CLOSE_PARENTHESIS SEMICOLON block DOT
   15 idents_list: idents_list • COMMA IDENT

    CLOSE_PARENTHESIS  shift, and go to state 9
    COMMA              shift, and go to state 10


State 9

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS • SEMICOLON block DOT

    SEMICOLON  shift, and go to state 11


State 10

   15 idents_list: idents_list COMMA • IDENT

    IDENT  shift, and go to state 12


State 11

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON • block DOT

    VAR  shift, and go to state 13

    T_BEGIN    reduce using rule 6 (declaring_vars_block)
    PROCEDURE  reduce using rule 6 (declaring_vars_block)
    FUNCTION   reduce using rule 6 (declaring_vars_block)

    block                 go to state 14
    declaring_vars_block  go to state 15


State 12

   15 idents_list: idents_list COMMA IDENT •

    $default  reduce using rule 15 (idents_list)


State 13

    5 declaring_vars_block: VAR • $@2 declare_vars

    $default  reduce using rule 4 ($@2)

    $@2  go to state 16


State 14

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block • DOT

    DOT  shift, and go to state 17


State 15

    3 block: declaring_vars_block • declaring_procedures_block compound_command

    PROCEDURE  shift, and go to state 18
    FUNCTION   shift, and go to state 19

    T_BEGIN  reduce using rule 18 (declaring_procedures_block)

    declaring_procedures_block  go to state 20
    procedures                  go to state 21
    procedure_def               go to state 22


State 16

    5 declaring_vars_block: VAR $@2 • declare_vars

    $default  reduce using rule 9 ($@3)

    declare_vars  go to state 23
    declare_var   go to state 24
    $@3           go to state 25


State 17

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT •

    $default  reduce using rule 2 (program)


State 18

   22 procedure_def: PROCEDURE • IDENT $@5 procedure_params SEMICOLON block

    IDENT  shift, and go to state 26


State 19

   25 procedure_def: FUNCTION • IDENT $@6 procedure_params COLON IDENT $@7 SEMICOLON block

    IDENT  shift, and go to state 27


State 20

    3 block: declaring_vars_block declaring_procedures_block • compound_command

    T_BEGIN  shift, and go to state 28

    compound_command  go to state 29


State 21

   17 declaring_procedures_block: procedures •
   19 procedures: procedures • procedure_def

    PROCEDURE  shift, and go to state 18
    FUNCTION   shift, and go to state 19

    T_BEGIN  reduce using rule 17 (declaring_procedures_block)

    procedure_def  go to state 30


State 22

   20 procedures: procedure_def •

    $default  reduce using rule 20 (procedures)


State 23

    5 declaring_vars_block: VAR $@2 declare_vars •
    7 declare_vars: declare_vars • declare_var

    T_BEGIN    reduce using rule 5 (declaring_vars_block)
    IDENT      reduce using rule 9 ($@3)
    PROCEDURE  reduce using rule 5 (declaring_vars_block)
    FUNCTION   reduce using rule 5 (declaring_vars_block)

    declare_var  go to state 31
    $@3          go to state 25


State 24

    8 declare_vars: declare_var •

    $default  reduce using rule 8 (declare_vars)


State 25

   11 declare_var: $@3 • id_simple_var_list COLON type $@4 SEMICOLON

    IDENT  shift, and go to state 32

    id_simple_var_list  go to state 33


State 26

   22 procedure_def: PROCEDURE IDENT • $@5 procedure_params SEMICOLON block

    $default  reduce using rule 21 ($@5)

    $@5  go to state 34


State 27

   25 procedure_def: FUNCTION IDENT • $@6 procedure_params COLON IDENT $@7 SEMICOLON block

    $default  reduce using rule 23 ($@6)

    $@6  go to state 35


State 28

   41 compound_command: T_BEGIN • commands T_END

    IDENT  shift, and go to state 36
    IF     shift, and go to state 37
    WHILE  shift, and go to state 38
    READ   shift, and go to state 39
    WRITE  shift, and go to state 40

    commands     go to state 41
    command      go to state 42
    read         go to state 43
    write        go to state 44
    loop         go to state 45
    conditional  go to state 46
    if_then      go to state 47


State 29

    3 block: declaring_vars_block declaring_procedures_block compound_command •

    $default  reduce using rule 3 (block)


State 30

   19 procedures: procedures procedure_def •

    $default  reduce using rule 19 (procedures)


State 31

    7 declare_vars: declare_vars declare_var •

    $default  reduce using rule 7 (declare_vars)


State 32

   14 id_simple_var_list: IDENT •

    $default  reduce using rule 14 (id_simple_var_list)


State 33

   11 declare_var: $@3 id_simple_var_list • COLON type $@4 SEMICOLON
   13 id_simple_var_list: id_simple_var_list • COMMA IDENT

    COMMA  shift, and go to state 48
    COLON  shift, and go to state 49


State 34

   22 procedure_def: PROCEDURE IDENT $@5 • procedure_params SEMICOLON block

    OPEN_PARENTHESIS  shift, and go to state 50

    SEMICOLON  reduce using rule 29 (procedure_params)

    procedure_params  go to state 51


State 35

   25 procedure_def: FUNCTION IDENT $@6 • procedure_params COLON IDENT $@7 SEMICOLON block

    OPEN_PARENTHESIS  shift, and go to state 50

    COLON  reduce using rule 29 (procedure_params)

    procedure_params  go to state 52


State 36

   44 command: IDENT • starts_with_ident

    OPEN_PARENTHESIS  reduce using rule 51 ($@12)
    ASSIGNMENT        reduce using rule 72 ($@18)

    starts_with_ident     go to state 53
    procedure_call        go to state 54
    $@12                  go to state 55
    assignment_operation  go to state 56
    $@18                  go to state 57


State 37

   68 if_then: IF • boolean_expr $@16 THEN command

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENT             shift, and go to state 59
    NUMBER            shift, and go to state 60

    boolean_expr     go to state 61
    arithmetic_expr  go to state 62
    E                go to state 63
    T                go to state 64
    F                go to state 65


State 38

   65 loop: WHILE • $@14 boolean_expr $@15 DO command

    $default  reduce using rule 63 ($@14)

    $@14  go to state 66


State 39

   59 read: READ • OPEN_PARENTHESIS IDENT $@13 CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 67


State 40

   60 write: WRITE • OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 68


State 41

   41 compound_command: T_BEGIN commands • T_END
   42 commands: commands • command

    T_END  shift, and go to state 69
    IDENT  shift, and go to state 36
    IF     shift, and go to state 37
    WHILE  shift, and go to state 38
    READ   shift, and go to state 39
    WRITE  shift, and go to state 40

    command      go to state 70
    read         go to state 43
    write        go to state 44
    loop         go to state 45
    conditional  go to state 46
    if_then      go to state 47


State 42

   43 commands: command •

    $default  reduce using rule 43 (commands)


State 43

   47 command: read •

    $default  reduce using rule 47 (command)


State 44

   48 command: write •

    $default  reduce using rule 48 (command)


State 45

   45 command: loop •

    $default  reduce using rule 45 (command)


State 46

   46 command: conditional •

    $default  reduce using rule 46 (command)


State 47

   66 conditional: if_then • cond_else

    ELSE  shift, and go to state 71

    T_END  reduce using rule 71 (cond_else)
    IDENT  reduce using rule 71 (cond_else)
    IF     reduce using rule 71 (cond_else)
    WHILE  reduce using rule 71 (cond_else)
    READ   reduce using rule 71 (cond_else)
    WRITE  reduce using rule 71 (cond_else)

    cond_else  go to state 72


State 48

   13 id_simple_var_list: id_simple_var_list COMMA • IDENT

    IDENT  shift, and go to state 73


State 49

   11 declare_var: $@3 id_simple_var_list COLON • type $@4 SEMICOLON

    IDENT  shift, and go to state 74

    type  go to state 75


State 50

   28 procedure_params: OPEN_PARENTHESIS • $@8 declare_params $@9 CLOSE_PARENTHESIS

    $default  reduce using rule 26 ($@8)

    $@8  go to state 76


State 51

   22 procedure_def: PROCEDURE IDENT $@5 procedure_params • SEMICOLON block

    SEMICOLON  shift, and go to state 77


State 52

   25 procedure_def: FUNCTION IDENT $@6 procedure_params • COLON IDENT $@7 SEMICOLON block

    COLON  shift, and go to state 78


State 53

   44 command: IDENT starts_with_ident •

    $default  reduce using rule 44 (command)


State 54

   49 starts_with_ident: procedure_call • SEMICOLON

    SEMICOLON  shift, and go to state 79


State 55

   52 procedure_call: $@12 • OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 80


State 56

   50 starts_with_ident: assignment_operation •

    $default  reduce using rule 50 (starts_with_ident)


State 57

   73 assignment_operation: $@18 • ASSIGNMENT boolean_expr SEMICOLON

    ASSIGNMENT  shift, and go to state 81


State 58

   90 F: OPEN_PARENTHESIS • boolean_expr CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENT             shift, and go to state 59
    NUMBER            shift, and go to state 60

    boolean_expr     go to state 82
    arithmetic_expr  go to state 62
    E                go to state 63
    T                go to state 64
    F                go to state 65


State 59

   89 F: IDENT • CONTINUA_IDENT

    OPEN_PARENTHESIS   reduce using rule 92 ($@19)
    CLOSE_PARENTHESIS  reduce using rule 91 (CONTINUA_IDENT)
    COMMA              reduce using rule 91 (CONTINUA_IDENT)
    SEMICOLON          reduce using rule 91 (CONTINUA_IDENT)
    THEN               reduce using rule 91 (CONTINUA_IDENT)
    DO                 reduce using rule 91 (CONTINUA_IDENT)
    DIV                reduce using rule 91 (CONTINUA_IDENT)
    ASTERISK           reduce using rule 91 (CONTINUA_IDENT)
    PLUS               reduce using rule 91 (CONTINUA_IDENT)
    MINUS              reduce using rule 91 (CONTINUA_IDENT)
    EQUAL              reduce using rule 91 (CONTINUA_IDENT)
    DIFFERENT          reduce using rule 91 (CONTINUA_IDENT)
    LESS_OR_EQUAL      reduce using rule 91 (CONTINUA_IDENT)
    LESS               reduce using rule 91 (CONTINUA_IDENT)
    MORE_OR_EQUAL      reduce using rule 91 (CONTINUA_IDENT)
    MORE               reduce using rule 91 (CONTINUA_IDENT)

    CONTINUA_IDENT  go to state 83
    $@19            go to state 84


State 60

   88 F: NUMBER •

    $default  reduce using rule 88 (F)


State 61

   68 if_then: IF boolean_expr • $@16 THEN command
   75 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   76             | boolean_expr • DIFFERENT arithmetic_expr
   77             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   78             | boolean_expr • LESS arithmetic_expr
   79             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   80             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 85
    DIFFERENT      shift, and go to state 86
    LESS_OR_EQUAL  shift, and go to state 87
    LESS           shift, and go to state 88
    MORE_OR_EQUAL  shift, and go to state 89
    MORE           shift, and go to state 90

    THEN  reduce using rule 67 ($@16)

    $@16  go to state 91


State 62

   74 boolean_expr: arithmetic_expr •

    $default  reduce using rule 74 (boolean_expr)


State 63

   81 arithmetic_expr: E •
   82 E: E • PLUS T
   83  | E • MINUS T

    PLUS   shift, and go to state 92
    MINUS  shift, and go to state 93

    CLOSE_PARENTHESIS  reduce using rule 81 (arithmetic_expr)
    COMMA              reduce using rule 81 (arithmetic_expr)
    SEMICOLON          reduce using rule 81 (arithmetic_expr)
    THEN               reduce using rule 81 (arithmetic_expr)
    DO                 reduce using rule 81 (arithmetic_expr)
    EQUAL              reduce using rule 81 (arithmetic_expr)
    DIFFERENT          reduce using rule 81 (arithmetic_expr)
    LESS_OR_EQUAL      reduce using rule 81 (arithmetic_expr)
    LESS               reduce using rule 81 (arithmetic_expr)
    MORE_OR_EQUAL      reduce using rule 81 (arithmetic_expr)
    MORE               reduce using rule 81 (arithmetic_expr)


State 64

   84 E: T •
   85 T: T • ASTERISK F
   86  | T • DIV F

    DIV       shift, and go to state 94
    ASTERISK  shift, and go to state 95

    CLOSE_PARENTHESIS  reduce using rule 84 (E)
    COMMA              reduce using rule 84 (E)
    SEMICOLON          reduce using rule 84 (E)
    THEN               reduce using rule 84 (E)
    DO                 reduce using rule 84 (E)
    PLUS               reduce using rule 84 (E)
    MINUS              reduce using rule 84 (E)
    EQUAL              reduce using rule 84 (E)
    DIFFERENT          reduce using rule 84 (E)
    LESS_OR_EQUAL      reduce using rule 84 (E)
    LESS               reduce using rule 84 (E)
    MORE_OR_EQUAL      reduce using rule 84 (E)
    MORE               reduce using rule 84 (E)


State 65

   87 T: F •

    $default  reduce using rule 87 (T)


State 66

   65 loop: WHILE $@14 • boolean_expr $@15 DO command

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENT             shift, and go to state 59
    NUMBER            shift, and go to state 60

    boolean_expr     go to state 96
    arithmetic_expr  go to state 62
    E                go to state 63
    T                go to state 64
    F                go to state 65


State 67

   59 read: READ OPEN_PARENTHESIS • IDENT $@13 CLOSE_PARENTHESIS SEMICOLON

    IDENT  shift, and go to state 97


State 68

   60 write: WRITE OPEN_PARENTHESIS • write_boolean_expr_list CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENT             shift, and go to state 59
    NUMBER            shift, and go to state 60

    write_boolean_expr_list  go to state 98
    boolean_expr             go to state 99
    arithmetic_expr          go to state 62
    E                        go to state 63
    T                        go to state 64
    F                        go to state 65


State 69

   41 compound_command: T_BEGIN commands T_END •

    $default  reduce using rule 41 (compound_command)


State 70

   42 commands: commands command •

    $default  reduce using rule 42 (commands)


State 71

   70 cond_else: ELSE • $@17 command

    $default  reduce using rule 69 ($@17)

    $@17  go to state 100


State 72

   66 conditional: if_then cond_else •

    $default  reduce using rule 66 (conditional)


State 73

   13 id_simple_var_list: id_simple_var_list COMMA IDENT •

    $default  reduce using rule 13 (id_simple_var_list)


State 74

   12 type: IDENT •

    $default  reduce using rule 12 (type)


State 75

   11 declare_var: $@3 id_simple_var_list COLON type • $@4 SEMICOLON

    $default  reduce using rule 10 ($@4)

    $@4  go to state 101


State 76

   28 procedure_params: OPEN_PARENTHESIS $@8 • declare_params $@9 CLOSE_PARENTHESIS

    VAR  shift, and go to state 102

    IDENT  reduce using rule 36 (by_reference_or_not)

    declare_params       go to state 103
    declare_param        go to state 104
    by_reference_or_not  go to state 105


State 77

   22 procedure_def: PROCEDURE IDENT $@5 procedure_params SEMICOLON • block

    VAR  shift, and go to state 13

    T_BEGIN    reduce using rule 6 (declaring_vars_block)
    PROCEDURE  reduce using rule 6 (declaring_vars_block)
    FUNCTION   reduce using rule 6 (declaring_vars_block)

    block                 go to state 106
    declaring_vars_block  go to state 15


State 78

   25 procedure_def: FUNCTION IDENT $@6 procedure_params COLON • IDENT $@7 SEMICOLON block

    IDENT  shift, and go to state 107


State 79

   49 starts_with_ident: procedure_call SEMICOLON •

    $default  reduce using rule 49 (starts_with_ident)


State 80

   52 procedure_call: $@12 OPEN_PARENTHESIS • procedure_arguments CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENT             shift, and go to state 108
    NUMBER            shift, and go to state 60

    procedure_arguments  go to state 109
    args_list            go to state 110
    ARGUMENT             go to state 111
    boolean_expr         go to state 112
    arithmetic_expr      go to state 62
    E                    go to state 63
    T                    go to state 64
    F                    go to state 65


State 81

   73 assignment_operation: $@18 ASSIGNMENT • boolean_expr SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENT             shift, and go to state 59
    NUMBER            shift, and go to state 60

    boolean_expr     go to state 113
    arithmetic_expr  go to state 62
    E                go to state 63
    T                go to state 64
    F                go to state 65


State 82

   75 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   76             | boolean_expr • DIFFERENT arithmetic_expr
   77             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   78             | boolean_expr • LESS arithmetic_expr
   79             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   80             | boolean_expr • MORE arithmetic_expr
   90 F: OPEN_PARENTHESIS boolean_expr • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 114
    EQUAL              shift, and go to state 85
    DIFFERENT          shift, and go to state 86
    LESS_OR_EQUAL      shift, and go to state 87
    LESS               shift, and go to state 88
    MORE_OR_EQUAL      shift, and go to state 89
    MORE               shift, and go to state 90


State 83

   89 F: IDENT CONTINUA_IDENT •

    $default  reduce using rule 89 (F)


State 84

   93 CONTINUA_IDENT: $@19 • procedure_call

    $default  reduce using rule 51 ($@12)

    procedure_call  go to state 115
    $@12            go to state 55


State 85

   75 boolean_expr: boolean_expr EQUAL • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENT             shift, and go to state 59
    NUMBER            shift, and go to state 60

    arithmetic_expr  go to state 116
    E                go to state 63
    T                go to state 64
    F                go to state 65


State 86

   76 boolean_expr: boolean_expr DIFFERENT • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENT             shift, and go to state 59
    NUMBER            shift, and go to state 60

    arithmetic_expr  go to state 117
    E                go to state 63
    T                go to state 64
    F                go to state 65


State 87

   77 boolean_expr: boolean_expr LESS_OR_EQUAL • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENT             shift, and go to state 59
    NUMBER            shift, and go to state 60

    arithmetic_expr  go to state 118
    E                go to state 63
    T                go to state 64
    F                go to state 65


State 88

   78 boolean_expr: boolean_expr LESS • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENT             shift, and go to state 59
    NUMBER            shift, and go to state 60

    arithmetic_expr  go to state 119
    E                go to state 63
    T                go to state 64
    F                go to state 65


State 89

   79 boolean_expr: boolean_expr MORE_OR_EQUAL • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENT             shift, and go to state 59
    NUMBER            shift, and go to state 60

    arithmetic_expr  go to state 120
    E                go to state 63
    T                go to state 64
    F                go to state 65


State 90

   80 boolean_expr: boolean_expr MORE • arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENT             shift, and go to state 59
    NUMBER            shift, and go to state 60

    arithmetic_expr  go to state 121
    E                go to state 63
    T                go to state 64
    F                go to state 65


State 91

   68 if_then: IF boolean_expr $@16 • THEN command

    THEN  shift, and go to state 122


State 92

   82 E: E PLUS • T

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENT             shift, and go to state 59
    NUMBER            shift, and go to state 60

    T  go to state 123
    F  go to state 65


State 93

   83 E: E MINUS • T

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENT             shift, and go to state 59
    NUMBER            shift, and go to state 60

    T  go to state 124
    F  go to state 65


State 94

   86 T: T DIV • F

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENT             shift, and go to state 59
    NUMBER            shift, and go to state 60

    F  go to state 125


State 95

   85 T: T ASTERISK • F

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENT             shift, and go to state 59
    NUMBER            shift, and go to state 60

    F  go to state 126


State 96

   65 loop: WHILE $@14 boolean_expr • $@15 DO command
   75 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   76             | boolean_expr • DIFFERENT arithmetic_expr
   77             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   78             | boolean_expr • LESS arithmetic_expr
   79             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   80             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 85
    DIFFERENT      shift, and go to state 86
    LESS_OR_EQUAL  shift, and go to state 87
    LESS           shift, and go to state 88
    MORE_OR_EQUAL  shift, and go to state 89
    MORE           shift, and go to state 90

    DO  reduce using rule 64 ($@15)

    $@15  go to state 127


State 97

   59 read: READ OPEN_PARENTHESIS IDENT • $@13 CLOSE_PARENTHESIS SEMICOLON

    $default  reduce using rule 58 ($@13)

    $@13  go to state 128


State 98

   60 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list • CLOSE_PARENTHESIS SEMICOLON
   61 write_boolean_expr_list: write_boolean_expr_list • COMMA boolean_expr

    CLOSE_PARENTHESIS  shift, and go to state 129
    COMMA              shift, and go to state 130


State 99

   62 write_boolean_expr_list: boolean_expr •
   75 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   76             | boolean_expr • DIFFERENT arithmetic_expr
   77             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   78             | boolean_expr • LESS arithmetic_expr
   79             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   80             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 85
    DIFFERENT      shift, and go to state 86
    LESS_OR_EQUAL  shift, and go to state 87
    LESS           shift, and go to state 88
    MORE_OR_EQUAL  shift, and go to state 89
    MORE           shift, and go to state 90

    CLOSE_PARENTHESIS  reduce using rule 62 (write_boolean_expr_list)
    COMMA              reduce using rule 62 (write_boolean_expr_list)


State 100

   70 cond_else: ELSE $@17 • command

    IDENT  shift, and go to state 36
    IF     shift, and go to state 37
    WHILE  shift, and go to state 38
    READ   shift, and go to state 39
    WRITE  shift, and go to state 40

    command      go to state 131
    read         go to state 43
    write        go to state 44
    loop         go to state 45
    conditional  go to state 46
    if_then      go to state 47


State 101

   11 declare_var: $@3 id_simple_var_list COLON type $@4 • SEMICOLON

    SEMICOLON  shift, and go to state 132


State 102

   35 by_reference_or_not: VAR •

    $default  reduce using rule 35 (by_reference_or_not)


State 103

   28 procedure_params: OPEN_PARENTHESIS $@8 declare_params • $@9 CLOSE_PARENTHESIS
   30 declare_params: declare_params • declare_param

    VAR  shift, and go to state 102

    CLOSE_PARENTHESIS  reduce using rule 27 ($@9)
    IDENT              reduce using rule 36 (by_reference_or_not)

    $@9                  go to state 133
    declare_param        go to state 134
    by_reference_or_not  go to state 105


State 104

   31 declare_params: declare_param •

    $default  reduce using rule 31 (declare_params)


State 105

   34 declare_param: by_reference_or_not • $@10 id_param_list COLON type $@11 optional_semicolon

    $default  reduce using rule 32 ($@10)

    $@10  go to state 135


State 106

   22 procedure_def: PROCEDURE IDENT $@5 procedure_params SEMICOLON block •

    $default  reduce using rule 22 (procedure_def)


State 107

   25 procedure_def: FUNCTION IDENT $@6 procedure_params COLON IDENT • $@7 SEMICOLON block

    $default  reduce using rule 24 ($@7)

    $@7  go to state 136


State 108

   56 ARGUMENT: IDENT •
   89 F: IDENT • CONTINUA_IDENT

    OPEN_PARENTHESIS   reduce using rule 92 ($@19)
    CLOSE_PARENTHESIS  reduce using rule 56 (ARGUMENT)
    CLOSE_PARENTHESIS  [reduce using rule 91 (CONTINUA_IDENT)]
    COMMA              reduce using rule 56 (ARGUMENT)
    COMMA              [reduce using rule 91 (CONTINUA_IDENT)]
    DIV                reduce using rule 91 (CONTINUA_IDENT)
    ASTERISK           reduce using rule 91 (CONTINUA_IDENT)
    PLUS               reduce using rule 91 (CONTINUA_IDENT)
    MINUS              reduce using rule 91 (CONTINUA_IDENT)
    EQUAL              reduce using rule 91 (CONTINUA_IDENT)
    DIFFERENT          reduce using rule 91 (CONTINUA_IDENT)
    LESS_OR_EQUAL      reduce using rule 91 (CONTINUA_IDENT)
    LESS               reduce using rule 91 (CONTINUA_IDENT)
    MORE_OR_EQUAL      reduce using rule 91 (CONTINUA_IDENT)
    MORE               reduce using rule 91 (CONTINUA_IDENT)

    CONTINUA_IDENT  go to state 83
    $@19            go to state 84

    reduce/reduce conflict on tokens CLOSE_PARENTHESIS, COMMA:
       56 ARGUMENT: IDENT •
       91 CONTINUA_IDENT: ε •
      Example: IDENT •
      First reduce derivation
        ARGUMENT
        ↳ 56: IDENT •
      Second reduce derivation
        ARGUMENT
        ↳ 57: boolean_expr
              ↳ 74: arithmetic_expr
                    ↳ 81: E
                          ↳ 84: T
                                ↳ 87: F
                                      ↳ 89: IDENT CONTINUA_IDENT
                                                  ↳ 91: ε •



State 109

   52 procedure_call: $@12 OPEN_PARENTHESIS procedure_arguments • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 137


State 110

   53 procedure_arguments: args_list •
   54 args_list: args_list • COMMA ARGUMENT

    COMMA  shift, and go to state 138

    CLOSE_PARENTHESIS  reduce using rule 53 (procedure_arguments)


State 111

   55 args_list: ARGUMENT •

    $default  reduce using rule 55 (args_list)


State 112

   57 ARGUMENT: boolean_expr •
   75 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   76             | boolean_expr • DIFFERENT arithmetic_expr
   77             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   78             | boolean_expr • LESS arithmetic_expr
   79             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   80             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 85
    DIFFERENT      shift, and go to state 86
    LESS_OR_EQUAL  shift, and go to state 87
    LESS           shift, and go to state 88
    MORE_OR_EQUAL  shift, and go to state 89
    MORE           shift, and go to state 90

    CLOSE_PARENTHESIS  reduce using rule 57 (ARGUMENT)
    COMMA              reduce using rule 57 (ARGUMENT)


State 113

   73 assignment_operation: $@18 ASSIGNMENT boolean_expr • SEMICOLON
   75 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   76             | boolean_expr • DIFFERENT arithmetic_expr
   77             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   78             | boolean_expr • LESS arithmetic_expr
   79             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   80             | boolean_expr • MORE arithmetic_expr

    SEMICOLON      shift, and go to state 139
    EQUAL          shift, and go to state 85
    DIFFERENT      shift, and go to state 86
    LESS_OR_EQUAL  shift, and go to state 87
    LESS           shift, and go to state 88
    MORE_OR_EQUAL  shift, and go to state 89
    MORE           shift, and go to state 90


State 114

   90 F: OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS •

    $default  reduce using rule 90 (F)


State 115

   93 CONTINUA_IDENT: $@19 procedure_call •

    $default  reduce using rule 93 (CONTINUA_IDENT)


State 116

   75 boolean_expr: boolean_expr EQUAL arithmetic_expr •

    $default  reduce using rule 75 (boolean_expr)


State 117

   76 boolean_expr: boolean_expr DIFFERENT arithmetic_expr •

    $default  reduce using rule 76 (boolean_expr)


State 118

   77 boolean_expr: boolean_expr LESS_OR_EQUAL arithmetic_expr •

    $default  reduce using rule 77 (boolean_expr)


State 119

   78 boolean_expr: boolean_expr LESS arithmetic_expr •

    $default  reduce using rule 78 (boolean_expr)


State 120

   79 boolean_expr: boolean_expr MORE_OR_EQUAL arithmetic_expr •

    $default  reduce using rule 79 (boolean_expr)


State 121

   80 boolean_expr: boolean_expr MORE arithmetic_expr •

    $default  reduce using rule 80 (boolean_expr)


State 122

   68 if_then: IF boolean_expr $@16 THEN • command

    IDENT  shift, and go to state 36
    IF     shift, and go to state 37
    WHILE  shift, and go to state 38
    READ   shift, and go to state 39
    WRITE  shift, and go to state 40

    command      go to state 140
    read         go to state 43
    write        go to state 44
    loop         go to state 45
    conditional  go to state 46
    if_then      go to state 47


State 123

   82 E: E PLUS T •
   85 T: T • ASTERISK F
   86  | T • DIV F

    DIV       shift, and go to state 94
    ASTERISK  shift, and go to state 95

    CLOSE_PARENTHESIS  reduce using rule 82 (E)
    COMMA              reduce using rule 82 (E)
    SEMICOLON          reduce using rule 82 (E)
    THEN               reduce using rule 82 (E)
    DO                 reduce using rule 82 (E)
    PLUS               reduce using rule 82 (E)
    MINUS              reduce using rule 82 (E)
    EQUAL              reduce using rule 82 (E)
    DIFFERENT          reduce using rule 82 (E)
    LESS_OR_EQUAL      reduce using rule 82 (E)
    LESS               reduce using rule 82 (E)
    MORE_OR_EQUAL      reduce using rule 82 (E)
    MORE               reduce using rule 82 (E)


State 124

   83 E: E MINUS T •
   85 T: T • ASTERISK F
   86  | T • DIV F

    DIV       shift, and go to state 94
    ASTERISK  shift, and go to state 95

    CLOSE_PARENTHESIS  reduce using rule 83 (E)
    COMMA              reduce using rule 83 (E)
    SEMICOLON          reduce using rule 83 (E)
    THEN               reduce using rule 83 (E)
    DO                 reduce using rule 83 (E)
    PLUS               reduce using rule 83 (E)
    MINUS              reduce using rule 83 (E)
    EQUAL              reduce using rule 83 (E)
    DIFFERENT          reduce using rule 83 (E)
    LESS_OR_EQUAL      reduce using rule 83 (E)
    LESS               reduce using rule 83 (E)
    MORE_OR_EQUAL      reduce using rule 83 (E)
    MORE               reduce using rule 83 (E)


State 125

   86 T: T DIV F •

    $default  reduce using rule 86 (T)


State 126

   85 T: T ASTERISK F •

    $default  reduce using rule 85 (T)


State 127

   65 loop: WHILE $@14 boolean_expr $@15 • DO command

    DO  shift, and go to state 141


State 128

   59 read: READ OPEN_PARENTHESIS IDENT $@13 • CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 142


State 129

   60 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS • SEMICOLON

    SEMICOLON  shift, and go to state 143


State 130

   61 write_boolean_expr_list: write_boolean_expr_list COMMA • boolean_expr

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENT             shift, and go to state 59
    NUMBER            shift, and go to state 60

    boolean_expr     go to state 144
    arithmetic_expr  go to state 62
    E                go to state 63
    T                go to state 64
    F                go to state 65


State 131

   70 cond_else: ELSE $@17 command •

    $default  reduce using rule 70 (cond_else)


State 132

   11 declare_var: $@3 id_simple_var_list COLON type $@4 SEMICOLON •

    $default  reduce using rule 11 (declare_var)


State 133

   28 procedure_params: OPEN_PARENTHESIS $@8 declare_params $@9 • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 145


State 134

   30 declare_params: declare_params declare_param •

    $default  reduce using rule 30 (declare_params)


State 135

   34 declare_param: by_reference_or_not $@10 • id_param_list COLON type $@11 optional_semicolon

    IDENT  shift, and go to state 146

    id_param_list  go to state 147


State 136

   25 procedure_def: FUNCTION IDENT $@6 procedure_params COLON IDENT $@7 • SEMICOLON block

    SEMICOLON  shift, and go to state 148


State 137

   52 procedure_call: $@12 OPEN_PARENTHESIS procedure_arguments CLOSE_PARENTHESIS •

    $default  reduce using rule 52 (procedure_call)


State 138

   54 args_list: args_list COMMA • ARGUMENT

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENT             shift, and go to state 108
    NUMBER            shift, and go to state 60

    ARGUMENT         go to state 149
    boolean_expr     go to state 112
    arithmetic_expr  go to state 62
    E                go to state 63
    T                go to state 64
    F                go to state 65


State 139

   73 assignment_operation: $@18 ASSIGNMENT boolean_expr SEMICOLON •

    $default  reduce using rule 73 (assignment_operation)


State 140

   68 if_then: IF boolean_expr $@16 THEN command •

    $default  reduce using rule 68 (if_then)


State 141

   65 loop: WHILE $@14 boolean_expr $@15 DO • command

    IDENT  shift, and go to state 36
    IF     shift, and go to state 37
    WHILE  shift, and go to state 38
    READ   shift, and go to state 39
    WRITE  shift, and go to state 40

    command      go to state 150
    read         go to state 43
    write        go to state 44
    loop         go to state 45
    conditional  go to state 46
    if_then      go to state 47


State 142

   59 read: READ OPEN_PARENTHESIS IDENT $@13 CLOSE_PARENTHESIS • SEMICOLON

    SEMICOLON  shift, and go to state 151


State 143

   60 write: WRITE OPEN_PARENTHESIS write_boolean_expr_list CLOSE_PARENTHESIS SEMICOLON •

    $default  reduce using rule 60 (write)


State 144

   61 write_boolean_expr_list: write_boolean_expr_list COMMA boolean_expr •
   75 boolean_expr: boolean_expr • EQUAL arithmetic_expr
   76             | boolean_expr • DIFFERENT arithmetic_expr
   77             | boolean_expr • LESS_OR_EQUAL arithmetic_expr
   78             | boolean_expr • LESS arithmetic_expr
   79             | boolean_expr • MORE_OR_EQUAL arithmetic_expr
   80             | boolean_expr • MORE arithmetic_expr

    EQUAL          shift, and go to state 85
    DIFFERENT      shift, and go to state 86
    LESS_OR_EQUAL  shift, and go to state 87
    LESS           shift, and go to state 88
    MORE_OR_EQUAL  shift, and go to state 89
    MORE           shift, and go to state 90

    CLOSE_PARENTHESIS  reduce using rule 61 (write_boolean_expr_list)
    COMMA              reduce using rule 61 (write_boolean_expr_list)


State 145

   28 procedure_params: OPEN_PARENTHESIS $@8 declare_params $@9 CLOSE_PARENTHESIS •

    $default  reduce using rule 28 (procedure_params)


State 146

   38 id_param_list: IDENT •

    $default  reduce using rule 38 (id_param_list)


State 147

   34 declare_param: by_reference_or_not $@10 id_param_list • COLON type $@11 optional_semicolon
   37 id_param_list: id_param_list • COMMA IDENT

    COMMA  shift, and go to state 152
    COLON  shift, and go to state 153


State 148

   25 procedure_def: FUNCTION IDENT $@6 procedure_params COLON IDENT $@7 SEMICOLON • block

    VAR  shift, and go to state 13

    T_BEGIN    reduce using rule 6 (declaring_vars_block)
    PROCEDURE  reduce using rule 6 (declaring_vars_block)
    FUNCTION   reduce using rule 6 (declaring_vars_block)

    block                 go to state 154
    declaring_vars_block  go to state 15


State 149

   54 args_list: args_list COMMA ARGUMENT •

    $default  reduce using rule 54 (args_list)


State 150

   65 loop: WHILE $@14 boolean_expr $@15 DO command •

    $default  reduce using rule 65 (loop)


State 151

   59 read: READ OPEN_PARENTHESIS IDENT $@13 CLOSE_PARENTHESIS SEMICOLON •

    $default  reduce using rule 59 (read)


State 152

   37 id_param_list: id_param_list COMMA • IDENT

    IDENT  shift, and go to state 155


State 153

   34 declare_param: by_reference_or_not $@10 id_param_list COLON • type $@11 optional_semicolon

    IDENT  shift, and go to state 74

    type  go to state 156


State 154

   25 procedure_def: FUNCTION IDENT $@6 procedure_params COLON IDENT $@7 SEMICOLON block •

    $default  reduce using rule 25 (procedure_def)


State 155

   37 id_param_list: id_param_list COMMA IDENT •

    $default  reduce using rule 37 (id_param_list)


State 156

   34 declare_param: by_reference_or_not $@10 id_param_list COLON type • $@11 optional_semicolon

    $default  reduce using rule 33 ($@11)

    $@11  go to state 157


State 157

   34 declare_param: by_reference_or_not $@10 id_param_list COLON type $@11 • optional_semicolon

    SEMICOLON  shift, and go to state 158

    CLOSE_PARENTHESIS  reduce using rule 40 (optional_semicolon)
    VAR                reduce using rule 40 (optional_semicolon)
    IDENT              reduce using rule 40 (optional_semicolon)

    optional_semicolon  go to state 159


State 158

   39 optional_semicolon: SEMICOLON •

    $default  reduce using rule 39 (optional_semicolon)


State 159

   34 declare_param: by_reference_or_not $@10 id_param_list COLON type $@11 optional_semicolon •

    $default  reduce using rule 34 (declare_param)
