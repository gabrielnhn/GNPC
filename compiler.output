Terminals unused in grammar

    LABEL
    TYPE
    ARRAY
    OF
    PROCEDURE
    GOTO
    OR
    AND
    NOT


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    3 $@2: %empty

    4 block: declaring_vars_block $@2 compound_command

    5 declaring_vars_block: var

    6 $@3: %empty

    7 var: $@3 VAR declare_vars
    8    | %empty

    9 declare_vars: declare_vars declare_var
   10             | declare_var

   11 $@4: %empty

   12 $@5: %empty

   13 declare_var: $@4 id_var_list COLON type $@5 SEMICOLON

   14 type: IDENT

   15 id_var_list: id_var_list COMMA IDENT
   16            | IDENT

   17 idents_list: idents_list COMMA IDENT
   18            | IDENT

   19 compound_command: T_BEGIN commands T_END

   20 commands: commands command
   21         | command

   22 command: assignment
   23        | compound_command
   24        | loop
   25        | conditional

   26 $@6: %empty

   27 $@7: %empty

   28 loop: WHILE $@6 boolean_expr $@7 DO command

   29 conditional: if_then cond_else

   30 $@8: %empty

   31 if_then: IF boolean_expr $@8 THEN command

   32 cond_else: ELSE command
   33          | %empty

   34 $@9: %empty

   35 assignment: IDENT $@9 ASSIGNMENT boolean_expr SEMICOLON

   36 boolean_expr: arithmetic_expr
   37             | boolean_expr EQUAL arithmetic_expr
   38             | boolean_expr DIFFERENT arithmetic_expr
   39             | boolean_expr LESS_OR_EQUAL arithmetic_expr
   40             | boolean_expr LESS arithmetic_expr
   41             | boolean_expr MORE_OR_EQUAL arithmetic_expr
   42             | boolean_expr MORE arithmetic_expr

   43 arithmetic_expr: E

   44 E: E PLUS T
   45  | E MINUS T
   46  | T

   47 T: T ASTERISK F
   48  | T DIV F
   49  | F

   50 F: NUMBER
   51  | IDENT
   52  | OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 2
    OPEN_PARENTHESIS (259) 2 52
    CLOSE_PARENTHESIS (260) 2 52
    COMMA (261) 15 17
    SEMICOLON (262) 2 13 35
    COLON (263) 13
    DOT (264) 2
    T_BEGIN (265) 19
    T_END (266) 19
    VAR (267) 7
    IDENT (268) 2 14 15 16 17 18 35 51
    ASSIGNMENT (269) 35
    LABEL (270)
    TYPE (271)
    ARRAY (272)
    OF (273)
    PROCEDURE (274)
    GOTO (275)
    IF (276) 31
    THEN (277) 31
    ELSE (278) 32
    WHILE (279) 28
    DO (280) 28
    OR (281)
    AND (282)
    NOT (283)
    DIV (284) 48
    ASTERISK (285) 47
    PLUS (286) 44
    MINUS (287) 45
    EQUAL (288) 37
    DIFFERENT (289) 38
    LESS_OR_EQUAL (290) 39
    LESS (291) 40
    MORE_OR_EQUAL (292) 41
    MORE (293) 42
    NUMBER (294) 50
    LOWER_THAN_ELSE (295)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    program (42)
        on left: 2
        on right: 0
    $@1 (43)
        on left: 1
        on right: 2
    block (44)
        on left: 4
        on right: 2
    $@2 (45)
        on left: 3
        on right: 4
    declaring_vars_block (46)
        on left: 5
        on right: 4
    var (47)
        on left: 7 8
        on right: 5
    $@3 (48)
        on left: 6
        on right: 7
    declare_vars (49)
        on left: 9 10
        on right: 7 9
    declare_var (50)
        on left: 13
        on right: 9 10
    $@4 (51)
        on left: 11
        on right: 13
    $@5 (52)
        on left: 12
        on right: 13
    type (53)
        on left: 14
        on right: 13
    id_var_list (54)
        on left: 15 16
        on right: 13 15
    idents_list (55)
        on left: 17 18
        on right: 2 17
    compound_command (56)
        on left: 19
        on right: 4 23
    commands (57)
        on left: 20 21
        on right: 19 20
    command (58)
        on left: 22 23 24 25
        on right: 20 21 28 31 32
    loop (59)
        on left: 28
        on right: 24
    $@6 (60)
        on left: 26
        on right: 28
    $@7 (61)
        on left: 27
        on right: 28
    conditional (62)
        on left: 29
        on right: 25
    if_then (63)
        on left: 31
        on right: 29
    $@8 (64)
        on left: 30
        on right: 31
    cond_else (65)
        on left: 32 33
        on right: 29
    assignment (66)
        on left: 35
        on right: 22
    $@9 (67)
        on left: 34
        on right: 35
    boolean_expr (68)
        on left: 36 37 38 39 40 41 42
        on right: 28 31 35 37 38 39 40 41 42 52
    arithmetic_expr (69)
        on left: 43
        on right: 36 37 38 39 40 41 42
    E (70)
        on left: 44 45 46
        on right: 43 44 45
    T (71)
        on left: 47 48 49
        on right: 44 45 46 47 48
    F (72)
        on left: 50 51 52
        on right: 47 48 49


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 PROGRAM . IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 5


State 5

    2 program: $@1 PROGRAM IDENT . OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    OPEN_PARENTHESIS  shift, and go to state 6


State 6

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS . idents_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENT  shift, and go to state 7

    idents_list  go to state 8


State 7

   18 idents_list: IDENT .

    $default  reduce using rule 18 (idents_list)


State 8

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list . CLOSE_PARENTHESIS SEMICOLON block DOT
   17 idents_list: idents_list . COMMA IDENT

    CLOSE_PARENTHESIS  shift, and go to state 9
    COMMA              shift, and go to state 10


State 9

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS . SEMICOLON block DOT

    SEMICOLON  shift, and go to state 11


State 10

   17 idents_list: idents_list COMMA . IDENT

    IDENT  shift, and go to state 12


State 11

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON . block DOT

    T_BEGIN   reduce using rule 8 (var)
    $default  reduce using rule 6 ($@3)

    block                 go to state 13
    declaring_vars_block  go to state 14
    var                   go to state 15
    $@3                   go to state 16


State 12

   17 idents_list: idents_list COMMA IDENT .

    $default  reduce using rule 17 (idents_list)


State 13

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block . DOT

    DOT  shift, and go to state 17


State 14

    4 block: declaring_vars_block . $@2 compound_command

    $default  reduce using rule 3 ($@2)

    $@2  go to state 18


State 15

    5 declaring_vars_block: var .

    $default  reduce using rule 5 (declaring_vars_block)


State 16

    7 var: $@3 . VAR declare_vars

    VAR  shift, and go to state 19


State 17

    2 program: $@1 PROGRAM IDENT OPEN_PARENTHESIS idents_list CLOSE_PARENTHESIS SEMICOLON block DOT .

    $default  reduce using rule 2 (program)


State 18

    4 block: declaring_vars_block $@2 . compound_command

    T_BEGIN  shift, and go to state 20

    compound_command  go to state 21


State 19

    7 var: $@3 VAR . declare_vars

    $default  reduce using rule 11 ($@4)

    declare_vars  go to state 22
    declare_var   go to state 23
    $@4           go to state 24


State 20

   19 compound_command: T_BEGIN . commands T_END

    T_BEGIN  shift, and go to state 20
    IDENT    shift, and go to state 25
    IF       shift, and go to state 26
    WHILE    shift, and go to state 27

    compound_command  go to state 28
    commands          go to state 29
    command           go to state 30
    loop              go to state 31
    conditional       go to state 32
    if_then           go to state 33
    assignment        go to state 34


State 21

    4 block: declaring_vars_block $@2 compound_command .

    $default  reduce using rule 4 (block)


State 22

    7 var: $@3 VAR declare_vars .
    9 declare_vars: declare_vars . declare_var

    IDENT     reduce using rule 11 ($@4)
    $default  reduce using rule 7 (var)

    declare_var  go to state 35
    $@4          go to state 24


State 23

   10 declare_vars: declare_var .

    $default  reduce using rule 10 (declare_vars)


State 24

   13 declare_var: $@4 . id_var_list COLON type $@5 SEMICOLON

    IDENT  shift, and go to state 36

    id_var_list  go to state 37


State 25

   35 assignment: IDENT . $@9 ASSIGNMENT boolean_expr SEMICOLON

    $default  reduce using rule 34 ($@9)

    $@9  go to state 38


State 26

   31 if_then: IF . boolean_expr $@8 THEN command

    OPEN_PARENTHESIS  shift, and go to state 39
    IDENT             shift, and go to state 40
    NUMBER            shift, and go to state 41

    boolean_expr     go to state 42
    arithmetic_expr  go to state 43
    E                go to state 44
    T                go to state 45
    F                go to state 46


State 27

   28 loop: WHILE . $@6 boolean_expr $@7 DO command

    $default  reduce using rule 26 ($@6)

    $@6  go to state 47


State 28

   23 command: compound_command .

    $default  reduce using rule 23 (command)


State 29

   19 compound_command: T_BEGIN commands . T_END
   20 commands: commands . command

    T_BEGIN  shift, and go to state 20
    T_END    shift, and go to state 48
    IDENT    shift, and go to state 25
    IF       shift, and go to state 26
    WHILE    shift, and go to state 27

    compound_command  go to state 28
    command           go to state 49
    loop              go to state 31
    conditional       go to state 32
    if_then           go to state 33
    assignment        go to state 34


State 30

   21 commands: command .

    $default  reduce using rule 21 (commands)


State 31

   24 command: loop .

    $default  reduce using rule 24 (command)


State 32

   25 command: conditional .

    $default  reduce using rule 25 (command)


State 33

   29 conditional: if_then . cond_else

    ELSE  shift, and go to state 50

    $default  reduce using rule 33 (cond_else)

    cond_else  go to state 51


State 34

   22 command: assignment .

    $default  reduce using rule 22 (command)


State 35

    9 declare_vars: declare_vars declare_var .

    $default  reduce using rule 9 (declare_vars)


State 36

   16 id_var_list: IDENT .

    $default  reduce using rule 16 (id_var_list)


State 37

   13 declare_var: $@4 id_var_list . COLON type $@5 SEMICOLON
   15 id_var_list: id_var_list . COMMA IDENT

    COMMA  shift, and go to state 52
    COLON  shift, and go to state 53


State 38

   35 assignment: IDENT $@9 . ASSIGNMENT boolean_expr SEMICOLON

    ASSIGNMENT  shift, and go to state 54


State 39

   52 F: OPEN_PARENTHESIS . boolean_expr CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 39
    IDENT             shift, and go to state 40
    NUMBER            shift, and go to state 41

    boolean_expr     go to state 55
    arithmetic_expr  go to state 43
    E                go to state 44
    T                go to state 45
    F                go to state 46


State 40

   51 F: IDENT .

    $default  reduce using rule 51 (F)


State 41

   50 F: NUMBER .

    $default  reduce using rule 50 (F)


State 42

   31 if_then: IF boolean_expr . $@8 THEN command
   37 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   38             | boolean_expr . DIFFERENT arithmetic_expr
   39             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   40             | boolean_expr . LESS arithmetic_expr
   41             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   42             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 56
    DIFFERENT      shift, and go to state 57
    LESS_OR_EQUAL  shift, and go to state 58
    LESS           shift, and go to state 59
    MORE_OR_EQUAL  shift, and go to state 60
    MORE           shift, and go to state 61

    $default  reduce using rule 30 ($@8)

    $@8  go to state 62


State 43

   36 boolean_expr: arithmetic_expr .

    $default  reduce using rule 36 (boolean_expr)


State 44

   43 arithmetic_expr: E .
   44 E: E . PLUS T
   45  | E . MINUS T

    PLUS   shift, and go to state 63
    MINUS  shift, and go to state 64

    $default  reduce using rule 43 (arithmetic_expr)


State 45

   46 E: T .
   47 T: T . ASTERISK F
   48  | T . DIV F

    DIV       shift, and go to state 65
    ASTERISK  shift, and go to state 66

    $default  reduce using rule 46 (E)


State 46

   49 T: F .

    $default  reduce using rule 49 (T)


State 47

   28 loop: WHILE $@6 . boolean_expr $@7 DO command

    OPEN_PARENTHESIS  shift, and go to state 39
    IDENT             shift, and go to state 40
    NUMBER            shift, and go to state 41

    boolean_expr     go to state 67
    arithmetic_expr  go to state 43
    E                go to state 44
    T                go to state 45
    F                go to state 46


State 48

   19 compound_command: T_BEGIN commands T_END .

    $default  reduce using rule 19 (compound_command)


State 49

   20 commands: commands command .

    $default  reduce using rule 20 (commands)


State 50

   32 cond_else: ELSE . command

    T_BEGIN  shift, and go to state 20
    IDENT    shift, and go to state 25
    IF       shift, and go to state 26
    WHILE    shift, and go to state 27

    compound_command  go to state 28
    command           go to state 68
    loop              go to state 31
    conditional       go to state 32
    if_then           go to state 33
    assignment        go to state 34


State 51

   29 conditional: if_then cond_else .

    $default  reduce using rule 29 (conditional)


State 52

   15 id_var_list: id_var_list COMMA . IDENT

    IDENT  shift, and go to state 69


State 53

   13 declare_var: $@4 id_var_list COLON . type $@5 SEMICOLON

    IDENT  shift, and go to state 70

    type  go to state 71


State 54

   35 assignment: IDENT $@9 ASSIGNMENT . boolean_expr SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 39
    IDENT             shift, and go to state 40
    NUMBER            shift, and go to state 41

    boolean_expr     go to state 72
    arithmetic_expr  go to state 43
    E                go to state 44
    T                go to state 45
    F                go to state 46


State 55

   37 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   38             | boolean_expr . DIFFERENT arithmetic_expr
   39             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   40             | boolean_expr . LESS arithmetic_expr
   41             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   42             | boolean_expr . MORE arithmetic_expr
   52 F: OPEN_PARENTHESIS boolean_expr . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 73
    EQUAL              shift, and go to state 56
    DIFFERENT          shift, and go to state 57
    LESS_OR_EQUAL      shift, and go to state 58
    LESS               shift, and go to state 59
    MORE_OR_EQUAL      shift, and go to state 60
    MORE               shift, and go to state 61


State 56

   37 boolean_expr: boolean_expr EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 39
    IDENT             shift, and go to state 40
    NUMBER            shift, and go to state 41

    arithmetic_expr  go to state 74
    E                go to state 44
    T                go to state 45
    F                go to state 46


State 57

   38 boolean_expr: boolean_expr DIFFERENT . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 39
    IDENT             shift, and go to state 40
    NUMBER            shift, and go to state 41

    arithmetic_expr  go to state 75
    E                go to state 44
    T                go to state 45
    F                go to state 46


State 58

   39 boolean_expr: boolean_expr LESS_OR_EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 39
    IDENT             shift, and go to state 40
    NUMBER            shift, and go to state 41

    arithmetic_expr  go to state 76
    E                go to state 44
    T                go to state 45
    F                go to state 46


State 59

   40 boolean_expr: boolean_expr LESS . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 39
    IDENT             shift, and go to state 40
    NUMBER            shift, and go to state 41

    arithmetic_expr  go to state 77
    E                go to state 44
    T                go to state 45
    F                go to state 46


State 60

   41 boolean_expr: boolean_expr MORE_OR_EQUAL . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 39
    IDENT             shift, and go to state 40
    NUMBER            shift, and go to state 41

    arithmetic_expr  go to state 78
    E                go to state 44
    T                go to state 45
    F                go to state 46


State 61

   42 boolean_expr: boolean_expr MORE . arithmetic_expr

    OPEN_PARENTHESIS  shift, and go to state 39
    IDENT             shift, and go to state 40
    NUMBER            shift, and go to state 41

    arithmetic_expr  go to state 79
    E                go to state 44
    T                go to state 45
    F                go to state 46


State 62

   31 if_then: IF boolean_expr $@8 . THEN command

    THEN  shift, and go to state 80


State 63

   44 E: E PLUS . T

    OPEN_PARENTHESIS  shift, and go to state 39
    IDENT             shift, and go to state 40
    NUMBER            shift, and go to state 41

    T  go to state 81
    F  go to state 46


State 64

   45 E: E MINUS . T

    OPEN_PARENTHESIS  shift, and go to state 39
    IDENT             shift, and go to state 40
    NUMBER            shift, and go to state 41

    T  go to state 82
    F  go to state 46


State 65

   48 T: T DIV . F

    OPEN_PARENTHESIS  shift, and go to state 39
    IDENT             shift, and go to state 40
    NUMBER            shift, and go to state 41

    F  go to state 83


State 66

   47 T: T ASTERISK . F

    OPEN_PARENTHESIS  shift, and go to state 39
    IDENT             shift, and go to state 40
    NUMBER            shift, and go to state 41

    F  go to state 84


State 67

   28 loop: WHILE $@6 boolean_expr . $@7 DO command
   37 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   38             | boolean_expr . DIFFERENT arithmetic_expr
   39             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   40             | boolean_expr . LESS arithmetic_expr
   41             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   42             | boolean_expr . MORE arithmetic_expr

    EQUAL          shift, and go to state 56
    DIFFERENT      shift, and go to state 57
    LESS_OR_EQUAL  shift, and go to state 58
    LESS           shift, and go to state 59
    MORE_OR_EQUAL  shift, and go to state 60
    MORE           shift, and go to state 61

    $default  reduce using rule 27 ($@7)

    $@7  go to state 85


State 68

   32 cond_else: ELSE command .

    $default  reduce using rule 32 (cond_else)


State 69

   15 id_var_list: id_var_list COMMA IDENT .

    $default  reduce using rule 15 (id_var_list)


State 70

   14 type: IDENT .

    $default  reduce using rule 14 (type)


State 71

   13 declare_var: $@4 id_var_list COLON type . $@5 SEMICOLON

    $default  reduce using rule 12 ($@5)

    $@5  go to state 86


State 72

   35 assignment: IDENT $@9 ASSIGNMENT boolean_expr . SEMICOLON
   37 boolean_expr: boolean_expr . EQUAL arithmetic_expr
   38             | boolean_expr . DIFFERENT arithmetic_expr
   39             | boolean_expr . LESS_OR_EQUAL arithmetic_expr
   40             | boolean_expr . LESS arithmetic_expr
   41             | boolean_expr . MORE_OR_EQUAL arithmetic_expr
   42             | boolean_expr . MORE arithmetic_expr

    SEMICOLON      shift, and go to state 87
    EQUAL          shift, and go to state 56
    DIFFERENT      shift, and go to state 57
    LESS_OR_EQUAL  shift, and go to state 58
    LESS           shift, and go to state 59
    MORE_OR_EQUAL  shift, and go to state 60
    MORE           shift, and go to state 61


State 73

   52 F: OPEN_PARENTHESIS boolean_expr CLOSE_PARENTHESIS .

    $default  reduce using rule 52 (F)


State 74

   37 boolean_expr: boolean_expr EQUAL arithmetic_expr .

    $default  reduce using rule 37 (boolean_expr)


State 75

   38 boolean_expr: boolean_expr DIFFERENT arithmetic_expr .

    $default  reduce using rule 38 (boolean_expr)


State 76

   39 boolean_expr: boolean_expr LESS_OR_EQUAL arithmetic_expr .

    $default  reduce using rule 39 (boolean_expr)


State 77

   40 boolean_expr: boolean_expr LESS arithmetic_expr .

    $default  reduce using rule 40 (boolean_expr)


State 78

   41 boolean_expr: boolean_expr MORE_OR_EQUAL arithmetic_expr .

    $default  reduce using rule 41 (boolean_expr)


State 79

   42 boolean_expr: boolean_expr MORE arithmetic_expr .

    $default  reduce using rule 42 (boolean_expr)


State 80

   31 if_then: IF boolean_expr $@8 THEN . command

    T_BEGIN  shift, and go to state 20
    IDENT    shift, and go to state 25
    IF       shift, and go to state 26
    WHILE    shift, and go to state 27

    compound_command  go to state 28
    command           go to state 88
    loop              go to state 31
    conditional       go to state 32
    if_then           go to state 33
    assignment        go to state 34


State 81

   44 E: E PLUS T .
   47 T: T . ASTERISK F
   48  | T . DIV F

    DIV       shift, and go to state 65
    ASTERISK  shift, and go to state 66

    $default  reduce using rule 44 (E)


State 82

   45 E: E MINUS T .
   47 T: T . ASTERISK F
   48  | T . DIV F

    DIV       shift, and go to state 65
    ASTERISK  shift, and go to state 66

    $default  reduce using rule 45 (E)


State 83

   48 T: T DIV F .

    $default  reduce using rule 48 (T)


State 84

   47 T: T ASTERISK F .

    $default  reduce using rule 47 (T)


State 85

   28 loop: WHILE $@6 boolean_expr $@7 . DO command

    DO  shift, and go to state 89


State 86

   13 declare_var: $@4 id_var_list COLON type $@5 . SEMICOLON

    SEMICOLON  shift, and go to state 90


State 87

   35 assignment: IDENT $@9 ASSIGNMENT boolean_expr SEMICOLON .

    $default  reduce using rule 35 (assignment)


State 88

   31 if_then: IF boolean_expr $@8 THEN command .

    $default  reduce using rule 31 (if_then)


State 89

   28 loop: WHILE $@6 boolean_expr $@7 DO . command

    T_BEGIN  shift, and go to state 20
    IDENT    shift, and go to state 25
    IF       shift, and go to state 26
    WHILE    shift, and go to state 27

    compound_command  go to state 28
    command           go to state 91
    loop              go to state 31
    conditional       go to state 32
    if_then           go to state 33
    assignment        go to state 34


State 90

   13 declare_var: $@4 id_var_list COLON type $@5 SEMICOLON .

    $default  reduce using rule 13 (declare_var)


State 91

   28 loop: WHILE $@6 boolean_expr $@7 DO command .

    $default  reduce using rule 28 (loop)
